{"version":3,"file":"static/js/678.06e141e4.chunk.js","mappings":"+IAaA,IAVuB,SAACA,GACtB,IAAMC,GAAkBC,EAAAA,EAAAA,MAMxB,OAJAC,EAAAA,EAAAA,YAAU,WACRF,EAAgBD,MAGX,O,qOC8BT,EA9BiB,WACf,IAAMI,GAAgBC,EAAAA,EAAAA,GAAeC,EAAAA,IACrC,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEIC,GAAcC,EAAAA,EAAAA,GAChBF,EAAaG,IAAIC,EAAAA,GAAAA,OAKnB,OAFoB,OAAhBH,GAAwBA,GAAe,KAAGA,EAAc,IAG1D,SAACI,EAAA,EAAD,CACEC,KAAK,QACLC,KAAMN,EACNO,MAAOZ,GAAgC,EACvCa,MAAM,UACNC,aAAc,EACdC,WAAY,SAACC,GACX,IAAMC,GAAQC,EAAAA,EAAAA,GACZd,EAAae,WACbX,EAAAA,GAAAA,KACAY,OAAOJ,EAAOL,OAGhB,OAAO,SAACU,EAAA,GAAD,kBAAoBL,GAApB,IAA4BM,UAAWC,EAAAA,GAAMC,GAAIP,S,yFClCnDQ,EAAe,SAACC,GAC3B,IAAIC,EAAOD,EAAKE,cACZC,EAAQH,EAAKI,WAAa,EAC1BC,EAAML,EAAKM,UAETC,EAAab,OAAOO,GAEtBO,EAAcd,OAAOS,GAErBK,EAAYC,OAAS,IACvBD,EAAc,IAAMA,GAGtB,IAAIE,EAAYhB,OAAOW,GAMvB,OAJIK,EAAUD,OAAS,IACrBC,EAAY,IAAMA,GAGd,GAAN,OAAUH,EAAV,YAAwBC,EAAxB,YAAuCE,ICnB5BC,EAAc,SAACX,GAAD,OACzBA,aAAgBY,OAASC,OAAOC,MAAMD,OAAOb,K,qCCkCzCe,EAAiB,IAAIH,KAAKA,KAAKI,IAAI,IAAM,EAAG,EAAG,EAAG,EAAG,IAErDC,EAAoB,SAAC,GAIpB,IAHLC,EAGI,EAHJA,0BAIQC,GAAcC,EAAAA,EAAAA,MAAdD,UAER,OACE,SAACE,EAAA,EAAD,CACE,aAAW,eACXC,QAAS,WACPH,IACAD,KAJJ,UAOE,SAACK,EAAA,EAAD,CAAkBC,GAAI,CAAEC,SAAU,aAKlCC,EAAyB,SAAC,GAIzB,IAHLC,EAGI,EAHJA,WAIA,GAAkCP,EAAAA,EAAAA,MAA1BQ,EAAR,EAAQA,cAAR,EAAuBC,OA+BvB,OA7BAxD,EAAAA,EAAAA,YAAU,WACR,IAAMyD,EAA2B,SAC/BC,EACAC,GAEA,IAAMhC,ECrEgB,SAACiC,GAC3B,IAAMC,EAAgBD,EAAWE,MAAM,2BAEvC,OAAO,IAAIvB,KACTC,OAAM,OAACqB,QAAD,IAACA,OAAD,EAACA,EAAgB,IACvBrB,OAAM,OAACqB,QAAD,IAACA,OAAD,EAACA,EAAgB,IAAM,EAC7BrB,OAAM,OAACqB,QAAD,IAACA,OAAD,EAACA,EAAgB,KD+DRE,CAAaL,GACtBpB,EAAYX,IACd4B,EAAcI,EAAUhC,IAI5B,GAAI2B,EAAY,CACd,IAAMU,EAAQV,EAAWQ,MACvB,mDAGF,OAAIE,QAAJ,IAAIA,GAAAA,EAAQ,IACVP,EAAyBO,EAAM,GAAI,cAErC,OAAIA,QAAJ,IAAIA,GAAAA,EAAQ,IACVP,EAAyBO,EAAM,GAAI,iBAGrCT,EAAc,aAAc,MAC5BA,EAAc,WAAY,QAG3B,CAACD,IAEG,MAGIW,EAAuB,SAClCtC,EACAuC,EACAC,GAEKxC,GAASW,EAAYX,GAEfA,EAAO,IAAIY,KACpB4B,EAAOD,GAAa,0BACXvC,EAAOe,IAChByB,EAAOD,GAAP,sBACExB,EAAe0B,eAAe,QAAS,CAAEC,SAAU,QAASC,MAAM,KAAK,KALzEH,EAAOD,GAAa,oBAcjB,SAASK,EAAT,GAI+D,IAHpEC,EAGmE,EAHnEA,KACAC,EAEmE,EAFnEA,MACGC,GACgE,YAC7DC,EAAeH,EAAKL,OAAOM,EAAMG,MACjCC,EAAYL,EAAKM,QAAQL,EAAMG,SAAWD,EAEhD,OACE,SAACI,EAAA,GAAD,QACEC,KAAM,aACNC,eAAa,EACbC,wBAAsB,EACtBC,OAAO,QACPC,MAAO,CAAC,OAAQ,QAAS,OACzBC,QAAS3C,EACT4C,MAAOb,EAAMa,MACbC,SAAU,SAAC5D,GACT6C,EAAKjB,cAAckB,EAAMG,KAAMjD,GAAM,IAEvC6D,YAAa,SAACvE,GAAD,OACX,SAACwE,EAAA,GAAD,kBACMxE,GADN,IAEEyE,QAAQ,WACRd,KAAMH,EAAMG,KACZe,MAAOd,EACPe,WACGf,GAAaF,EAAeA,EAAe,IAE9CkB,OAAQrB,EAAKsB,gBAGbpB,IAKV,IAAMqB,EAAgB,SAACvC,GACrB,IAAMW,EAAyC,GAEzC6B,EAAYxC,EAAO,cACnByC,EAAUzC,EAAO,YASvB,OAPAS,EAAqB+B,EAAW,aAAc7B,GAE9CF,EAAqBgC,EAAS,WAAY9B,GAC1B,OAAZ8B,GAAkC,OAAdD,GAAsBC,GAAWD,IACvD7B,EAAO,YAAc,6BAGhBA,GAuFT,EApFqB,WACnB,IAAM+B,GAAQC,EAAAA,EAAAA,KACRC,GAAcC,EAAAA,EAAAA,GAAcH,EAAMI,YAAYC,KAAK,MAAO,CAC9DC,OAAO,IAGT,GAAwCpG,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBoG,EAArB,KAEMnD,EAAajD,EAAaG,IAAIC,EAAAA,GAAAA,cAEpC,OACE,SAACiG,EAAA,EAAD,CAAKvD,GAAI,CAAEwD,GAAI,SAAUC,SAAU,GAAnC,UACE,SAAC,KAAD,CACEC,cAAe,CACb,aAAc,KACd,WAAY,MAEdC,SAAUf,EACVgB,SAAQ,mCAAE,WAAOvD,EAAQwD,GAAf,2EACR,IACQhB,EAAYxC,EAAO,cACnByC,EAAUzC,EAAO,YAEjByD,GAAY9F,EAAAA,EAAAA,GAChBd,EAAae,WACbX,EAAAA,GAAAA,aACA,QAAUiB,EAAasE,GAAa,OAAStE,EAAauE,IAE5DQ,EAAgBQ,GATlB,QAWED,EAAQE,eAAc,GAZhB,2CAAF,wDANV,UAsBE,SAACR,EAAA,EAAD,WACE,SAAC,KAAD,CAAMS,YAAU,EAAhB,UACE,UAACC,EAAA,EAAD,CACEC,QAASjB,EAAc,EAAI,EAC3BkB,UAAWlB,EAAc,SAAW,MACpCmB,WAAW,SACXC,eAAe,SACfrE,GAAI,CAAEsE,SAAU,QALlB,WAOE,SAACpE,EAAD,CAAwBC,WAAYA,KACpC,SAAC,KAAD,CACEsB,KAAK,aACLrD,UAAWgD,EACXmD,MAAM,gBAER,SAAC,KAAD,CACE9C,KAAK,WACLrD,UAAWgD,EACXmD,MAAM,cAER,UAAChB,EAAA,EAAD,YACE,SAACiB,EAAA,EAAD,CACEjC,QAAQ,WACR/E,KAAK,QACLwC,GAAI,GAHN,oBAQC9C,EAAaG,IAAIC,EAAAA,GAAAA,eAChB,SAACmC,EAAD,CACEC,0BAA2B,WACzB4D,GACEtF,EAAAA,EAAAA,GACEd,EAAae,WACbX,EAAAA,GAAAA,kBAKN,oB,8BE9NpB,EAlBkB,SAAC,GAMZ,IALLmH,EAKI,EALJA,QACAC,EAII,EAJJA,MAKA,OACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,UAAYF,EAAQ,KACpB,SAACE,EAAA,EAAD,UACGH,EAAQI,MAAyB,MAAjBJ,EAAQI,KAAeJ,EAAQI,KAAO,OAEzD,SAACD,EAAA,EAAD,UAAYH,EAAQK,e,kDCLpBC,GAAeC,EAAAA,EAAAA,KAAO,SAACC,GAAD,OAC1B,SAACC,EAAA,GAAD,QAAWC,UAAW,EAAGC,QAAM,GAAKH,MADjBD,EAElB,gBAAGjC,EAAH,EAAGA,MAAH,MAAgB,CACjBsC,OAAO,aAAD,OAAetC,EAAMuC,QAAQC,SACnC,qBAAsB,GACtB,WAAY,CACVC,QAAS,YAIPC,GAAsBT,EAAAA,EAAAA,KAAO,SAACC,GAAD,OACjC,SAACS,EAAA,GAAD,QACEC,YAAY,SAACC,EAAA,EAAD,CAA0B5F,GAAI,CAAEC,SAAU,aAClDgF,MAHoBD,EAKzB,kBAAgB,CACjBa,gBACyB,SAFxB,EAAG9C,MAEIuC,QAAQQ,KACV,2BACA,qBACNC,cAAe,kBAGXC,GAAsBhB,EAAAA,EAAAA,IAAOiB,EAAAA,EAAPjB,EAAyB,kBAAgB,CACnEkB,QADmD,EAAGnD,MACvCmB,QAAQ,GACvBiC,UAAW,oC,UC4Bb,GAvD0B,SAAC,GAUpB,IATLC,EASI,EATJA,UACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,aACAC,EAMI,EANJA,SAOA,GAAgCC,EAAAA,EAAAA,WAAS,GAAzC,eAAOC,EAAP,KAAiBC,EAAjB,KAEA,OACE,UAAC3B,EAAD,CACE4B,gBAAiB,CAAEC,eAAe,GAClCH,SAAUA,EACVrE,SAAU,kBAAMsE,GAAY,SAACD,GAAD,OAAeA,MAC3CzG,GAAI,CACF6G,SAAU,OACV,iCAAkC,CAAEA,SAAU,sBANlD,WASE,SAACpB,EAAD,CACE,gBAAeW,EACfU,GAAIV,EACJT,YAAY,SAACoB,EAAA,EAAD,IACZ/G,GAAI,GAJN,UAME,UAACiE,EAAA,EAAD,CACEE,UAAU,MACVE,eAAe,gBACfD,WAAW,SACXpE,GAAI,CACF6G,SAAU,QAEZpD,SAAU,EAPZ,WASE,SAACuD,EAAA,EAAD,CACEhH,GAAI,CACFiH,aAAc,WACdC,SAAU,UAHd,SAMGb,IAGFC,QAGL,SAACN,EAAD,UAAsBO,Q,iNC0J5B,GAhLiB,SAAC,GAcX,IAbLY,EAaI,EAbJA,SACAC,EAYI,EAZJA,YACAC,EAWI,EAXJA,cACAC,EAUI,EAVJA,UACAC,EASI,EATJA,uBAUMC,EAASL,EAASK,OAAOC,KAAI,SAAChD,GAAD,OAAaA,EAAQK,YAAU4C,KAAK,MACvE,GAAgDlB,EAAAA,EAAAA,WAAS,GAAzD,eAAOmB,EAAP,KAAyBC,EAAzB,KACMC,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,GAAAA,MACjB,GAAuBC,EAAAA,EAAAA,MAAhBC,GAAP,eAEMC,GAAcC,EAAAA,GAAAA,KAEdC,EAAkB,mBAAelB,EAASmB,KAM1CC,EAAoB,WACxBX,GAAoB,IAGhBY,EAAsB,mCAAG,qGAErBC,GAFqB,OAEkBnB,IACZoB,OAAOrB,EAAe,GAH5B,SAKrBQ,GACJc,EAAAA,GAAAA,IAAgB,CACdL,IAAKlB,EACLE,UAAWmB,EACXG,SAAUb,EAASc,UAErBC,SAXyB,OAY3BX,EAAY,mBAAoB,QAZL,gDAc3BY,QAAQvG,MAAM,0BAAd,MAd2B,yBAgB3B+F,IAhB2B,4EAAH,qDAoB5B,OACE,iCACE,SAAC,GAAD,CACEnC,UAAWiC,EACXhC,YAAW,UAAKc,EAAS1F,KAAd,cACT+F,EAAOvI,OAASuI,EAAS,YADhB,KAGXlB,cACE,SAAC/C,EAAA,EAAD,CACEvD,GAAI,CAAEgJ,SAAU,WAAYC,MAAO,QACnCnJ,QAAS,SAACoJ,GAAD,OAAOA,EAAEC,mBAFpB,UAIE,UAACC,GAAA,EAAD,CACEC,UAAU,eACVlF,UAAU,OACVmF,SAAU,CACR9L,KAAM,QACNG,MAAO,WAETqC,GAAI,CACFgJ,SAAU,WACVO,IAAK,MACLC,MAAO,MACPC,UAAW,mBACX,wBAAyB,CACvBR,MAAO,OACPS,OAAQ,OACRC,UAAW,UAGfC,MAAM,SAACC,GAAA,EAAD,IAlBR,WAoBE,SAACC,GAAA,EAAD,CACEF,MAAM,SAACG,GAAA,EAAD,IACNC,aAAa,kBACblK,QA/DoB,SAACoJ,GACjCtB,GAAoB,OAgEV,SAACkC,GAAA,EAAD,CACEF,MAAM,SAACK,GAAA,EAAD,IACND,aAAa,eACblK,QAAS,WACPyH,EAAuB,CAAE2C,MAAM,EAAMxF,MAAO2C,QAGhD,SAACyC,GAAA,EAAD,CACEF,MAAM,SAACO,GAAA,EAAD,IACNH,aAAa,gBACblK,QAAS,WACPyH,EAAuB,CACrB2C,MAAM,EACNxF,MAAO2C,EACP3D,cAAeyD,YAjD7B,UAyDE,UAACiD,GAAA,EAAD,CACEhM,UAAU,QACV4B,GAAI,CACF,uBAAwB,CACtBqK,GAAI,UACJC,GAAI,UACJC,UAAW,WANjB,WAUE,SAACC,GAAA,EAAD,WACE,UAAC7F,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,SAACoC,EAAA,EAAD,oBAEF,SAACpC,EAAA,EAAD,WACE,SAACoC,EAAA,EAAD,8BAEF,SAACpC,EAAA,EAAD,WACE,SAACoC,EAAA,EAAD,+BAKN,SAACyD,GAAA,EAAD,UACGtD,EAASK,OAAOC,KAAI,SAACD,EAAQ9C,GAAT,OACnB,SAAC,EAAD,CAA4BD,QAAS+C,EAAQ9C,MAAOA,GAApC8C,EAAOc,gBAK/B,UAACoC,GAAA,EAAD,CACER,KAAMvC,EACNgD,QAASpC,EACT,kBAAgB,+BAChB,mBAAiB,qCAJnB,WAME,SAACqC,GAAA,EAAD,CAAa9D,GAAG,+BAAhB,2CAGA,SAAC+D,GAAA,EAAD,WACE,UAACC,GAAA,EAAD,CAAmBhE,GAAG,qCAAtB,kDACwC,KACtC,4BAASK,EAAS1F,OAFpB,UAKF,UAACsJ,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CAAQlL,QAASyI,EAAjB,iBACA,UAACyC,GAAA,EAAD,CACElL,QAAS0I,EACTyC,WAAS,EACTC,SAA2B,SAAjBhD,EAHZ,UAKoB,eAAjBA,IACC,SAACiD,GAAA,EAAD,CAAkB3N,KAAM,GAAIwC,GAAI,CAAEoL,GAAI,YAN1C,mB,WCtLV,GAZyB,SAAC,GAInB,IAHLtL,EAGI,EAHJA,QAIA,OACE,SAACD,EAAA,EAAD,CAAY,aAAW,SAASC,QAASA,EAAzC,UACE,SAACiK,GAAA,EAAD,O,4CCoDAsB,GAAmB,SACvBnC,EACA7H,EACAC,GAEI,IADJgK,EACG,yDACCpC,EAAEqC,OAAOpJ,MAAMxB,MAAM,UAAa2K,GAAgC,MAAnBpC,EAAEqC,OAAOpJ,QAC1Dd,EAAKjB,cAAckB,EAAMG,KAAMyH,EAAEqC,OAAOpJ,QAItCwB,GAAW,SAACtD,GAChB,IAAMW,EAAyC,GA+C/C,OA7CKX,EAAOoB,KAAKxC,SACf+B,EAAOS,KAAO,YAEZpB,EAAOoB,KAAKxC,OA7BW,MA8BzB+B,EAAOS,KAAP,cA9ByB,IA8BzB,WAGEpB,EAAOmL,QAAQvM,OAlCG,MAmCpB+B,EAAOwK,QAAP,cAnCoB,IAmCpB,WAGFxK,EAAOwG,OAAS,GAEhBnH,EAAOmH,OAAOiE,SAAQ,SAAChH,EAAqBC,GAC1C,GAAqB,MAAjBD,EAAQI,KAAc,CACxB,IAAMA,EAAOxF,OAAOoF,EAAQI,OAExBxF,OAAOC,MAAMuF,IAASA,EAAO,GAAKA,EAAO,OAE3C7D,EAAOwG,OAAO9C,GAAS,CAAEG,KAAM,YAInC,IAAMC,EAAWzF,OAAOoF,EAAQK,UACY,KAAvCL,EAAQK,SAEX9D,EAAOwG,OAAO9C,IAAd,kBAEK1D,EAAOwG,OAAO9C,IAFnB,IAGEI,SAAU,cAEHzF,OAAOC,MAAMwF,IAAaA,EAAW,GAAKA,EAAW,OAE9D9D,EAAOwG,OAAO9C,IAAd,kBAEK1D,EAAOwG,OAAO9C,IAFnB,IAGEI,SAAU,gBAKX9D,EAAOwG,OAAOvI,eACV+B,EAAOwG,OAGTxG,GA6XT,GA1XwC,SAAC,GAUlC,IATL0K,EASI,EATJA,oBACAnE,EAQI,EARJA,uBACAoE,EAOI,EAPJA,gBAQMxD,GAAcC,EAAAA,GAAAA,KAEpB,GAAuBH,EAAAA,EAAAA,MAAhBC,GAAP,eACML,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,GAAAA,MACX4D,GAAoBC,EAAAA,EAAAA,SAAO,GAEjC,GAA+CrF,EAAAA,EAAAA,UAAwB,MAAvE,eAAOsF,EAAP,KAA0BC,EAA1B,KAEMC,GAAqBH,EAAAA,EAAAA,QAAgC,OAC3DhP,EAAAA,EAAAA,YAAU,WACyB,IAAD,EAA5BmP,EAAmBC,UACH,OAAlBD,QAAkB,IAAlBA,GAAA,UAAAA,EAAoBC,eAApB,SAA6BC,QAC7BF,EAAmBC,QAAU,KAC7BF,EAAkB,SAEnB,CAACC,EAAoBF,IAExB,IAAMK,EAAc,WAClB5E,EAAuB,CAAE2C,MAAM,KAG3BkC,EAAiB,mCAAG,WAAO9E,GAAP,0FAEhBO,GACJc,EAAAA,GAAAA,IAAgB,CACdL,IAAoB,OAAfqD,QAAe,IAAfA,GAAAA,EAAiBrD,IAAMqD,EAAgBrD,IAAM,GAClDhB,UAAWA,EACXsB,SAAUb,EAASc,UAErBC,SARoB,OAStBX,EACEuD,EAAoBhI,cAChB,mBACA,iBACJ,WAboB,+CAgBtBqF,QAAQvG,MAAM,2BAAd,MAhBsB,uBAkBtB2J,IAlBsB,0EAAH,sDAsBvB,OACE,UAACzB,GAAA,EAAD,CACER,KAAMwB,EAAoBxB,KAC1BS,QAASwB,EACTE,OAAO,QACP,kBAAgB,iCAChBrM,GAAI,CAAEsM,OAAQ,QALhB,WAOE,UAAC1B,GAAA,EAAD,CAAa9D,GAAG,iCAAhB,UACG4E,EAAoBhI,cAAgB,kBAAoB,gBACzD,SAAC7D,EAAA,EAAD,CACE,aAAW,QACXC,QAASqM,EACTnM,GAAI,CACFgJ,SAAU,WACVQ,MAAO,EACPD,IAAK,EACL5L,MAAO,SAACoF,GAAD,OAAWA,EAAMuC,QAAQiH,KAAK,OAPzC,UAUE,SAACC,GAAA,EAAD,UAGJ,SAAC,KAAD,CACE9I,cACEgI,EAAoBhI,cAChB,CACE4E,IAAKoD,EAAoBhI,cAAc4E,IACvC7G,KAAMiK,EAAoBhI,cAAcjC,KACxC+J,QAASE,EAAoBhI,cAAc8H,QAC3ChE,OAAQkE,EAAoBhI,cAAc8D,OAAOiF,QAG/C,SAACC,EAAeC,GAAhB,OACED,EAAcE,OAAO,CACnB,CACEC,KAAKC,EAAAA,GAAAA,MACLjI,KAAM8H,EAAa9H,KACnBC,SAAU6H,EAAa7H,cAG7B,KAGJ,CACErD,KAAM,GACN+J,QAAS,GACThE,OAAQ,IAGhB7D,SAAUA,GACVC,SAAQ,mCAAE,WAAOvD,EAAQwD,GAAf,sFAEH+H,EAAkBK,QAFf,wBAGNL,EAAkBK,SAAU,EAHtB,UAMExD,GANF,wBAYOkD,QAZP,IAYOA,OAZP,EAYOA,EAAiBrE,iBAZxB,QAYqC,KACRoB,QAC/B,UAACgD,EAAoBhH,aAArB,eACEiH,QADF,IACEA,OADF,EACEA,EAAiBrE,UAAUrI,SAC3B,EACFyM,EAAoBhI,cAAgB,EAAI,GAJ1C,kBAMQrD,EAAOiI,IAAM,CAAEA,IAAKjI,EAAOiI,UAAQyE,GAN3C,IAOItL,KAAI,UAAEpB,EAAOoB,YAAT,QAAiB,GACrB+J,QAAO,UAAEnL,EAAOmL,eAAT,QAAoB,GAC3BhE,OAAM,oBACJnH,EAAOmH,cADH,aACJ,EAAeiF,QACb,SAACC,EAAeC,GAAhB,OACED,EAAcE,OAAO,CACnB,CACE/H,KACwB,MAAtB8H,EAAa9H,MAAiB8H,EAAa9H,KAEvC8H,EAAa9H,KADb,EAENC,SAAU6H,EAAa7H,cAG7B,WAZE,QAaC,MAnCP,SAuCEsH,EAAkB3D,GAvCpB,uBAyCJmD,EAAkBK,SAAU,EAC5BpI,EAAQE,eAAc,GA1ClB,yEAAF,wDA5BV,UA2EE,UAAC,KAAD,CAAMC,YAAU,EAACgJ,aAAa,MAA9B,WACE,SAACnC,GAAA,EAAD,CACEoC,UAAU,EACVjN,GAAI,CAAEkN,QAA0B,eAAjBhF,EAAgC,GAAM,GAFvD,UAIE,UAACjE,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,SAASC,WAAW,SAAjD,WACE,SAAC,KAAD,CAAO3C,KAAK,OAAZ,SACG,gBAAGH,EAAH,EAAGA,MAAa6L,GAAhB,EAAU9L,KAAV,EAAgB8L,MAAhB,OACC,SAAC7K,EAAA,GAAD,mBACM8K,EAAAA,GAAAA,GAAiC9L,EAAO6L,IAD9C,IAEEb,OAAO,QACPe,WAAS,EACT9I,MAAM,gBACNhC,QAAQ,SACR+K,WAAY,CAAEC,UAjPL,KAkPTtC,WAAS,SAIf,SAAC,KAAD,CAAOxJ,KAAK,UAAZ,SACG,gBAAGH,EAAH,EAAGA,MAAa6L,GAAhB,EAAU9L,KAAV,EAAgB8L,MAAhB,OACC,SAAC7K,EAAA,GAAD,mBACM8K,EAAAA,GAAAA,GAAiC9L,EAAO6L,IAD9C,IAEEb,OAAO,QACPe,WAAS,EACT9I,MAAM,mBACNiJ,WAAS,EACTjL,QAAQ,SACR+K,WAAY,CAAEC,UAhQV,YAoQV,SAAC,KAAD,CAAY9L,KAAK,SAAjB,SACG,YAA+D,IAA5DgM,EAA2D,EAA3DA,OAAoBC,GAAuC,EAAnDC,KAAmD,EAA7CC,KAA6C,EAAvCF,MAAMG,EAAiC,EAAjCA,OAAsBxM,GAAW,EAAzByM,QAAyB,EAAhBC,IAAgB,EAAX1M,MAClD,OACE,gCACGA,EAAKhB,OAAOmH,QAAUnG,EAAKhB,OAAOmH,OAAOvI,OAAS,GACjD,SAACgF,EAAA,EAAD,WACE,UAACmG,GAAA,EAAD,CACEhM,UAAU,QACV4B,GAAI,CACF,uBAAwB,CACtBkG,QAAS,YACTqE,UAAW,UAEb,uBAAwB,CACtBrE,QAAS,mBARf,WAYE,SAACsE,GAAA,EAAD,WACE,UAAC7F,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,KACA,SAACA,EAAA,EAAD,kBACA,SAACA,EAAA,EAAD,4BACA,SAACA,EAAA,EAAD,wBACA,SAACA,EAAA,EAAD,UAIJ,SAAC6F,GAAA,EAAD,UACGpJ,EAAKhB,OAAOmH,OAAOC,KAClB,SAACuG,EAAQtJ,GAAT,OACE,UAACC,EAAA,EAAD,YACE,SAACC,EAAA,EAAD,WACE,SAAC/E,EAAA,EAAD,CACE,aAAW,gBACXC,QAAS,kBAAM2N,EAAO/I,IAFxB,UAIE,SAACqF,GAAA,EAAD,SAGJ,SAACnF,EAAA,EAAD,WACE,UAACoC,EAAA,EAAD,CAAYzE,QAAQ,KAApB,UACG,IACAmC,EAAQ,QAGb,SAACE,EAAA,EAAD,WACE,SAAC,KAAD,CAAOnD,KAAI,kBAAaiD,EAAb,UAAX,SACG,gBACCpD,EADD,EACCA,MACAD,EAFD,EAECA,KACA8L,EAHD,EAGCA,KAHD,OAKC,SAAC7K,EAAA,GAAD,mBACM8K,EAAAA,GAAAA,GACF9L,EACA6L,IAHJ,IAKE/K,SAAU,SAAC8G,GACTmC,GACEnC,EACA7H,EACAC,GACA,IAGJ2M,aAAW,EACXzQ,KAAK,QACL0Q,UAAQ,EACR3L,QAAQ,SACR+K,WAAY,CACVC,UAAW,GAEbY,SACErC,IAAsBpH,EAClBsH,EACA,KAENhM,GAAI,CACFiJ,MAAO,SACPQ,UAAW,qBACX,4BAA6B,CAC3B2E,GAAI,SACJC,GAAI,UAEN,0BAA2B,CACzB9D,UAAW,oBAOvB,SAAC3F,EAAA,EAAD,WACE,SAAC,KAAD,CACEnD,KAAI,kBAAaiD,EAAb,cADN,SAGG,gBACCpD,EADD,EACCA,MACAD,EAFD,EAECA,KACA8L,EAHD,EAGCA,KAHD,OAKC,SAAC7K,EAAA,GAAD,mBACM8K,EAAAA,GAAAA,GACF9L,EACA6L,IAHJ,IAKE/K,SAAU,SAAC8G,GACTmC,GAAiBnC,EAAG7H,EAAMC,IAE5B2M,aAAW,EACXzQ,KAAK,QACL0Q,UAAQ,EACR3L,QAAQ,SACR+K,WAAY,CACVC,UAAW,GAEbvN,GAAI,CACFiJ,MAAO,SACPQ,UAAW,qBACX,4BAA6B,CAC3B2E,GAAI,SACJC,GAAI,UAEN,0BAA2B,CACzB9D,UAAW,oBAOvB,SAAC3F,EAAA,EAAD,WACE,SAAC/E,EAAA,EAAD,CACE,aAAW,aACXC,QAAS,WACP+N,EAAOnJ,EAAO,CACZmI,KAAKC,EAAAA,GAAAA,MACLjI,KAAM,GACNC,SAAU,KAGZiH,EAAkBrH,IATtB,UAYE,SAACuF,GAAA,EAAD,UAlHN,kBAA0BvF,EAA1B,yBA2HRqI,GAEJ,SAAC/B,GAAA,EAAD,CACEzI,QAAQ,WACR+L,WAAW,SAACrE,GAAA,EAAD,IACXnK,QAAS,WACP4N,EAAK,CACHb,KAAKC,EAAAA,GAAAA,MACLjI,KAAM,GACNC,SAAU,KAEZiH,EAAkB1K,EAAKhB,OAAOmH,OAAOvI,SAEvCe,GAAI,CACFqO,GACEhN,EAAKhB,OAAOmH,OAAOvI,OAAS,EAAI,SAAW,SAC7CsP,GAAI,UAdR,oCAyBZ,UAACxD,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CAAQlL,QAASqM,EAAjB,qBACA,SAAC3H,EAAA,EAAD,CAA2BhH,KAAK,QAAQ0K,aAAcA,EAAtD,SACGwD,EAAoBhI,cAAgB,SAAW,oBCzcxD8K,GAA6B,SAACC,GAClC,IAAMjQ,EAAO,IAAIY,KAAKqP,GAEhBhQ,EAAOP,OAAOM,EAAKE,eACrBC,EAAQT,OAAOM,EAAKI,WAAa,GACjCC,EAAMX,OAAOM,EAAKM,WAClB4P,EAAOxQ,OAAOM,EAAKmQ,YACnBC,EAAS1Q,OAAOM,EAAKqQ,cAEnBC,EAAiB,SAACrK,GACtB,OAAIA,EAAQxF,OAAS,EACZ,IAAMwF,EAENA,GASX,OALA9F,EAAQmQ,EAAenQ,GACvBE,EAAMiQ,EAAejQ,GACrB6P,EAAOI,EAAeJ,GACtBE,EAASE,EAAeF,GAElB,GAAN,OAAU/P,EAAV,YAAiBF,EAAjB,YAA0BF,EAA1B,YAAkCiQ,EAAlC,YAA0CE,IAGtCG,GAAW,SAAC,GAAgC,IAA9BzG,EAA6B,EAA7BA,IACZqD,GAAkB5O,EAAAA,EAAAA,IAAe,SAACiS,GAAD,OACrCC,EAAAA,EAAAA,IAAmBD,EAAO1G,MAE5B,EAAgD4G,EAAAA,UAAe,GAA/D,eAAOvH,EAAP,KAAyBC,EAAzB,KACA,EACEsH,EAAAA,SAAwC,CACtChF,MAAM,IAFV,eAAOwB,EAAP,KAA4BnE,EAA5B,KAIMM,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,GAAAA,MACjB,GAA4B/K,EAAAA,EAAAA,MAAnBqG,GAAT,eAEM6E,GAAcC,EAAAA,GAAAA,KAEpB,GAAuBH,EAAAA,EAAAA,MAAhBC,GAAP,eAEMG,EAAkB,kBAAcC,GAElC6G,EAAuB,GAEvBxD,IACFwD,EAAuBX,GAA2B7C,EAAgBnN,OAGpE,IAOM+J,EAAoB,WACxBX,GAAoB,IAGhBwH,EAA6B,mCAAG,uGAE5BvH,GACJwH,EAAAA,GAAAA,IAAsB,CACpB/G,IAAAA,EACAvK,MAAOgK,EAASc,OACZd,EAASc,OACTyG,EAAAA,GACJhM,gBAAAA,KAR8B,OAWlC6E,EAAY,2BAA4B,QAXN,+CAalCY,QAAQvG,MAAM,qCAAd,MAbkC,uBAelC+F,IAfkC,0EAAH,qDAmBnC,OACE,UAACgH,GAAA,GAAD,CAAMnR,UAAU,KAAKoR,MAAI,EAACxP,GAAI,CAAE6G,SAAU,QAA1C,WACE,UAAC,GAAD,CACET,UAAWiC,EACXhC,YAAa8I,EACb7I,cAAc,SAAC,GAAD,CAAkBxG,QAnCJ,SAChCoJ,GAEAA,EAAEC,kBACFvB,GAAoB,MA4BlB,iBAKG+D,QALH,IAKGA,OALH,EAKGA,EAAiBrE,UAAUG,KAAI,SAACN,EAAUzC,GAAX,OAC9B,SAAC,GAAD,CAEEyC,SAAUA,EACVC,YAAauE,EAAgBrD,IAC7BjB,cAAe3C,EACf4C,UAAWqE,EAAgBrE,UAC3BC,uBAAwBA,GALnBJ,EAASmB,SASlB,SAAC,KAAD,CACEtI,GAAI,CACFwF,QAAS,OACTnB,eAAgB,SAChBgK,GAAI,SACJE,GAAI,SACJ,kBAAmB,CAAEkB,EAAG,WAN5B,UASE,SAACzE,GAAA,EAAD,CACEzI,QAAQ,WACR+L,WAAW,SAACrE,GAAA,EAAD,IACXnK,QAAS,kBACPyH,EAAuB,CACrB2C,MAAM,KALZ,gCAcJ,SAAC,GAAD,CACEwB,oBAAqBA,EACrBnE,uBAAwBA,EACxBoE,gBAAiBA,KAEnB,UAACjB,GAAA,EAAD,CACER,KAAMvC,EACNgD,QAASpC,EACT,kBAAgB,uCAChB,mBAAiB,6CAJnB,WAME,SAACqC,GAAA,EAAD,CAAa9D,GAAG,uCAAhB,2CAGA,SAAC+D,GAAA,EAAD,WACE,UAACC,GAAA,EAAD,CAAmBhE,GAAG,6CAAtB,uDAC6C,KAC3C,4BACG6E,EACG6C,GAA2B7C,EAAgBnN,MAC3C,KALR,UAUF,UAACuM,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CAAQlL,QAASyI,EAAjB,iBACA,UAACyC,GAAA,EAAD,CACElL,QAASsP,EACTnE,WAAS,EACTC,SAA2B,SAAjBhD,EAHZ,UAKoB,eAAjBA,IACC,SAACiD,GAAA,EAAD,CAAkB3N,KAAM,GAAIwC,GAAI,CAAEoL,GAAI,YAN1C,mBAgBV,GAAe8D,EAAAA,KAAWH,I,WCxD1B,OAlIA,WACE,OAAuB9G,EAAAA,EAAAA,MAAhBC,GAAP,eACMwH,GAAeC,EAAAA,EAAAA,MAEf9H,GAAWC,EAAAA,EAAAA,KACjB,GAAuB7K,EAAAA,EAAAA,MAAhBC,GAAP,eAEA,GAA4CsJ,EAAAA,EAAAA,WAAS,GAArD,eAAOoJ,EAAP,KAAuBC,EAAvB,KAEMC,EAAuB5S,EAAae,YAC1CpB,EAAAA,EAAAA,YAAU,WACR,IAAIkT,EAAe,KAEbC,EAAK,mCAAG,8FAEVD,EAAUlI,GACRoI,EAAAA,GAAAA,IAAe,CAAE/S,aAAc4S,KAHvB,SAKJC,EALI,uBAOLH,GAAgBC,GAAkB,GAP7B,uEAAH,qDAaX,OAFAG,IAEO,WAAO,IAAD,EACmB,oBAA1B,UAAOD,SAAP,aAAO,EAASG,QAClBH,EAAQG,WAKX,CAACJ,EAAsBjI,IAE1B,IAAIsI,EAAmB,KAEvB,GAAqB,WAAjBjI,GAA6B0H,EAC/BO,GACE,SAAC5M,EAAA,EAAD,CACEvD,GAAI,CACFwF,QAAS,OACTnB,eAAgB,SAChBD,WAAY,SACZ6E,MAAO,QALX,UAQE,SAACmH,GAAA,EAAD,CAAO7N,QAAQ,SAAS8N,SAAS,QAAjC,8CAKC,CACL,IAAIC,EAAe,KAEfV,IACEF,EAAazQ,OACfqR,GACE,SAAC/M,EAAA,EAAD,CACEvD,GAAI,CACFkN,QAA0B,eAAjBhF,EAAgC,GAAM,GAFnD,UAKE,SAACqH,GAAA,GAAD,CACEnR,UAAU,KACVmS,WAAS,EACTpM,UAAU,SACVqM,WAAY,CAAEC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAChC3Q,GAAI,CACF4Q,UAAW,OACX,mBAAoB,CAAE/J,SAAU,SAPpC,gBAUG6I,QAVH,IAUGA,OAVH,EAUGA,EAAcjI,KAAI,SAACa,GAAD,OACjB,SAAC,GAAD,CAAoBA,IAAKA,GAAVA,UAKG,SAAjBJ,IACToI,GACE,SAAC/M,EAAA,EAAD,CACEvD,GAAI,CACFwF,QAAS,OACTnB,eAAgB,SAChBD,WAAY,SACZ6E,MAAO,QALX,UAQE,SAACmH,GAAA,EAAD,CAAO7N,QAAQ,SAAS8N,SAAS,OAAjC,0BAQRF,GACE,UAAC5M,EAAA,EAAD,CACEvD,GAAI,CACFgJ,SAAU,YAFd,UAKGsH,EACiB,eAAjBpI,GAAkCwH,EAAazQ,OAkB5C,MAjBF,UAACsE,EAAA,EAAD,CACEvD,GAAI,CACFgJ,SAAU,WACVO,IAAK,EACLsH,KAAM,EACNrH,MAAO,EACPhE,QAAS,OACTnB,eAAgB,SAChBD,WAAY,SACZ2B,cAAe,SACf4D,UAAW,QACXD,OAAQ,QAXZ,WAcE,SAACyB,GAAA,EAAD,CAAkB3N,KAAM,IAAKwC,GAAI,CAAE8Q,aAAc,WACjD,SAAC9J,EAAA,EAAD,+BAOV,OAAO,SAACzD,EAAA,EAAD,CAAK8K,GAAG,SAAR,SAAkB8B,K,WC5GrBxM,GAAW,SAACtD,GAChB,IAAMW,EAAyC,GAQ/C,OANAF,EAAqBT,EAAO7B,KAAM,OAAQwC,GAEtCX,EAAOmL,QAAQvM,OAZG,MAapB+B,EAAOwK,QAAP,cAboB,IAapB,WAGKxK,GA4IT,GAzI2B,WACzB,OAAuBiH,EAAAA,EAAAA,MAAhBC,GAAP,eAEA,GAAgC1B,EAAAA,EAAAA,UAAuB,QAA9CuK,GAAT,eAEMlJ,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,GAAAA,MACjB,GAA0DxB,EAAAA,EAAAA,WAAS,GAAnE,eAAOwK,EAAP,KAA8BC,EAA9B,KACMrF,GAAoBC,EAAAA,EAAAA,SAAO,GAE3B1D,GAAcC,EAAAA,GAAAA,KAMd8I,EAA+B,WACnCD,GAAyB,IAGrBE,EAAqB,mCAAG,WAAO3S,EAAYgN,GAAnB,iFAE1BuF,EAAoB,cAFM,SAIpBlJ,GACJuJ,EAAAA,GAAAA,IAAmB,CACjBzF,gBAAiB,CAAEnN,KAAMA,EAAK6S,cAAe7F,QAAAA,EAASlE,UAAW,IACjEsB,SAAUb,EAASc,UAErBC,SATwB,OAU1BX,EAAY,yBAA0B,WAVZ,gDAY1BY,QAAQvG,MAAM,sCAAd,MAZ0B,yBAc1BuO,EAAoB,QACpBG,IAf0B,4EAAH,wDAmB3B,OACE,iCACE,SAACI,GAAA,EAAD,CACE9T,KAAK,SACLG,MAAM,YACN,aAAW,uBACXqC,GAAI,CAAEuR,WAAY,QAClBzR,QAlC8B,WAClCmR,GAAyB,IA4BvB,UAOE,SAAChH,GAAA,EAAD,OAEF,UAACS,GAAA,EAAD,CACER,KAAM8G,EACNrG,QAASuG,EACT7E,OAAO,QACP,kBAAgB,oCAChBrM,GAAI,CAAEsM,OAAQ,QALhB,WAOE,UAAC1B,GAAA,EAAD,CAAa9D,GAAG,oCAAhB,kCAEE,SAACjH,EAAA,EAAD,CACE,aAAW,QACXC,QAASoR,EACTlR,GAAI,CACFgJ,SAAU,WACVQ,MAAO,EACPD,IAAK,EACL5L,MAAO,SAACoF,GAAD,OAAWA,EAAMuC,QAAQiH,KAAK,OAPzC,UAUE,SAACC,GAAA,EAAD,UAGJ,SAAC,KAAD,CACE9I,cAAe,CACblF,KAAM,IAAIY,KACVoM,QAAS,IAEX7H,SAAUA,GACVC,SAAQ,mCAAE,WAAOvD,EAAQwD,GAAf,oEAEH+H,EAAkBK,QAFf,wBAGNL,EAAkBK,SAAU,EAHtB,kBAMEkF,EAAsB9Q,EAAO7B,KAAO6B,EAAOmL,SAN7C,uBAQJI,EAAkBK,SAAU,EAC5BiF,IACArN,EAAQE,eAAc,GAVlB,yEAAF,wDANV,UAqBE,UAAC,KAAD,CAAMC,YAAU,EAAhB,WACE,SAAC6G,GAAA,EAAD,CACEoC,UAAU,EACVjN,GAAI,CAAEkN,QAA0B,eAAjBhF,EAAgC,GAAM,GAFvD,UAIE,UAACjE,EAAA,EAAD,CAAOC,QAAS,EAAGC,UAAU,SAASC,WAAW,SAAjD,WACE,SAAC,KAAD,CACE3C,KAAK,OACLrD,UAAWgD,EACXmD,MAAM,mBAER,SAAC,KAAD,CAAO9C,KAAK,UAAZ,SACG,gBAAGH,EAAH,EAAGA,MAAa6L,GAAhB,EAAU9L,KAAV,EAAgB8L,MAAhB,OACC,SAAC7K,EAAA,GAAD,gBACEwE,GAAG,YACCsG,EAAAA,GAAAA,GAAiC9L,EAAO6L,IAF9C,IAGEb,OAAO,SACPe,WAAS,EACT9I,MAAM,UACNiJ,WAAS,EACTjL,QAAQ,SACR+K,WAAY,CAAEC,UArIZ,KAsIFtC,WAAS,cAMnB,UAACF,GAAA,EAAD,YACE,SAACC,GAAA,EAAD,CAAQlL,QAASoR,EAAjB,qBACA,SAAC1M,EAAA,EAAD,CACEhH,KAAK,QACL0K,aAAcA,EAFhB,gC,uDClJd,GAd6B,SAAKsJ,GAChC,OAA0BhL,EAAAA,EAAAA,WAAS,kBAAMgL,KAAzC,eAAOrP,EAAP,KAAcsP,EAAd,KAUA,OAPAC,EAAAA,EAAAA,kBAAgB,WACVvP,IAAUqP,GACZC,EAASD,KAGV,CAACA,IAEG,CAACrP,EAAOsP,ICEXE,GAAuB,SAACxP,GAC5B,OAAOyP,EAAAA,EAAAA,IACLzP,EACA0P,EAAAA,GACAC,EAAAA,KAISC,GAAY,SACvB7U,EACA8U,EACAjU,EACAoE,GAEA,IAAI2B,GAAY9F,EAAAA,EAAAA,GAAed,EAAae,WAAYF,EAAOoE,GAE/D6P,EADAlO,GAAY9F,EAAAA,EAAAA,GAAe8F,EAAWxG,EAAAA,GAAAA,QAiDxC,GA7CoB,WAClB,OAAwCL,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBoG,EAArB,KAGM2O,EAAkBN,IACtBvU,EAAAA,EAAAA,GAAyBF,EAAaG,IAAIC,EAAAA,GAAAA,SAG5C,EACE4U,GACED,GAFJ,eAAOE,EAAP,KAAwBC,EAAxB,KAiBA,OACE,UAACC,GAAA,EAAD,CAAa9P,QAAQ,WAAWvC,GAAI,CAAEyP,EAAG,EAAG6C,SAAU,QAAtD,WACE,SAACC,GAAA,EAAD,CAAYzL,GAAG,4BAAf,yBACA,UAAC0L,GAAA,EAAD,CACEC,QAAQ,4BACR3L,GAAG,sBACH3E,MAAOgQ,EACP/P,SAnBwB,SAAC8G,GAC7B,IAAMwJ,EAAYf,GAAqBtS,OAAO6J,EAAEqC,OAAOpJ,QAEvDiQ,EAAmBM,GACnBX,GACE7U,EACAoG,EACAhG,EAAAA,GAAAA,MACAY,OAAOwU,KAYLnO,MAAM,aALR,WAOE,SAACoO,GAAA,EAAD,CAAUxQ,MAAO0P,EAAAA,GAAjB,SACGA,EAAAA,MAEH,SAACc,GAAA,EAAD,CAAUxQ,MAAOyQ,EAAAA,GAAjB,SAAsCA,EAAAA,MACtC,SAACD,GAAA,EAAD,CAAUxQ,MAAO0Q,EAAAA,GAAjB,SAAuCA,EAAAA,YC5DzCC,GAAwB,SAAC3Q,GAC7B,OAAOyP,EAAAA,EAAAA,IACLzP,EACA4Q,EAAAA,GACAC,EAAAA,KA8CJ,GA1CqB,WACnB,OAAwC/V,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBoG,EAArB,KAGM2P,EAAmBH,GACvB5V,EAAaG,IAAIC,EAAAA,GAAAA,gBAGnB,EACE4U,GACEe,GAFJ,eAAOC,EAAP,KAAsBC,EAAtB,KAiBA,OACE,UAACd,GAAA,EAAD,CAAa9P,QAAQ,WAAWvC,GAAI,CAAEyP,EAAG,EAAG6C,SAAU,KAAtD,WACE,SAACC,GAAA,EAAD,CAAYzL,GAAG,uBAAf,mBACA,UAAC0L,GAAA,EAAD,CACEC,QAAQ,uBACR3L,GAAG,sBACH3E,MAAO+Q,EACP9Q,SAnBqB,SAAC8G,GAC1B,IAAMkK,EAAgBN,GAAsB5J,EAAEqC,OAAOpJ,OAErDgR,EAAiBC,GACjBrB,GACE7U,EACAoG,EACAhG,EAAAA,GAAAA,cACA8V,IAYE7O,MAAM,OALR,WAOE,SAACoO,GAAA,EAAD,CAAUxQ,MAAM,kBAAhB,8BACA,SAACwQ,GAAA,EAAD,CAAUxQ,MAAM,iBAAhB,mCCcR,GA5DkB,WAChB,IAAMY,GAAQC,EAAAA,EAAAA,KACRqQ,GAAYnQ,EAAAA,EAAAA,GAAcH,EAAMI,YAAYmQ,GAAG,MAAO,CAC1DjQ,OAAO,IAKT,OAFAkQ,EAAAA,GAAAA,GAAe,cAGb,iCACE,UAAChQ,EAAA,EAAD,CAAKnF,UAAU,UAAf,WACE,UAAC2G,EAAD,CAAc/E,GAAI,CAAEuO,GAAI,GAAxB,WACE,SAAC9I,EAAD,CACEE,YAAY,SAACoB,EAAA,EAAD,IACZ,gBAAc,iBACdD,GAAG,gBAHL,UAKE,SAACE,EAAA,EAAD,yBAEF,SAAChB,EAAD,CACEhG,GAAI,CAAEuO,GAAI,CAAEkC,GAAI,SAAU+C,GAAI,UAAYhQ,GAAI,UADhD,UAGE,UAACS,EAAA,EAAD,CACEE,UAAWkP,EAAY,MAAQ,SAC/BjP,WAAYiP,EAAY,QAAU,SAClChP,eAAgBgP,EAAY,gBAAkB,SAC9CnP,QAAS,EACTlE,GAAI,CAAEsE,SAAU,QALlB,WAOE,SAAC,EAAD,KAEA,UAACL,EAAA,EAAD,CAAOE,UAAU,MAAMC,WAAW,SAASF,QAAS,EAAGlE,GAAI,GAA3D,WACE,SAAC,GAAD,KACA,SAAC,GAAD,gBAMR,UAACiE,EAAA,EAAD,CACEE,UAAU,MACVC,WAAW,SACXpE,GAAI,CACFqO,GAAI,QAJR,WAOE,SAAC,EAAD,KACA,SAAC,GAAD,WAGJ,UAAC9K,EAAA,EAAD,CAAKnF,UAAU,UAAU4B,GAAI,CAAE6G,SAAU,OAAQwH,GAAI,QAArD,WACE,SAACrH,EAAA,EAAD,CAAYzE,QAAQ,KAAKnE,UAAU,KAAnC,yBAGA,SAAC,GAAD","sources":["components/title-provider/useUpdateTitle.tsx","routes/trainings/Paginate.tsx","auxiliary/date/dateToString.ts","auxiliary/date/isDateValid.ts","routes/trainings/FilterByDate.tsx","auxiliary/date/stringToDate.ts","routes/trainings/SeriesRow.tsx","components/mui/app-accordion/AppAccordion.tsx","routes/trainings/TrainingAccordion.tsx","routes/trainings/Exercise.tsx","components/mui/icon-buttons/DeleteIconButton.tsx","routes/trainings/AddOrEditTrainingExerciseDialog.tsx","routes/trainings/Training.tsx","routes/trainings/TrainingList.tsx","routes/trainings/AddTrainingSession.tsx","components/hooks/useValueDependsOnUrl.tsx","routes/trainings/ItemsOnPage.tsx","routes/trainings/SortingOrder.tsx","routes/trainings/Trainings.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSetTitleContext } from \"./TitleProvider\";\r\n\r\nconst useUpdateTitle = (title: string) => {\r\n  const setTitleContext = useSetTitleContext();\r\n\r\n  useEffect(() => {\r\n    setTitleContext(title);\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default useUpdateTitle;\r\n","import { Pagination, PaginationItem } from \"@mui/material\";\r\n\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\n\r\nimport { selectNumberOfPages } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useAppSelector } from \"../../store/hooks/hooks\";\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\n\r\nconst Paginate = () => {\r\n  const numberOfPages = useAppSelector(selectNumberOfPages);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  let currentPage = tryConvertToFiniteNumber(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.page)\r\n  );\r\n\r\n  if (currentPage === null || currentPage <= 0) currentPage = 1;\r\n\r\n  return (\r\n    <Pagination\r\n      size=\"small\"\r\n      page={currentPage}\r\n      count={numberOfPages ? numberOfPages : 1}\r\n      color=\"primary\"\r\n      siblingCount={1}\r\n      renderItem={(params) => {\r\n        const query = updateUrlQuery(\r\n          searchParams.toString(),\r\n          TRAININGS_URL_QUERY_KEYS.page,\r\n          String(params.page)\r\n        );\r\n\r\n        return <PaginationItem {...params} component={Link} to={query} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","export const dateToString = (date: Date) => {\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n\r\n  const yearString = String(year);\r\n\r\n  let monthString = String(month);\r\n\r\n  if (monthString.length < 2) {\r\n    monthString = \"0\" + monthString;\r\n  }\r\n\r\n  let dayString = String(day);\r\n\r\n  if (dayString.length < 2) {\r\n    dayString = \"0\" + dayString;\r\n  }\r\n\r\n  return `${yearString}-${monthString}-${dayString}`;\r\n};\r\n","export const isDateValid = (date: Date) =>\r\n  date instanceof Date && !Number.isNaN(Number(date));\r\n","import { DatePicker, DatePickerProps } from \"@mui/lab\";\r\nimport {\r\n  Box,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\nimport {\r\n  Field,\r\n  FieldProps,\r\n  Form,\r\n  Formik,\r\n  FormikErrors,\r\n  useFormikContext,\r\n} from \"formik\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport MuiButtonSubmitWithFormik from \"../../components/mui/button-submit-with-formik/MuiButtonSubmitWithFormik\";\r\nimport { dateToString } from \"../../auxiliary/date/dateToString\";\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\nimport { stringToDate } from \"../../auxiliary/date/stringToDate\";\r\nimport { OrNull } from \"../../interfaces/generalInterf\";\r\nimport { isDateValid } from \"../../auxiliary/date/isDateValid\";\r\n\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\nimport { useEffect } from \"react\";\r\n\r\ninterface FormikValuesType {\r\n  \"start-date\": OrNull<Date>;\r\n  \"end-date\": OrNull<Date>;\r\n}\r\n\r\nconst minAllowedDate = new Date(Date.UTC(2000, 1, 1, 0, 0, 0));\r\n\r\nconst ClearFilterByDate = ({\r\n  removeFilterByDateFromUrl,\r\n}: {\r\n  removeFilterByDateFromUrl: () => void;\r\n}) => {\r\n  const { resetForm } = useFormikContext();\r\n\r\n  return (\r\n    <IconButton\r\n      aria-label=\"clear filter\"\r\n      onClick={() => {\r\n        resetForm();\r\n        removeFilterByDateFromUrl();\r\n      }}\r\n    >\r\n      <HighlightOffIcon sx={{ fontSize: \"3rem\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst InitializeDatesFromUrl = ({\r\n  dateFilter,\r\n}: {\r\n  dateFilter: string | null;\r\n}) => {\r\n  const { setFieldValue, values } = useFormikContext<FormikValuesType>();\r\n\r\n  useEffect(() => {\r\n    const updateDateInFormikValues = (\r\n      urlDate: string,\r\n      propName: keyof typeof values\r\n    ) => {\r\n      const date = stringToDate(urlDate);\r\n      if (isDateValid(date)) {\r\n        setFieldValue(propName, date);\r\n      }\r\n    };\r\n\r\n    if (dateFilter) {\r\n      const dates = dateFilter.match(\r\n        /from-(\\d{4}-\\d{2}-\\d{2})-to-(\\d{4}-\\d{2}-\\d{2})/\r\n      );\r\n\r\n      if (dates?.[1]) {\r\n        updateDateInFormikValues(dates[1], \"start-date\");\r\n      }\r\n      if (dates?.[2]) {\r\n        updateDateInFormikValues(dates[2], \"end-date\");\r\n      }\r\n    } else {\r\n      setFieldValue(\"start-date\", null);\r\n      setFieldValue(\"end-date\", null);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dateFilter]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const commonDateValidation = (\r\n  date: Date | null,\r\n  fieldName: string,\r\n  errors: FormikErrors<any>\r\n) => {\r\n  if (!date || !isDateValid(date)) {\r\n    errors[fieldName] = \"Enter valid date\";\r\n  } else if (date > new Date()) {\r\n    errors[fieldName] = \"Future date not allowed\";\r\n  } else if (date < minAllowedDate) {\r\n    errors[fieldName] = `Date before ${\r\n      minAllowedDate.toLocaleString(\"pl-PL\", { timeZone: \"UTC\" }).split(\",\")[0]\r\n    }`;\r\n  }\r\n};\r\n\r\ninterface DatePickerFieldProps extends FieldProps, DatePickerProps {\r\n  getShouldDisableDateError: (date: Date) => string;\r\n}\r\n\r\nexport function DatePickerField({\r\n  form,\r\n  field,\r\n  ...other\r\n}: Omit<DatePickerFieldProps, \"value\" | \"onChange\" | \"renderInput\">) {\r\n  const currentError = form.errors[field.name];\r\n  const showError = form.touched[field.name] && !!currentError;\r\n\r\n  return (\r\n    <DatePicker\r\n      mask={\"__.__.____\"}\r\n      disableFuture\r\n      allowSameDateSelection\r\n      openTo=\"month\"\r\n      views={[\"year\", \"month\", \"day\"]}\r\n      minDate={minAllowedDate}\r\n      value={field.value}\r\n      onChange={(date) => {\r\n        form.setFieldValue(field.name, date, true);\r\n      }}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          variant=\"standard\"\r\n          name={field.name}\r\n          error={showError}\r\n          helperText={\r\n            (showError && currentError ? currentError : \" \") as string\r\n          }\r\n          onBlur={form.handleBlur}\r\n        />\r\n      )}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nconst validateDates = (values: FormikValuesType) => {\r\n  const errors: FormikErrors<FormikValuesType> = {};\r\n\r\n  const startDate = values[\"start-date\"];\r\n  const endDate = values[\"end-date\"];\r\n\r\n  commonDateValidation(startDate, \"start-date\", errors);\r\n\r\n  commonDateValidation(endDate, \"end-date\", errors);\r\n  if (endDate !== null && startDate !== null && endDate <= startDate) {\r\n    errors[\"end-date\"] = \"End date after start date\";\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst FilterByDate = () => {\r\n  const theme = useTheme();\r\n  const matchDownSm = useMediaQuery(theme.breakpoints.down(\"sm\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const dateFilter = searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate);\r\n\r\n  return (\r\n    <Box sx={{ pt: \"0.0rem\", flexGrow: 0 }}>\r\n      <Formik<FormikValuesType>\r\n        initialValues={{\r\n          \"start-date\": null,\r\n          \"end-date\": null,\r\n        }}\r\n        validate={validateDates}\r\n        onSubmit={async (values, actions) => {\r\n          try {\r\n            const startDate = values[\"start-date\"] as any as Date;\r\n            const endDate = values[\"end-date\"] as any as Date;\r\n\r\n            const searchUrl = updateUrlQuery(\r\n              searchParams.toString(),\r\n              TRAININGS_URL_QUERY_KEYS.filterByDate,\r\n              \"from-\" + dateToString(startDate) + \"-to-\" + dateToString(endDate)\r\n            );\r\n            setSearchParams(searchUrl);\r\n          } finally {\r\n            actions.setSubmitting(false);\r\n          }\r\n        }}\r\n      >\r\n        <Box>\r\n          <Form noValidate>\r\n            <Stack\r\n              spacing={matchDownSm ? 1 : 3}\r\n              direction={matchDownSm ? \"column\" : \"row\"}\r\n              alignItems=\"center\"\r\n              justifyContent=\"center\"\r\n              sx={{ flexWrap: \"wrap\" }}\r\n            >\r\n              <InitializeDatesFromUrl dateFilter={dateFilter} />\r\n              <Field\r\n                name=\"start-date\"\r\n                component={DatePickerField}\r\n                label=\"Start date\"\r\n              ></Field>\r\n              <Field\r\n                name=\"end-date\"\r\n                component={DatePickerField}\r\n                label=\"End date\"\r\n              ></Field>\r\n              <Box>\r\n                <MuiButtonSubmitWithFormik\r\n                  variant=\"outlined\"\r\n                  size=\"large\"\r\n                  sx={{}}\r\n                >\r\n                  Filter\r\n                </MuiButtonSubmitWithFormik>\r\n\r\n                {searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate) ? (\r\n                  <ClearFilterByDate\r\n                    removeFilterByDateFromUrl={() => {\r\n                      setSearchParams(\r\n                        updateUrlQuery(\r\n                          searchParams.toString(),\r\n                          TRAININGS_URL_QUERY_KEYS.filterByDate\r\n                        )\r\n                      );\r\n                    }}\r\n                  />\r\n                ) : null}\r\n              </Box>\r\n            </Stack>\r\n          </Form>\r\n        </Box>\r\n      </Formik>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilterByDate;\r\n","export const stringToDate = (dateString: string) => {\r\n  const dateFragments = dateString.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n  return new Date(\r\n    Number(dateFragments?.[1]),\r\n    Number(dateFragments?.[2]) - 1,\r\n    Number(dateFragments?.[3])\r\n  );\r\n};\r\n","import { TableCell, TableRow } from \"@mui/material\";\r\nimport { SeriesDataFromApi } from \"../../interfaces/trainingsInterf\";\r\n\r\nconst SeriesRow = ({\r\n  element,\r\n  index,\r\n}: {\r\n  element: SeriesDataFromApi;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{index + 1}</TableCell>\r\n      <TableCell>\r\n        {element.load && element.load !== \"-\" ? element.load : \"-\"}\r\n      </TableCell>\r\n      <TableCell>{element.quantity}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default SeriesRow;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionProps,\r\n  AccordionSummary,\r\n  AccordionSummaryProps,\r\n} from \"@mui/material\";\r\n\r\nconst AppAccordion = styled((props: AccordionProps) => (\r\n  <Accordion elevation={2} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {},\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AppAccordionSummary = styled((props: AccordionSummaryProps) => (\r\n  <AccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(255, 255, 255, .05)\"\r\n      : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n}));\r\n\r\nconst AppAccordionDetails = styled(AccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nexport { AppAccordion, AppAccordionSummary, AppAccordionDetails };\r\n","import { Stack, Typography } from \"@mui/material\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { useState } from \"react\";\r\n\r\nconst TrainingAccordion = ({\r\n  summaryId,\r\n  summaryText,\r\n  summaryIcons,\r\n  children,\r\n}: {\r\n  summaryId: string;\r\n  summaryText: string;\r\n  summaryIcons: React.ReactNode;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <AppAccordion\r\n      TransitionProps={{ unmountOnExit: true }}\r\n      expanded={expanded}\r\n      onChange={() => setExpanded((expanded) => !expanded)}\r\n      sx={{\r\n        maxWidth: \"100%\",\r\n        \"& .MuiAccordionSummary-content\": { maxWidth: \"calc(100% - 24px)\" },\r\n      }}\r\n    >\r\n      <AppAccordionSummary\r\n        aria-controls={summaryId}\r\n        id={summaryId}\r\n        expandIcon={<ExpandMoreIcon />}\r\n        sx={{}}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            maxWidth: \"100%\",\r\n          }}\r\n          flexGrow={1}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              textOverflow: \"ellipsis\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {summaryText}\r\n          </Typography>\r\n\r\n          {summaryIcons}\r\n        </Stack>\r\n      </AppAccordionSummary>\r\n      <AppAccordionDetails>{children}</AppAccordionDetails>\r\n    </AppAccordion>\r\n  );\r\n};\r\n\r\nexport default TrainingAccordion;\r\n","import { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport SeriesRow from \"./SeriesRow\";\r\nimport {} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  SpeedDial,\r\n  SpeedDialAction,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport { updateExercises } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { IdFromApi } from \"../../interfaces/commonInterf\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nconst Exercise = ({\r\n  exercise,\r\n  training_id,\r\n  exerciseIndex,\r\n  exercises,\r\n  setExerciseDialogState,\r\n}: {\r\n  exercise: ExerciseDataFromApi;\r\n  training_id: IdFromApi;\r\n  exerciseIndex: number;\r\n  exercises: ExerciseDataFromApi[];\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n}) => {\r\n  const series = exercise.series.map((element) => element.quantity).join(\", \");\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const accordionSummaryId = `exercise_${exercise._id}`;\r\n\r\n  const deleteButtonOnClickHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteExercise = async () => {\r\n    try {\r\n      const exercises_shallowCopyForMutation = [...exercises];\r\n      exercises_shallowCopyForMutation.splice(exerciseIndex, 1);\r\n\r\n      await dispatch(\r\n        updateExercises({\r\n          _id: training_id,\r\n          exercises: exercises_shallowCopyForMutation,\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\"Exercise deleted\", \"info\");\r\n    } catch (error) {\r\n      console.error(\"Failed to add exercise:\", error);\r\n    } finally {\r\n      handleCloseDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={`${exercise.name}: [${\r\n          series.length ? series : \"no series\"\r\n        }]`}\r\n        summaryIcons={\r\n          <Box\r\n            sx={{ position: \"relative\", width: \"5rem\" }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <SpeedDial\r\n              ariaLabel=\"Edit options\"\r\n              direction=\"left\"\r\n              FabProps={{\r\n                size: \"small\",\r\n                color: \"primary\",\r\n              }}\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                transform: \"translateY(-50%)\",\r\n                \"& .MuiButtonBase-root\": {\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  minHeight: \"unset\",\r\n                },\r\n              }}\r\n              icon={<MoreVertIcon />}\r\n            >\r\n              <SpeedDialAction\r\n                icon={<DeleteIcon />}\r\n                tooltipTitle=\"Delete exercise\"\r\n                onClick={deleteButtonOnClickHandle}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<AddIcon />}\r\n                tooltipTitle=\"Add exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({ open: true, index: exerciseIndex });\r\n                }}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<EditIcon />}\r\n                tooltipTitle=\"Edit exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({\r\n                    open: true,\r\n                    index: exerciseIndex,\r\n                    initialValues: exercise,\r\n                  });\r\n                }}\r\n              />\r\n            </SpeedDial>\r\n          </Box>\r\n        }\r\n      >\r\n        <TableContainer\r\n          component=\"table\"\r\n          sx={{\r\n            \"& .MuiTableCell-root\": {\r\n              pl: \"0.25rem\",\r\n              pr: \"0.25rem\",\r\n              textAlign: \"center\",\r\n            },\r\n          }}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography>Nr</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Load&nbsp;(kg)</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Quantity</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {exercise.series.map((series, index) => (\r\n              <SeriesRow key={series._id} element={series} index={index} />\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </TrainingAccordion>\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-exercise-dialog-title\"\r\n        aria-describedby=\"delete-exercise-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-exercise-dialog-title\">\r\n          Delete exercise confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-exercise-dialog-description\">\r\n            Do you really want to delete exercise{\" \"}\r\n            <strong>{exercise.name}</strong>?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteExercise}\r\n            autoFocus\r\n            disabled={actionStatus !== \"IDLE\"}\r\n          >\r\n            {actionStatus === \"PROCESSING\" && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import { IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst DeleteIconButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}) => {\r\n  return (\r\n    <IconButton aria-label=\"delete\" onClick={onClick}>\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteIconButton;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Stack,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  ExerciseData,\r\n  ExerciseDataFromApi,\r\n  SeriesData,\r\n  TrainingSessionDataFromApi,\r\n} from \"../../interfaces/trainingsInterf\";\r\nimport { updateExercises } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport {\r\n  Field,\r\n  FieldArray,\r\n  FieldInputProps,\r\n  FieldProps,\r\n  Form,\r\n  Formik,\r\n  FormikErrors,\r\n  FormikProps,\r\n} from \"formik\";\r\n\r\nimport MuiButtonSubmitWithFormik from \"../../components/mui/button-submit-with-formik/MuiButtonSubmitWithFormik\";\r\nimport { MuiTextFieldPropsFromFormikField } from \"../auth/AuthSide\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\n\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nconst maxCommentSigns = 255;\r\nconst maxExerciseNameSigns = 100;\r\n\r\ninterface Series extends SeriesData {\r\n  key: string;\r\n}\r\ninterface FormikValuesType {\r\n  _id?: string;\r\n  name: string;\r\n  comment: string;\r\n  series: Series[];\r\n}\r\n\r\nconst acceptOnlyDigits = (\r\n  e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\r\n  form: FormikProps<any>,\r\n  field: FieldInputProps<any>,\r\n  allowDash = false\r\n) => {\r\n  if (e.target.value.match(/^\\d*$/) || (allowDash && e.target.value === \"-\")) {\r\n    form.setFieldValue(field.name, e.target.value);\r\n  }\r\n};\r\n\r\nconst validate = (values: FormikValuesType) => {\r\n  const errors: FormikErrors<FormikValuesType> = {};\r\n\r\n  if (!values.name.length) {\r\n    errors.name = \"Required\";\r\n  }\r\n  if (values.name.length > maxExerciseNameSigns) {\r\n    errors.name = `Max ${maxExerciseNameSigns} signs`;\r\n  }\r\n\r\n  if (values.comment.length > maxCommentSigns) {\r\n    errors.comment = `Max ${maxCommentSigns} signs`;\r\n  }\r\n\r\n  errors.series = [];\r\n\r\n  values.series.forEach((element: SeriesData, index: number) => {\r\n    if (element.load !== \"-\") {\r\n      const load = Number(element.load);\r\n\r\n      if (Number.isNaN(load) || load < 0 || load > 999) {\r\n        // @ts-ignore\r\n        errors.series[index] = { load: \"<0,999>\" };\r\n      }\r\n    }\r\n\r\n    const quantity = Number(element.quantity);\r\n    if ((element.quantity as any as string) === \"\") {\r\n      // @ts-ignore\r\n      errors.series[index] = {\r\n        // @ts-ignore\r\n        ...errors.series[index],\r\n        quantity: \"Required\",\r\n      };\r\n    } else if (Number.isNaN(quantity) || quantity < 1 || quantity > 999) {\r\n      // @ts-ignore\r\n      errors.series[index] = {\r\n        // @ts-ignore\r\n        ...errors.series[index],\r\n        quantity: \"<1,999>\",\r\n      };\r\n    }\r\n  });\r\n\r\n  if (!errors.series.length) {\r\n    delete errors.series;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddOrEditTrainingExerciseDialog = ({\r\n  exerciseDialogState,\r\n  setExerciseDialogState,\r\n  trainingSession,\r\n}: {\r\n  exerciseDialogState: ExerciseDialogStateType;\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n  trainingSession: TrainingSessionDataFromApi | undefined;\r\n}) => {\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const requestInProgress = useRef(false);\r\n\r\n  const [indexForAutofocus, setIndexAutofocus] = useState<number | null>(null);\r\n\r\n  const elementToAutofocus = useRef<HTMLInputElement | null>(null);\r\n  useEffect(() => {\r\n    if (elementToAutofocus.current) {\r\n      elementToAutofocus?.current?.focus();\r\n      elementToAutofocus.current = null;\r\n      setIndexAutofocus(null);\r\n    }\r\n  }, [elementToAutofocus, indexForAutofocus]);\r\n\r\n  const closeDialog = () => {\r\n    setExerciseDialogState({ open: false });\r\n  };\r\n\r\n  const addUpdateExercise = async (exercises: ExerciseData[]) => {\r\n    try {\r\n      await dispatch(\r\n        updateExercises({\r\n          _id: trainingSession?._id ? trainingSession._id : \"\",\r\n          exercises: exercises,\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\r\n        exerciseDialogState.initialValues\r\n          ? \"Exercise Updated\"\r\n          : \"Exercise Added\",\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to add exercise: \", error);\r\n    } finally {\r\n      closeDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={exerciseDialogState.open}\r\n      onClose={closeDialog}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"add-edit-exercise-dialog-title\"\r\n      sx={{ margin: \"0rem\" }}\r\n    >\r\n      <DialogTitle id=\"add-edit-exercise-dialog-title\">\r\n        {exerciseDialogState.initialValues ? \"Update Exercise\" : \"Add Exercise\"}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={closeDialog}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <Formik<FormikValuesType>\r\n        initialValues={\r\n          exerciseDialogState.initialValues\r\n            ? {\r\n                _id: exerciseDialogState.initialValues._id,\r\n                name: exerciseDialogState.initialValues.name,\r\n                comment: exerciseDialogState.initialValues.comment,\r\n                series: exerciseDialogState.initialValues.series.reduce<\r\n                  Series[]\r\n                >(\r\n                  (previousValue, currentValue) =>\r\n                    previousValue.concat([\r\n                      {\r\n                        key: nanoid(),\r\n                        load: currentValue.load,\r\n                        quantity: currentValue.quantity,\r\n                      },\r\n                    ]),\r\n                  []\r\n                ),\r\n              }\r\n            : {\r\n                name: \"\",\r\n                comment: \"\",\r\n                series: [] as Series[],\r\n              }\r\n        }\r\n        validate={validate}\r\n        onSubmit={async (values, actions) => {\r\n          // protection against submitting form twice\r\n          if (!requestInProgress.current) {\r\n            requestInProgress.current = true;\r\n\r\n            try {\r\n              const exercises_shallowCopyForMutation: (\r\n                | ExerciseDataFromApi\r\n                | (Pick<ExerciseDataFromApi, \"name\" | \"comment\"> &\r\n                    Partial<Pick<ExerciseDataFromApi, \"_id\">> & {\r\n                      series: Omit<Series, \"key\">[];\r\n                    })\r\n              )[] = [...(trainingSession?.exercises ?? [])];\r\n              exercises_shallowCopyForMutation.splice(\r\n                (exerciseDialogState.index ??\r\n                  trainingSession?.exercises.length) ||\r\n                  0,\r\n                exerciseDialogState.initialValues ? 1 : 0,\r\n                {\r\n                  ...(values._id ? { _id: values._id } : undefined),\r\n                  name: values.name ?? \"\",\r\n                  comment: values.comment ?? \"\",\r\n                  series:\r\n                    values.series?.reduce<Omit<Series, \"key\">[]>(\r\n                      (previousValue, currentValue) =>\r\n                        previousValue.concat([\r\n                          {\r\n                            load:\r\n                              currentValue.load === \"-\" || !currentValue.load\r\n                                ? 0\r\n                                : currentValue.load,\r\n                            quantity: currentValue.quantity,\r\n                          },\r\n                        ]),\r\n                      []\r\n                    ) ?? [],\r\n                }\r\n              );\r\n\r\n              await addUpdateExercise(exercises_shallowCopyForMutation);\r\n            } finally {\r\n              requestInProgress.current = false;\r\n              actions.setSubmitting(false);\r\n            }\r\n          }\r\n        }}\r\n      >\r\n        <Form noValidate autoComplete=\"off\">\r\n          <DialogContent\r\n            dividers={true}\r\n            sx={{ opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1 }}\r\n          >\r\n            <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n              <Field name=\"name\">\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <TextField\r\n                    {...MuiTextFieldPropsFromFormikField(field, meta)}\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    label=\"Exercise name\"\r\n                    variant=\"filled\"\r\n                    inputProps={{ maxLength: maxExerciseNameSigns }}\r\n                    autoFocus\r\n                  />\r\n                )}\r\n              </Field>\r\n              <Field name=\"comment\">\r\n                {({ field, form, meta }: FieldProps) => (\r\n                  <TextField\r\n                    {...MuiTextFieldPropsFromFormikField(field, meta)}\r\n                    margin=\"dense\"\r\n                    fullWidth\r\n                    label=\"Exercise comment\"\r\n                    multiline\r\n                    variant=\"filled\"\r\n                    inputProps={{ maxLength: maxCommentSigns }}\r\n                  />\r\n                )}\r\n              </Field>\r\n              <FieldArray name=\"series\">\r\n                {({ remove, move, swap, push, insert, unshift, pop, form }) => {\r\n                  return (\r\n                    <>\r\n                      {form.values.series && form.values.series.length > 0 ? (\r\n                        <Stack>\r\n                          <TableContainer\r\n                            component=\"table\"\r\n                            sx={{\r\n                              \"& .MuiTableCell-root\": {\r\n                                padding: \"0 0.25rem\",\r\n                                textAlign: \"center\",\r\n                              },\r\n                              \"& .MuiTableCell-body\": {\r\n                                padding: \"0.4rem 0.25rem\",\r\n                              },\r\n                            }}\r\n                          >\r\n                            <TableHead>\r\n                              <TableRow>\r\n                                <TableCell></TableCell>\r\n                                <TableCell>Nr</TableCell>\r\n                                <TableCell>Load&nbsp;(kg)</TableCell>\r\n                                <TableCell>Quantity</TableCell>\r\n                                <TableCell></TableCell>\r\n                              </TableRow>\r\n                            </TableHead>\r\n\r\n                            <TableBody>\r\n                              {form.values.series.map(\r\n                                (_: any, index: number) => (\r\n                                  <TableRow key={`series.[${index}].key`}>\r\n                                    <TableCell>\r\n                                      <IconButton\r\n                                        aria-label=\"delete series\"\r\n                                        onClick={() => remove(index)}\r\n                                      >\r\n                                        <DeleteIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Typography variant=\"h5\">\r\n                                        {\" \"}\r\n                                        {index + 1}\r\n                                      </Typography>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Field name={`series.[${index}].load`}>\r\n                                        {({\r\n                                          field,\r\n                                          form,\r\n                                          meta,\r\n                                        }: FieldProps) => (\r\n                                          <TextField\r\n                                            {...MuiTextFieldPropsFromFormikField(\r\n                                              field,\r\n                                              meta\r\n                                            )}\r\n                                            onChange={(e) => {\r\n                                              acceptOnlyDigits(\r\n                                                e,\r\n                                                form,\r\n                                                field,\r\n                                                true\r\n                                              );\r\n                                            }}\r\n                                            hiddenLabel\r\n                                            size=\"small\"\r\n                                            required\r\n                                            variant=\"filled\"\r\n                                            inputProps={{\r\n                                              maxLength: 3,\r\n                                            }}\r\n                                            inputRef={\r\n                                              indexForAutofocus === index\r\n                                                ? elementToAutofocus\r\n                                                : null\r\n                                            }\r\n                                            sx={{\r\n                                              width: \"3.5rem\",\r\n                                              transform: \"translateY(0.7rem)\",\r\n                                              \"& .MuiFormHelperText-root\": {\r\n                                                ml: \"0.1rem\",\r\n                                                mt: \"0.1rem\",\r\n                                              },\r\n                                              \"& .MuiFilledInput-input\": {\r\n                                                textAlign: \"center\",\r\n                                              },\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </Field>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <Field\r\n                                        name={`series.[${index}].quantity`}\r\n                                      >\r\n                                        {({\r\n                                          field,\r\n                                          form,\r\n                                          meta,\r\n                                        }: FieldProps) => (\r\n                                          <TextField\r\n                                            {...MuiTextFieldPropsFromFormikField(\r\n                                              field,\r\n                                              meta\r\n                                            )}\r\n                                            onChange={(e) => {\r\n                                              acceptOnlyDigits(e, form, field);\r\n                                            }}\r\n                                            hiddenLabel\r\n                                            size=\"small\"\r\n                                            required\r\n                                            variant=\"filled\"\r\n                                            inputProps={{\r\n                                              maxLength: 3,\r\n                                            }}\r\n                                            sx={{\r\n                                              width: \"3.5rem\",\r\n                                              transform: \"translateY(0.7rem)\",\r\n                                              \"& .MuiFormHelperText-root\": {\r\n                                                ml: \"0.1rem\",\r\n                                                mt: \"0.1rem\",\r\n                                              },\r\n                                              \"& .MuiFilledInput-input\": {\r\n                                                textAlign: \"center\",\r\n                                              },\r\n                                            }}\r\n                                          />\r\n                                        )}\r\n                                      </Field>\r\n                                    </TableCell>\r\n                                    <TableCell>\r\n                                      <IconButton\r\n                                        aria-label=\"add series\"\r\n                                        onClick={() => {\r\n                                          insert(index, {\r\n                                            key: nanoid(),\r\n                                            load: \"\",\r\n                                            quantity: \"\",\r\n                                          });\r\n\r\n                                          setIndexAutofocus(index);\r\n                                        }}\r\n                                      >\r\n                                        <AddIcon />\r\n                                      </IconButton>\r\n                                    </TableCell>\r\n                                  </TableRow>\r\n                                )\r\n                              )}\r\n                            </TableBody>\r\n                          </TableContainer>\r\n                        </Stack>\r\n                      ) : undefined}\r\n\r\n                      <Button\r\n                        variant=\"outlined\"\r\n                        startIcon={<AddIcon />}\r\n                        onClick={() => {\r\n                          push({\r\n                            key: nanoid(),\r\n                            load: \"\",\r\n                            quantity: \"\",\r\n                          });\r\n                          setIndexAutofocus(form.values.series.length);\r\n                        }}\r\n                        sx={{\r\n                          mt:\r\n                            form.values.series.length > 0 ? \"1.6rem\" : \"0.4rem\",\r\n                          mb: \"0.8rem\",\r\n                        }}\r\n                      >\r\n                        Add series\r\n                      </Button>\r\n                    </>\r\n                  );\r\n                }}\r\n              </FieldArray>\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={closeDialog}>Cancel</Button>\r\n            <MuiButtonSubmitWithFormik size=\"large\" actionStatus={actionStatus}>\r\n              {exerciseDialogState.initialValues ? \"Update\" : \"Add\"}\r\n            </MuiButtonSubmitWithFormik>\r\n          </DialogActions>\r\n        </Form>\r\n      </Formik>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddOrEditTrainingExerciseDialog;\r\n","import * as React from \"react\";\r\nimport {\r\n  selectTrainingById,\r\n  useSelectActionStatusAndError,\r\n} from \"../../store/features/trainings/trainingsSlice\";\r\nimport Exercise from \"./Exercise\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport DeleteIconButton from \"../../components/mui/icon-buttons/DeleteIconButton\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport { EntityId } from \"@reduxjs/toolkit\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks/hooks\";\r\nimport { deleteTrainingSession } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { TRAININGS_DEFAULT_URL_QUERY } from \"./trainingsConsts\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Box } from \"@mui/system\";\r\nimport AddOrEditTrainingExerciseDialog from \"./AddOrEditTrainingExerciseDialog\";\r\n\r\nimport { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nexport interface ExerciseDialogStateType {\r\n  open: boolean;\r\n  index?: number;\r\n  initialValues?: ExerciseDataFromApi;\r\n}\r\n\r\nconst trainingSessionDateInLocal = (dateISOString: string) => {\r\n  const date = new Date(dateISOString);\r\n\r\n  const year = String(date.getFullYear());\r\n  let month = String(date.getMonth() + 1);\r\n  let day = String(date.getDate());\r\n  let hour = String(date.getHours());\r\n  let minute = String(date.getMinutes());\r\n\r\n  const addLeadingZero = (element: string) => {\r\n    if (element.length < 2) {\r\n      return \"0\" + element;\r\n    } else {\r\n      return element;\r\n    }\r\n  };\r\n\r\n  month = addLeadingZero(month);\r\n  day = addLeadingZero(day);\r\n  hour = addLeadingZero(hour);\r\n  minute = addLeadingZero(minute);\r\n\r\n  return `${day}-${month}-${year} ${hour}:${minute}`;\r\n};\r\n\r\nconst Training = ({ _id }: { _id: EntityId }) => {\r\n  const trainingSession = useAppSelector((state) =>\r\n    selectTrainingById(state, _id)\r\n  );\r\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\r\n  const [exerciseDialogState, setExerciseDialogState] =\r\n    React.useState<ExerciseDialogStateType>({\r\n      open: false,\r\n    });\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const accordionSummaryId = `session_${_id}`;\r\n\r\n  let accordionSummaryText = \"\";\r\n\r\n  if (trainingSession) {\r\n    accordionSummaryText = trainingSessionDateInLocal(trainingSession.date);\r\n  }\r\n\r\n  const deleteButtonOnClickHandle = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.stopPropagation();\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteTrainingSession = async () => {\r\n    try {\r\n      await dispatch(\r\n        deleteTrainingSession({\r\n          _id,\r\n          query: location.search\r\n            ? location.search\r\n            : TRAININGS_DEFAULT_URL_QUERY,\r\n          setSearchParams,\r\n        })\r\n      );\r\n      setSnackbar(\"Training session deleted\", \"info\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete training session:\", error);\r\n    } finally {\r\n      handleCloseDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid component=\"li\" item sx={{ maxWidth: \"100%\" }}>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={accordionSummaryText}\r\n        summaryIcons={<DeleteIconButton onClick={deleteButtonOnClickHandle} />}\r\n      >\r\n        {trainingSession?.exercises.map((exercise, index) => (\r\n          <Exercise\r\n            key={exercise._id}\r\n            exercise={exercise}\r\n            training_id={trainingSession._id}\r\n            exerciseIndex={index}\r\n            exercises={trainingSession.exercises}\r\n            setExerciseDialogState={setExerciseDialogState}\r\n          />\r\n        ))}\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            mt: \"1.5rem\",\r\n            mb: \"0.5rem\",\r\n            \"&:first-of-type\": { m: \"1rem 0\" },\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() =>\r\n              setExerciseDialogState({\r\n                open: true,\r\n              })\r\n            }\r\n          >\r\n            Add Exercise\r\n          </Button>\r\n        </Box>\r\n      </TrainingAccordion>\r\n\r\n      <AddOrEditTrainingExerciseDialog\r\n        exerciseDialogState={exerciseDialogState}\r\n        setExerciseDialogState={setExerciseDialogState}\r\n        trainingSession={trainingSession}\r\n      />\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-training-session-dialog-title\"\r\n        aria-describedby=\"delete-training-session-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-training-session-dialog-title\">\r\n          Delete training confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-training-session-dialog-description\">\r\n            Do you really want to delete training from{\" \"}\r\n            <strong>\r\n              {trainingSession\r\n                ? trainingSessionDateInLocal(trainingSession.date)\r\n                : \"\"}\r\n            </strong>\r\n            ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteTrainingSession}\r\n            autoFocus\r\n            disabled={actionStatus !== \"IDLE\"}\r\n          >\r\n            {actionStatus === \"PROCESSING\" && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(Training);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport {\r\n  useSelectActionStatusAndError,\r\n  useSelectTrainingIds,\r\n} from \"../../store/features/trainings/trainingsSlice\";\r\nimport Training from \"./Training\";\r\nimport { fetchTrainings } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { Alert, Box, Grid, Typography } from \"@mui/material\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction TrainingList() {\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n  const trainingsIds = useSelectTrainingIds();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const [firstFetchDone, setFirstFetchDone] = useState(false);\r\n\r\n  const searchParamsAsString = searchParams.toString();\r\n  useEffect(() => {\r\n    let promise: any = null;\r\n\r\n    const fetch = async () => {\r\n      try {\r\n        promise = dispatch(\r\n          fetchTrainings({ searchParams: searchParamsAsString })\r\n        );\r\n        await promise;\r\n      } finally {\r\n        if (!firstFetchDone) setFirstFetchDone(true);\r\n      }\r\n    };\r\n\r\n    fetch();\r\n\r\n    return () => {\r\n      if (typeof promise?.abort === \"function\") {\r\n        promise.abort();\r\n      }\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParamsAsString, dispatch]);\r\n\r\n  let renderedElements = null;\r\n\r\n  if (actionStatus === \"FAILED\" && firstFetchDone) {\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Operation failed, no data.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  } else {\r\n    let trainingList = null;\r\n\r\n    if (firstFetchDone) {\r\n      if (trainingsIds.length) {\r\n        trainingList = (\r\n          <Box\r\n            sx={{\r\n              opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1,\r\n            }}\r\n          >\r\n            <Grid\r\n              component=\"ul\"\r\n              container\r\n              direction=\"column\"\r\n              rowSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n              sx={{\r\n                listStyle: \"none\",\r\n                \"& >.MuiGrid-item\": { maxWidth: \"100%\" },\r\n              }}\r\n            >\r\n              {trainingsIds?.map((_id) => (\r\n                <Training key={_id} _id={_id} />\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      } else if (actionStatus === \"IDLE\") {\r\n        trainingList = (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"info\">\r\n              No data.\r\n            </Alert>\r\n          </Box>\r\n        );\r\n      }\r\n    }\r\n\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {trainingList}\r\n        {actionStatus === \"PROCESSING\" && !trainingsIds.length ? (\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              minHeight: \"20rem\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <CircularProgress size={120} sx={{ marginBottom: \"1rem\" }} />\r\n            <Typography>Loading...</Typography>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return <Box mt=\"1.5rem\">{renderedElements}</Box>;\r\n}\r\n\r\nexport default TrainingList;\r\n","import {\r\n  Button,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fab,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ActionStatus, OrNull } from \"../../interfaces/generalInterf\";\r\nimport { addTrainingSession } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport { Field, FieldProps, Form, Formik, FormikErrors } from \"formik\";\r\n\r\nimport { commonDateValidation, DatePickerField } from \"./FilterByDate\";\r\nimport MuiButtonSubmitWithFormik from \"../../components/mui/button-submit-with-formik/MuiButtonSubmitWithFormik\";\r\nimport { MuiTextFieldPropsFromFormikField } from \"../auth/AuthSide\";\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nconst maxCommentSigns = 255;\r\n\r\ninterface FormikValuesType {\r\n  date: OrNull<Date>;\r\n  comment: \"\";\r\n}\r\n\r\nconst validate = (values: FormikValuesType) => {\r\n  const errors: FormikErrors<FormikValuesType> = {};\r\n\r\n  commonDateValidation(values.date, \"date\", errors);\r\n\r\n  if (values.comment.length > maxCommentSigns) {\r\n    errors.comment = `Max ${maxCommentSigns} signs`;\r\n  }\r\n\r\n  return errors;\r\n};\r\n\r\nconst AddTrainingSession = () => {\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const [, setAddRequestStatus] = useState<ActionStatus>(\"IDLE\");\r\n\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [addTrainingDialogOpen, setAddTrainingDialogOpen] = useState(false);\r\n  const requestInProgress = useRef(false);\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const handleOpenAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(false);\r\n  };\r\n\r\n  const createTrainingSession = async (date: Date, comment: string) => {\r\n    try {\r\n      setAddRequestStatus(\"PROCESSING\");\r\n\r\n      await dispatch(\r\n        addTrainingSession({\r\n          trainingSession: { date: date.toISOString(), comment, exercises: [] },\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\"Training session added\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Failed to add new training session:\", error);\r\n    } finally {\r\n      setAddRequestStatus(\"IDLE\");\r\n      handleCloseAddTrainingDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        aria-label=\"add training session\"\r\n        sx={{ marginLeft: \"auto\" }}\r\n        onClick={handleOpenAddTrainingDialog}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        open={addTrainingDialogOpen}\r\n        onClose={handleCloseAddTrainingDialog}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"add-training-session-dialog-title\"\r\n        sx={{ margin: \"0rem\" }}\r\n      >\r\n        <DialogTitle id=\"add-training-session-dialog-title\">\r\n          Add Training Session\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleCloseAddTrainingDialog}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n        <Formik<FormikValuesType>\r\n          initialValues={{\r\n            date: new Date(),\r\n            comment: \"\",\r\n          }}\r\n          validate={validate}\r\n          onSubmit={async (values, actions) => {\r\n            // protection against submitting form twice\r\n            if (!requestInProgress.current) {\r\n              requestInProgress.current = true;\r\n\r\n              try {\r\n                await createTrainingSession(values.date!, values.comment);\r\n              } finally {\r\n                requestInProgress.current = false;\r\n                handleCloseAddTrainingDialog();\r\n                actions.setSubmitting(false);\r\n              }\r\n            }\r\n          }}\r\n        >\r\n          <Form noValidate>\r\n            <DialogContent\r\n              dividers={true}\r\n              sx={{ opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1 }}\r\n            >\r\n              <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n                <Field\r\n                  name=\"date\"\r\n                  component={DatePickerField}\r\n                  label=\"Training date\"\r\n                ></Field>\r\n                <Field name=\"comment\">\r\n                  {({ field, form, meta }: FieldProps) => (\r\n                    <TextField\r\n                      id=\"comment\"\r\n                      {...MuiTextFieldPropsFromFormikField(field, meta)}\r\n                      margin=\"normal\"\r\n                      fullWidth\r\n                      label=\"Comment\"\r\n                      multiline\r\n                      variant=\"filled\"\r\n                      inputProps={{ maxLength: maxCommentSigns }}\r\n                      autoFocus\r\n                    />\r\n                  )}\r\n                </Field>\r\n              </Stack>\r\n            </DialogContent>\r\n            <DialogActions>\r\n              <Button onClick={handleCloseAddTrainingDialog}>Cancel</Button>\r\n              <MuiButtonSubmitWithFormik\r\n                size=\"large\"\r\n                actionStatus={actionStatus}\r\n              >\r\n                Add\r\n              </MuiButtonSubmitWithFormik>\r\n            </DialogActions>\r\n          </Form>\r\n        </Formik>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTrainingSession;\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\n/**\r\n * hook allows to use a useState, and updates its value when its different then a value in a url\r\n *\r\n * @param valueInUrl: value written from url\r\n * @returns the same as useState\r\n */\r\nconst useValueDependsOnUrl = <I,>(valueInUrl: I) => {\r\n  const [value, setValue] = useState(() => valueInUrl);\r\n\r\n  // updating values when url manually changed\r\n  useLayoutEffect(() => {\r\n    if (value !== valueInUrl) {\r\n      setValue(valueInUrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [valueInUrl]);\r\n\r\n  return [value, setValue] as const;\r\n};\r\n\r\nexport default useValueDependsOnUrl;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport {\r\n  DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n  isItemsPerPageType,\r\n  TrainingsUrlQuery_Key_ItemsPerPage_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  queryValueChecking,\r\n  SIX_ITEMS_PER_PAGE,\r\n  NINE_ITEMS_PER_PAGE,\r\n} from \"./trainingsConsts\";\r\n\r\nconst itemsPerPageChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n    isItemsPerPageType\r\n  );\r\n};\r\n\r\nexport const updateUrl = (\r\n  searchParams: URLSearchParams,\r\n  setSearchParamsFn: ReturnType<typeof useSearchParams>[1],\r\n  query: string,\r\n  value: string\r\n) => {\r\n  let searchUrl = updateUrlQuery(searchParams.toString(), query, value);\r\n  searchUrl = updateUrlQuery(searchUrl, TRAININGS_URL_QUERY_KEYS.page);\r\n  setSearchParamsFn(searchUrl);\r\n};\r\n\r\nconst ItemsOnPage = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** items per page form url ****\r\n  const itemsPerPageUrl = itemsPerPageChecking(\r\n    tryConvertToFiniteNumber(searchParams.get(TRAININGS_URL_QUERY_KEYS.items))\r\n  );\r\n\r\n  const [nrOfItemsOnPage, setNrOfItemsOnPage] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_ItemsPerPage_Type>(\r\n      itemsPerPageUrl\r\n    );\r\n\r\n  const onItemsPerPageChanged = (e: SelectChangeEvent<number>) => {\r\n    const nrOfItems = itemsPerPageChecking(Number(e.target.value));\r\n\r\n    setNrOfItemsOnPage(nrOfItems);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.items,\r\n      String(nrOfItems)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: \"5rem\" }}>\r\n      <InputLabel id=\"nr-of-items-on-page-label\">Show Items</InputLabel>\r\n      <Select\r\n        labelId=\"nr-of-items-on-page-label\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={nrOfItemsOnPage}\r\n        onChange={onItemsPerPageChanged}\r\n        label=\"Show Items\"\r\n      >\r\n        <MenuItem value={DEFAULT_TRAININGS_ITEMS_PER_PAGE}>\r\n          {DEFAULT_TRAININGS_ITEMS_PER_PAGE}\r\n        </MenuItem>\r\n        <MenuItem value={SIX_ITEMS_PER_PAGE}>{SIX_ITEMS_PER_PAGE}</MenuItem>\r\n        <MenuItem value={NINE_ITEMS_PER_PAGE}>{NINE_ITEMS_PER_PAGE}</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ItemsOnPage;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport { updateUrl } from \"./ItemsOnPage\";\r\nimport {\r\n  DEFAULT_SORT_DATE_ORDER,\r\n  TrainingsUrlQuery_Key_SortDateOrder_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  isSortDateOrderType,\r\n  queryValueChecking,\r\n} from \"./trainingsConsts\";\r\n\r\nconst sortDateOrderChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_SORT_DATE_ORDER,\r\n    isSortDateOrderType\r\n  );\r\n};\r\n\r\nconst SortingOrder = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** sort date order form url ****\r\n  const sortDateOrderUrl = sortDateOrderChecking(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.sortDateOrder)\r\n  );\r\n\r\n  const [sortDateOrder, setSortDateOrder] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_SortDateOrder_Type>(\r\n      sortDateOrderUrl\r\n    );\r\n\r\n  const onSortOrderChanged = (e: SelectChangeEvent<string>) => {\r\n    const sortOrderTemp = sortDateOrderChecking(e.target.value);\r\n\r\n    setSortDateOrder(sortOrderTemp);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.sortDateOrder,\r\n      sortOrderTemp\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 120 }}>\r\n      <InputLabel id=\"trainings-sort-order\">Sort</InputLabel>\r\n      <Select\r\n        labelId=\"trainings-sort-order\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={sortDateOrder}\r\n        onChange={onSortOrderChanged}\r\n        label=\"Sort\"\r\n      >\r\n        <MenuItem value=\"date-descending\">Date descending</MenuItem>\r\n        <MenuItem value=\"date-ascending\">Date ascending</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortingOrder;\r\n","import { Box, Stack, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nimport Paginate from \"./Paginate\";\r\nimport FilterByDate from \"./FilterByDate\";\r\nimport TrainingList from \"./TrainingList\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nimport AddTrainingSession from \"./AddTrainingSession\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport useUpdateTitle from \"../../components/title-provider/useUpdateTitle\";\r\nimport ItemsOnPage from \"./ItemsOnPage\";\r\nimport SortingOrder from \"./SortingOrder\";\r\n\r\nconst Trainings = () => {\r\n  const theme = useTheme();\r\n  const matchUpLg = useMediaQuery(theme.breakpoints.up(\"lg\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  useUpdateTitle(\"Trainings\");\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"section\">\r\n        <AppAccordion sx={{ mb: 3 }}>\r\n          <AppAccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"filter-content\"\r\n            id=\"filter-header\"\r\n          >\r\n            <Typography>Filters</Typography>\r\n          </AppAccordionSummary>\r\n          <AppAccordionDetails\r\n            sx={{ mb: { xs: \"1.3rem\", lg: \"0.5rem\" }, pt: \"1.5rem\" }}\r\n          >\r\n            <Stack\r\n              direction={matchUpLg ? \"row\" : \"column\"}\r\n              alignItems={matchUpLg ? \"start\" : \"center\"}\r\n              justifyContent={matchUpLg ? \"space-between\" : \"center\"}\r\n              spacing={5}\r\n              sx={{ flexWrap: \"wrap\" }}\r\n            >\r\n              <FilterByDate />\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{}}>\r\n                <ItemsOnPage />\r\n                <SortingOrder />\r\n              </Stack>\r\n            </Stack>\r\n          </AppAccordionDetails>\r\n        </AppAccordion>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            mt: \"1rem\",\r\n          }}\r\n        >\r\n          <Paginate />\r\n          <AddTrainingSession />\r\n        </Stack>\r\n      </Box>\r\n      <Box component=\"section\" sx={{ maxWidth: \"100%\", mt: \"1rem\" }}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          Trainings:\r\n        </Typography>\r\n        <TrainingList />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n"],"names":["title","setTitleContext","useSetTitleContext","useEffect","numberOfPages","useAppSelector","selectNumberOfPages","useSearchParams","searchParams","currentPage","tryConvertToFiniteNumber","get","TRAININGS_URL_QUERY_KEYS","Pagination","size","page","count","color","siblingCount","renderItem","params","query","updateUrlQuery","toString","String","PaginationItem","component","Link","to","dateToString","date","year","getFullYear","month","getMonth","day","getDate","yearString","monthString","length","dayString","isDateValid","Date","Number","isNaN","minAllowedDate","UTC","ClearFilterByDate","removeFilterByDateFromUrl","resetForm","useFormikContext","IconButton","onClick","HighlightOff","sx","fontSize","InitializeDatesFromUrl","dateFilter","setFieldValue","values","updateDateInFormikValues","urlDate","propName","dateString","dateFragments","match","stringToDate","dates","commonDateValidation","fieldName","errors","toLocaleString","timeZone","split","DatePickerField","form","field","other","currentError","name","showError","touched","DatePicker","mask","disableFuture","allowSameDateSelection","openTo","views","minDate","value","onChange","renderInput","TextField","variant","error","helperText","onBlur","handleBlur","validateDates","startDate","endDate","theme","useTheme","matchDownSm","useMediaQuery","breakpoints","down","noSsr","setSearchParams","Box","pt","flexGrow","initialValues","validate","onSubmit","actions","searchUrl","setSubmitting","noValidate","Stack","spacing","direction","alignItems","justifyContent","flexWrap","label","MuiButtonSubmitWithFormik","element","index","TableRow","TableCell","load","quantity","AppAccordion","styled","props","Accordion","elevation","square","border","palette","divider","display","AppAccordionSummary","AccordionSummary","expandIcon","ArrowForwardIosSharp","backgroundColor","mode","flexDirection","AppAccordionDetails","AccordionDetails","padding","borderTop","summaryId","summaryText","summaryIcons","children","useState","expanded","setExpanded","TransitionProps","unmountOnExit","maxWidth","id","ExpandMore","Typography","textOverflow","overflow","exercise","training_id","exerciseIndex","exercises","setExerciseDialogState","series","map","join","openDeleteDialog","setOpenDeleteDialog","dispatch","useAppDispatch","location","useLocation","useSelectActionStatusAndError","actionStatus","setSnackbar","useSetSnackbarContext","accordionSummaryId","_id","handleCloseDialog","handleOnDeleteExercise","exercises_shallowCopyForMutation","splice","updateExercises","urlQuery","search","unwrap","console","position","width","e","stopPropagation","SpeedDial","ariaLabel","FabProps","top","right","transform","height","minHeight","icon","MoreVert","SpeedDialAction","Delete","tooltipTitle","Add","open","Edit","TableContainer","pl","pr","textAlign","TableHead","TableBody","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","Button","autoFocus","disabled","CircularProgress","mr","acceptOnlyDigits","allowDash","target","comment","forEach","exerciseDialogState","trainingSession","requestInProgress","useRef","indexForAutofocus","setIndexAutofocus","elementToAutofocus","current","focus","closeDialog","addUpdateExercise","scroll","margin","grey","Close","reduce","previousValue","currentValue","concat","key","nanoid","undefined","autoComplete","dividers","opacity","meta","MuiTextFieldPropsFromFormikField","fullWidth","inputProps","maxLength","multiline","remove","push","move","swap","insert","unshift","pop","_","hiddenLabel","required","inputRef","ml","mt","startIcon","mb","trainingSessionDateInLocal","dateISOString","hour","getHours","minute","getMinutes","addLeadingZero","Training","state","selectTrainingById","React","accordionSummaryText","handleOnDeleteTrainingSession","deleteTrainingSession","TRAININGS_DEFAULT_URL_QUERY","Grid","item","m","trainingsIds","useSelectTrainingIds","firstFetchDone","setFirstFetchDone","searchParamsAsString","promise","fetch","fetchTrainings","abort","renderedElements","Alert","severity","trainingList","container","rowSpacing","xs","sm","md","listStyle","left","marginBottom","setAddRequestStatus","addTrainingDialogOpen","setAddTrainingDialogOpen","handleCloseAddTrainingDialog","createTrainingSession","addTrainingSession","toISOString","Fab","marginLeft","valueInUrl","setValue","useLayoutEffect","itemsPerPageChecking","queryValueChecking","DEFAULT_TRAININGS_ITEMS_PER_PAGE","isItemsPerPageType","updateUrl","setSearchParamsFn","itemsPerPageUrl","useValueDependsOnUrl","nrOfItemsOnPage","setNrOfItemsOnPage","FormControl","minWidth","InputLabel","Select","labelId","nrOfItems","MenuItem","SIX_ITEMS_PER_PAGE","NINE_ITEMS_PER_PAGE","sortDateOrderChecking","DEFAULT_SORT_DATE_ORDER","isSortDateOrderType","sortDateOrderUrl","sortDateOrder","setSortDateOrder","sortOrderTemp","matchUpLg","up","useUpdateTitle","lg"],"sourceRoot":""}