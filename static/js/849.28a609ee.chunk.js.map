{"version":3,"file":"static/js/849.28a609ee.chunk.js","mappings":"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","sources":["components/title-provider/useUpdateTitle.tsx","auxiliary/updateUrlQuery.ts","react-query-hooks/useQueryTrainings.ts","routes/trainings/Paginate.tsx","auxiliary/date/dateToString.ts","auxiliary/date/isDateValid.ts","routes/trainings/FilterByDate.tsx","auxiliary/date/stringToDate.ts","routes/trainings/SeriesRow.tsx","components/mui/app-accordion/AppAccordion.tsx","routes/trainings/TrainingAccordion.tsx","routes/trainings/Exercise.tsx","components/mui/icon-buttons/DeleteIconButton.tsx","routes/trainings/AddOrEditTrainingExerciseDialog.tsx","routes/trainings/Training.tsx","routes/trainings/TrainingList.tsx","routes/trainings/AddTrainingSession.tsx","components/hooks/useValueDependsOnUrl.tsx","routes/trainings/ItemsOnPage.tsx","routes/trainings/SortingOrder.tsx","routes/trainings/Trainings.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSetTitleContext } from \"./TitleProvider\";\r\n\r\nconst useUpdateTitle = (title: string) => {\r\n  const setTitleContext = useSetTitleContext();\r\n\r\n  useEffect(() => {\r\n    setTitleContext(title);\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default useUpdateTitle;\r\n","/**\r\n * This function updates a query key on a given search portion of the URL, and returns a new instance of that search portion.\r\n * The function performs also a normalization of the given query by adding missing leading \"?\" or returning an empty string instead of \"?\".\r\n * If param queryKey is equal to an empty string, the query key is removed in a returned value.\r\n * If any of parameters is not a primitive string type, the function throws new Error() with the appropriate message.\r\n *\r\n * @param originalQuery - the original search portion of the URL.\r\n * @param queryKey - the name of a query key to be updated.\r\n * @param newKeyValue - the new value for a query key. If an empty string, the query key is removed in a returned value\r\n * @returns a new instance of a given query, with an updated query key and added leading \"?\" if not exists in an original query. If there is no any query, returns an empty string.\r\n */\r\nconst updateUrlQuery = (\r\n  originalQuery: string,\r\n  queryKey: string,\r\n  newKeyValue?: string\r\n) => {\r\n  if (typeof originalQuery !== \"string\")\r\n    throw new Error(\r\n      \"typeof param 'originalQuery' in 'updateUrlQuery' function different than 'string'\"\r\n    );\r\n\r\n  if (typeof queryKey !== \"string\")\r\n    throw new Error(\r\n      \"typeof param 'queryKey' in 'updateUrlQuery' function different than 'string'\"\r\n    );\r\n\r\n  if (newKeyValue && typeof newKeyValue !== \"string\")\r\n    throw new Error(\r\n      \"typeof param 'newKeyValue' in 'updateUrlQuery' function different than 'string'\"\r\n    );\r\n\r\n  let searchUrl = \"\";\r\n\r\n  if (!queryKey) {\r\n    searchUrl = originalQuery;\r\n  } else {\r\n    if (newKeyValue) {\r\n      const queryRegExpGlobalFlag = new RegExp(`${queryKey}=[^&]*`, \"g\");\r\n\r\n      if (originalQuery.match(queryRegExpGlobalFlag) !== null) {\r\n        const queryRegExpWithGroup = new RegExp(`(${queryKey}=)[^&]*`, \"g\");\r\n        searchUrl = originalQuery.replace(\r\n          queryRegExpWithGroup,\r\n          `$1${newKeyValue}`\r\n        );\r\n      } else {\r\n        if (originalQuery === \"\" || originalQuery === \"?\") {\r\n          searchUrl = `?${queryKey}=${newKeyValue}`;\r\n        } else searchUrl = originalQuery + `&${queryKey}=${newKeyValue}`;\r\n      }\r\n    } else {\r\n      const queryRegExpToDelete = new RegExp(\r\n        `(&|\\\\?)?${queryKey}=[^&]*(&?)`,\r\n        \"g\"\r\n      );\r\n      searchUrl = originalQuery.replace(\r\n        queryRegExpToDelete,\r\n        (match, p1, p2) => {\r\n          if ((p1 === \"?\" || p1 === \"\" || p1 === undefined) && p2 === \"&\") {\r\n            return \"?\";\r\n          } else if (p1 === \"&\" && p2 === \"&\") {\r\n            return \"&\";\r\n          } else {\r\n            return \"\";\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  if (searchUrl.length) {\r\n    if (searchUrl === \"?\") {\r\n      searchUrl = \"\";\r\n    } else if (searchUrl[0] !== \"?\") {\r\n      searchUrl = \"?\" + searchUrl;\r\n    }\r\n  }\r\n\r\n  return searchUrl;\r\n};\r\n\r\nexport default updateUrlQuery;\r\n","import { useQuery, UseQueryOptions } from \"react-query\";\r\nimport api from \"../api\";\r\nimport { FetchDataReturnValue } from \"../api/requests\";\r\nimport { useSetSnackbarContext } from \"../components/snackbar-provider/SnackbarProvider\";\r\nimport { TrainingsFromApi } from \"../interfaces/trainingsInterf\";\r\n\r\nexport type TrainingsQueryKey = readonly [\r\n  string,\r\n  {\r\n    search: string;\r\n  }\r\n];\r\n\r\nconst useQueryTrainings = <T = FetchDataReturnValue<TrainingsFromApi>>(\r\n  searchParams: string,\r\n  overrideOptions?: UseQueryOptions<\r\n    FetchDataReturnValue<TrainingsFromApi>,\r\n    Error,\r\n    T,\r\n    TrainingsQueryKey\r\n  >\r\n) => {\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  return useQuery<\r\n    FetchDataReturnValue<TrainingsFromApi>,\r\n    Error,\r\n    T,\r\n    TrainingsQueryKey\r\n  >(\r\n    [\"trainings\", { search: searchParams }],\r\n    ({ queryKey, signal }) => {\r\n      return api.trainings.getTrainings(queryKey[1].search, signal).then(\r\n        (res) => res,\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      );\r\n    },\r\n    {\r\n      refetchOnWindowFocus: false,\r\n      useErrorBoundary: false,\r\n      onError: (error) => {\r\n        console.error(\"Failed to fetch trainings:\", error);\r\n        setSnackbar(\"Failed to fetch trainings\", \"error\", undefined, true);\r\n      },\r\n      ...overrideOptions,\r\n    }\r\n  );\r\n};\r\n\r\nexport default useQueryTrainings;\r\n","import { Pagination, PaginationItem } from \"@mui/material\";\r\n\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\n\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\n\r\nimport useQueryTrainings from \"../../react-query-hooks/useQueryTrainings\";\r\n\r\nconst Paginate = () => {\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const { data: numberOfPages } = useQueryTrainings(searchParams.toString(), {\r\n    select: (data) => data.body.numberOfPages,\r\n    keepPreviousData: true,\r\n    enabled: false,\r\n    notifyOnChangeProps: [\"data\"],\r\n  });\r\n\r\n  let currentPage = tryConvertToFiniteNumber(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.page)\r\n  );\r\n\r\n  if (currentPage === null || currentPage <= 0) currentPage = 1;\r\n\r\n  return (\r\n    <Pagination\r\n      size=\"small\"\r\n      page={currentPage}\r\n      count={numberOfPages ? numberOfPages : 1}\r\n      color=\"primary\"\r\n      siblingCount={1}\r\n      renderItem={(params) => {\r\n        const query = updateUrlQuery(\r\n          searchParams.toString(),\r\n          TRAININGS_URL_QUERY_KEYS.page,\r\n          String(params.page)\r\n        );\r\n\r\n        return <PaginationItem {...params} component={Link} to={query} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","export const dateToString = (date: Date) => {\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n\r\n  const yearString = String(year);\r\n\r\n  let monthString = String(month);\r\n\r\n  if (monthString.length < 2) {\r\n    monthString = \"0\" + monthString;\r\n  }\r\n\r\n  let dayString = String(day);\r\n\r\n  if (dayString.length < 2) {\r\n    dayString = \"0\" + dayString;\r\n  }\r\n\r\n  return `${yearString}-${monthString}-${dayString}`;\r\n};\r\n","export const isDateValid = (date: Date) =>\r\n  date instanceof Date && !Number.isNaN(Number(date));\r\n","import { DatePicker, DatePickerProps } from \"@mui/lab\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport { dateToString } from \"../../auxiliary/date/dateToString\";\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\nimport { stringToDate } from \"../../auxiliary/date/stringToDate\";\r\nimport { OrNull } from \"../../interfaces/generalInterf\";\r\nimport { isDateValid } from \"../../auxiliary/date/isDateValid\";\r\n\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  ControllerRenderProps,\r\n  ControllerFieldState,\r\n  SubmitHandler,\r\n  UseFormSetValue,\r\n  UseFormReset,\r\n} from \"react-hook-form\";\r\n\r\ninterface FormDataType {\r\n  \"start-date\": OrNull<Date>;\r\n  \"end-date\": OrNull<Date>;\r\n}\r\n\r\nconst minAllowedDate = new Date(Date.UTC(2000, 1, 1, 0, 0, 0));\r\n\r\nconst ClearFilterByDate = ({\r\n  removeFilterByDateFromUrl,\r\n  reset,\r\n}: {\r\n  removeFilterByDateFromUrl: () => void;\r\n  reset: UseFormReset<FormDataType>;\r\n}) => {\r\n  return (\r\n    <IconButton\r\n      type=\"button\"\r\n      aria-label=\"clear filter\"\r\n      onClick={() => {\r\n        reset();\r\n        removeFilterByDateFromUrl();\r\n      }}\r\n    >\r\n      <HighlightOffIcon sx={{ fontSize: \"3rem\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst useInitializeDatesFromUrl = (\r\n  dateFilter: string | null,\r\n  setValue: UseFormSetValue<FormDataType>\r\n) => {\r\n  useEffect(() => {\r\n    const updateDateInFormValues = (\r\n      urlDate: string,\r\n      propName: keyof FormDataType\r\n    ) => {\r\n      const date = stringToDate(urlDate);\r\n      if (isDateValid(date)) {\r\n        setValue(propName, date, { shouldValidate: true });\r\n      }\r\n    };\r\n\r\n    if (dateFilter) {\r\n      const dates = dateFilter.match(\r\n        /from-(\\d{4}-\\d{2}-\\d{2})-to-(\\d{4}-\\d{2}-\\d{2})/\r\n      );\r\n\r\n      if (dates?.[1]) {\r\n        updateDateInFormValues(dates[1], \"start-date\");\r\n      }\r\n      if (dates?.[2]) {\r\n        updateDateInFormValues(dates[2], \"end-date\");\r\n      }\r\n    } else {\r\n      setValue(\"start-date\", null);\r\n      setValue(\"end-date\", null);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dateFilter]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const commonDateValidation = {\r\n  validDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && isDateValid(date)) || \"Enter valid date\",\r\n  notFutureDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && date < new Date()) || \"Future date not allowed\",\r\n  notBeforeMinAllowedDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && date > minAllowedDate) ||\r\n    `Date before ${\r\n      minAllowedDate.toLocaleString(\"pl-PL\", { timeZone: \"UTC\" }).split(\",\")[0]\r\n    }`,\r\n};\r\ninterface DatePickerFieldProps<T> extends DatePickerProps {\r\n  field: ControllerRenderProps<T, any>;\r\n  fieldState: ControllerFieldState;\r\n  getShouldDisableDateError?: (date: Date) => string;\r\n}\r\n\r\nexport function DatePickerField<T>({\r\n  field,\r\n  fieldState,\r\n  ...other\r\n}: Omit<\r\n  DatePickerFieldProps<T>,\r\n  \"value\" | \"onChange\" | \"renderInput\" | \"inputRef\"\r\n>) {\r\n  return (\r\n    <DatePicker\r\n      mask={\"__.__.____\"}\r\n      disableFuture\r\n      allowSameDateSelection\r\n      openTo=\"month\"\r\n      views={[\"year\", \"month\", \"day\"]}\r\n      minDate={minAllowedDate}\r\n      value={field.value}\r\n      onChange={field.onChange}\r\n      inputRef={field.ref}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          name={field.name}\r\n          variant=\"standard\"\r\n          error={fieldState.invalid}\r\n          helperText={fieldState.invalid ? fieldState.error?.message : \" \"}\r\n          onBlur={field.onBlur}\r\n        />\r\n      )}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nconst FilterByDate = () => {\r\n  const theme = useTheme();\r\n  const matchDownSm = useMediaQuery(theme.breakpoints.down(\"sm\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    control,\r\n\r\n    watch,\r\n  } = useForm<FormDataType>({\r\n    defaultValues: {\r\n      \"start-date\": null,\r\n      \"end-date\": null,\r\n    },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const startDate = watch(\"start-date\");\r\n\r\n  const dateFilter = searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate);\r\n\r\n  useInitializeDatesFromUrl(dateFilter, setValue);\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    try {\r\n      const startDate = values[\"start-date\"] as any as Date;\r\n      const endDate = values[\"end-date\"] as any as Date;\r\n\r\n      const searchUrl = updateUrlQuery(\r\n        searchParams.toString(),\r\n        TRAININGS_URL_QUERY_KEYS.filterByDate,\r\n        \"from-\" + dateToString(startDate) + \"-to-\" + dateToString(endDate)\r\n      );\r\n      setSearchParams(searchUrl);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ pt: \"0.0rem\", flexGrow: 0 }}>\r\n      <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack\r\n          spacing={matchDownSm ? 1 : 3}\r\n          direction={matchDownSm ? \"column\" : \"row\"}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ flexWrap: \"wrap\" }}\r\n        >\r\n          <Controller\r\n            render={({ field, fieldState, formState }) => (\r\n              <DatePickerField\r\n                field={field}\r\n                fieldState={fieldState}\r\n                label=\"Start date\"\r\n              />\r\n            )}\r\n            name=\"start-date\"\r\n            control={control}\r\n            rules={{\r\n              validate: {\r\n                ...commonDateValidation,\r\n              },\r\n            }}\r\n          />\r\n          <Controller\r\n            render={({ field, fieldState, formState }) => (\r\n              <DatePickerField\r\n                field={field}\r\n                fieldState={fieldState}\r\n                label=\"End date\"\r\n              />\r\n            )}\r\n            name=\"end-date\"\r\n            control={control}\r\n            rules={{\r\n              validate: {\r\n                ...commonDateValidation,\r\n                afterStartDate: (date) =>\r\n                  (date !== null && startDate !== null && date > startDate) ||\r\n                  \"End date after start date\",\r\n              },\r\n            }}\r\n          />\r\n          <Box>\r\n            <Button type=\"submit\" size=\"large\" variant=\"outlined\">\r\n              Filter\r\n            </Button>\r\n\r\n            {searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate) ? (\r\n              <ClearFilterByDate\r\n                removeFilterByDateFromUrl={() => {\r\n                  setSearchParams(\r\n                    updateUrlQuery(\r\n                      searchParams.toString(),\r\n                      TRAININGS_URL_QUERY_KEYS.filterByDate\r\n                    )\r\n                  );\r\n                }}\r\n                reset={reset}\r\n              />\r\n            ) : null}\r\n          </Box>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilterByDate;\r\n","export const stringToDate = (dateString: string) => {\r\n  const dateFragments = dateString.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n  return new Date(\r\n    Number(dateFragments?.[1]),\r\n    Number(dateFragments?.[2]) - 1,\r\n    Number(dateFragments?.[3])\r\n  );\r\n};\r\n","import { TableCell, TableRow } from \"@mui/material\";\r\nimport { SeriesDataFromApi } from \"../../interfaces/trainingsInterf\";\r\n\r\nconst SeriesRow = ({\r\n  element,\r\n  index,\r\n}: {\r\n  element: SeriesDataFromApi;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{index + 1}</TableCell>\r\n      <TableCell>\r\n        {element.load && element.load !== \"-\" ? element.load : \"-\"}\r\n      </TableCell>\r\n      <TableCell>{element.quantity}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default SeriesRow;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionProps,\r\n  AccordionSummary,\r\n  AccordionSummaryProps,\r\n} from \"@mui/material\";\r\n\r\nconst AppAccordion = styled((props: AccordionProps) => (\r\n  <Accordion elevation={2} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {},\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AppAccordionSummary = styled((props: AccordionSummaryProps) => (\r\n  <AccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(255, 255, 255, .05)\"\r\n      : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n}));\r\n\r\nconst AppAccordionDetails = styled(AccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nexport { AppAccordion, AppAccordionSummary, AppAccordionDetails };\r\n","import { Stack, Typography } from \"@mui/material\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { useState } from \"react\";\r\n\r\nconst TrainingAccordion = ({\r\n  summaryId,\r\n  summaryText,\r\n  summaryIcons,\r\n  children,\r\n}: {\r\n  summaryId: string;\r\n  summaryText: string;\r\n  summaryIcons: React.ReactNode;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <AppAccordion\r\n      TransitionProps={{ unmountOnExit: true }}\r\n      expanded={expanded}\r\n      onChange={() => setExpanded((expanded) => !expanded)}\r\n      sx={{\r\n        maxWidth: \"100%\",\r\n        \"& .MuiAccordionSummary-content\": { maxWidth: \"calc(100% - 24px)\" },\r\n      }}\r\n    >\r\n      <AppAccordionSummary\r\n        aria-controls={summaryId}\r\n        id={summaryId}\r\n        expandIcon={<ExpandMoreIcon />}\r\n        sx={{}}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            maxWidth: \"100%\",\r\n          }}\r\n          flexGrow={1}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              textOverflow: \"ellipsis\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {summaryText}\r\n          </Typography>\r\n\r\n          {summaryIcons}\r\n        </Stack>\r\n      </AppAccordionSummary>\r\n      <AppAccordionDetails>{children}</AppAccordionDetails>\r\n    </AppAccordion>\r\n  );\r\n};\r\n\r\nexport default TrainingAccordion;\r\n","import { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport SeriesRow from \"./SeriesRow\";\r\nimport {} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  SpeedDial,\r\n  SpeedDialAction,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\n\r\nimport { IdFromApi } from \"../../interfaces/commonInterf\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\n\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport api from \"../../api\";\r\nimport useQueryUser from \"../../react-query-hooks/useQueryUser\";\r\n\r\nconst Exercise = ({\r\n  exercise,\r\n  training_id,\r\n  exerciseIndex,\r\n  exercises,\r\n  setExerciseDialogState,\r\n}: {\r\n  exercise: ExerciseDataFromApi;\r\n  training_id: IdFromApi;\r\n  exerciseIndex: number;\r\n  exercises: ExerciseDataFromApi[];\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n}) => {\r\n  const series = exercise.series.map((element) => element.quantity).join(\", \");\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n\r\n  const location = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const queryClient = useQueryClient();\r\n  const user = useQueryUser();\r\n  const mutation = useMutation(\r\n    () => {\r\n      const exercises_shallowCopyForMutation = [...exercises];\r\n      exercises_shallowCopyForMutation.splice(exerciseIndex, 1);\r\n      return api.trainings\r\n        .updateExercises(\r\n          training_id,\r\n          exercises_shallowCopyForMutation,\r\n          location.search\r\n        )\r\n        .then(\r\n          (res) => res,\r\n          (error) => {\r\n            throw error;\r\n          }\r\n        );\r\n    },\r\n    {\r\n      onSuccess: (data, variables, context) => {\r\n        if (user) {\r\n          queryClient.setQueryData(\r\n            [\"trainings\", { search: searchParams.toString() }],\r\n            data\r\n          );\r\n        }\r\n        setSnackbar(\"Exercise deleted\", \"info\");\r\n      },\r\n      onError: (error, variables, context) => {\r\n        console.error(\"Failed to add exercise:\", error);\r\n        setSnackbar(\"Failed to add exercise\", \"error\", undefined, true);\r\n      },\r\n      onSettled: (data, error, variables, context) => {\r\n        handleCloseDialog();\r\n      },\r\n    }\r\n  );\r\n\r\n  const accordionSummaryId = `exercise_${exercise._id}`;\r\n\r\n  const deleteButtonOnClickHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteExercise = () => {\r\n    mutation.mutate();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={`${exercise.name}: [${\r\n          series.length ? series : \"no series\"\r\n        }]`}\r\n        summaryIcons={\r\n          <Box\r\n            sx={{ position: \"relative\", width: \"5rem\" }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <SpeedDial\r\n              ariaLabel=\"Edit options\"\r\n              direction=\"left\"\r\n              FabProps={{\r\n                size: \"small\",\r\n                color: \"primary\",\r\n              }}\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                transform: \"translateY(-50%)\",\r\n                \"& .MuiButtonBase-root\": {\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  minHeight: \"unset\",\r\n                },\r\n              }}\r\n              icon={<MoreVertIcon />}\r\n            >\r\n              <SpeedDialAction\r\n                icon={<DeleteIcon />}\r\n                tooltipTitle=\"Delete exercise\"\r\n                onClick={deleteButtonOnClickHandle}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<AddIcon />}\r\n                tooltipTitle=\"Add exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({ open: true, index: exerciseIndex });\r\n                }}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<EditIcon />}\r\n                tooltipTitle=\"Edit exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({\r\n                    open: true,\r\n                    index: exerciseIndex,\r\n                    initialValues: exercise,\r\n                  });\r\n                }}\r\n              />\r\n            </SpeedDial>\r\n          </Box>\r\n        }\r\n      >\r\n        <TableContainer\r\n          component=\"table\"\r\n          sx={{\r\n            \"& .MuiTableCell-root\": {\r\n              pl: \"0.25rem\",\r\n              pr: \"0.25rem\",\r\n              textAlign: \"center\",\r\n            },\r\n          }}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography>Nr</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Load&nbsp;(kg)</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Quantity</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {exercise.series.map((series, index) => (\r\n              <SeriesRow key={series._id} element={series} index={index} />\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </TrainingAccordion>\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-exercise-dialog-title\"\r\n        aria-describedby=\"delete-exercise-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-exercise-dialog-title\">\r\n          Delete exercise confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-exercise-dialog-description\">\r\n            Do you really want to delete exercise{\" \"}\r\n            <strong>{exercise.name}</strong>?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteExercise}\r\n            autoFocus\r\n            disabled={mutation.isLoading}\r\n          >\r\n            {mutation.isLoading && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import { IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst DeleteIconButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}) => {\r\n  return (\r\n    <IconButton aria-label=\"delete\" onClick={onClick}>\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteIconButton;\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Stack,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\n\r\nimport {\r\n  ExerciseData,\r\n  SeriesData,\r\n  TrainingSessionDataFromApi,\r\n} from \"../../interfaces/trainingsInterf\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport { MuiTextFieldPropsError } from \"../auth/AuthSide\";\r\nimport { nanoid } from \"nanoid\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\n\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\nimport api from \"../../api\";\r\nimport useQueryUser from \"../../react-query-hooks/useQueryUser\";\r\n\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  SubmitHandler,\r\n  useFieldArray,\r\n  UseFormSetValue,\r\n  FieldPath,\r\n  UseFormTrigger,\r\n} from \"react-hook-form\";\r\n\r\nconst maxCommentSigns = 255;\r\nconst maxExerciseNameSigns = 100;\r\n\r\ntype Series = {\r\n  [Property in keyof SeriesData]: SeriesData[Property] | \"\";\r\n} & { key: string };\r\n\r\ninterface FormDataType {\r\n  name: string;\r\n  comment: string;\r\n  series: Series[];\r\n}\r\n\r\nconst TriggerManualFieldValidation = ({\r\n  trigger,\r\n  triggerNewSeriesValidation,\r\n  indexForValidationTrigger,\r\n}: {\r\n  trigger: UseFormTrigger<FormDataType>;\r\n  triggerNewSeriesValidation: boolean;\r\n  indexForValidationTrigger: number | null;\r\n}) => {\r\n  // trigger manual validation for new series\r\n  useEffect(() => {\r\n    if (indexForValidationTrigger !== null) {\r\n      trigger(`series.${indexForValidationTrigger}.quantity`, {\r\n        // shouldFocus: true,\r\n      });\r\n    }\r\n  }, [triggerNewSeriesValidation, indexForValidationTrigger, trigger]);\r\n\r\n  // trigger manual validation for all field when form is first time loaded\r\n  useEffect(() => {\r\n    trigger();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nconst acceptOnlyDigits = (\r\n  e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\r\n  setValue: UseFormSetValue<FormDataType>,\r\n  filedName: FieldPath<FormDataType>,\r\n  allowDash = false\r\n) => {\r\n  if (e.target.value.match(/^\\d*$/) || (allowDash && e.target.value === \"-\")) {\r\n    setValue(filedName, e.target.value, { shouldValidate: true });\r\n  }\r\n};\r\n\r\nconst AddOrEditTrainingExerciseDialog = ({\r\n  exerciseDialogState,\r\n  setExerciseDialogState,\r\n  trainingSession,\r\n}: {\r\n  exerciseDialogState: ExerciseDialogStateType;\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n  trainingSession: TrainingSessionDataFromApi | undefined;\r\n}) => {\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const location = useLocation();\r\n  const [searchParams] = useSearchParams();\r\n  const requestInProgress = useRef(false);\r\n\r\n  const [indexForValidationTrigger, setIndexForValidationTrigger] = useState<\r\n    number | null\r\n  >(null);\r\n  const [triggerNewSeriesValidation, setTriggerNewSeriesValidation] =\r\n    useState<boolean>(false);\r\n\r\n  const user = useQueryUser();\r\n  const queryClient = useQueryClient();\r\n  const mutation = useMutation(\r\n    (exercises: ExerciseData[]) => {\r\n      return api.trainings\r\n        .updateExercises(\r\n          trainingSession?._id ? trainingSession._id : \"\",\r\n          exercises,\r\n          location.search\r\n        )\r\n        .then(\r\n          (res) => res,\r\n          (error) => {\r\n            throw error;\r\n          }\r\n        );\r\n    },\r\n    {\r\n      onSuccess: (data, variables, context) => {\r\n        if (user) {\r\n          queryClient.setQueryData(\r\n            [\"trainings\", { search: searchParams.toString() }],\r\n            data\r\n          );\r\n        }\r\n\r\n        setSnackbar(\r\n          exerciseDialogState.initialValues\r\n            ? \"Exercise Updated\"\r\n            : \"Exercise Added\",\r\n          \"success\"\r\n        );\r\n      },\r\n      onError: (error, variables, context) => {\r\n        console.error(\"Failed to add exercise:\", error);\r\n        setSnackbar(\"Failed to add exercise\", \"error\", undefined, true);\r\n      },\r\n      onSettled: (data, error, variables, context) => {\r\n        closeDialog();\r\n      },\r\n    }\r\n  );\r\n\r\n  const {\r\n    handleSubmit,\r\n    setValue,\r\n    control,\r\n    trigger,\r\n    formState: { isSubmitting, isValid },\r\n  } = useForm<FormDataType>({\r\n    defaultValues: exerciseDialogState.initialValues\r\n      ? {\r\n          name: exerciseDialogState.initialValues.name,\r\n          comment: exerciseDialogState.initialValues.comment,\r\n          series: exerciseDialogState.initialValues.series.reduce<Series[]>(\r\n            (previousValue, currentValue) =>\r\n              previousValue.concat([\r\n                {\r\n                  key: nanoid(),\r\n                  // key: currentValue._id,\r\n                  load: currentValue.load,\r\n                  quantity: currentValue.quantity,\r\n                },\r\n              ]),\r\n            []\r\n          ),\r\n        }\r\n      : {\r\n          name: \"\",\r\n          comment: \"\",\r\n          series: [] as Series[],\r\n        },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const { fields, append, remove, insert } = useFieldArray({\r\n    control,\r\n    name: \"series\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    // protection against submitting form twice\r\n    if (!requestInProgress.current) {\r\n      requestInProgress.current = true;\r\n\r\n      try {\r\n        const exercises_shallowCopyForMutation: ExerciseData[] = [\r\n          ...(trainingSession?.exercises ?? []),\r\n        ];\r\n        exercises_shallowCopyForMutation.splice(\r\n          (exerciseDialogState.index ?? trainingSession?.exercises.length) || 0,\r\n          exerciseDialogState.initialValues ? 1 : 0,\r\n          {\r\n            ...(exerciseDialogState?.initialValues?._id\r\n              ? { _id: exerciseDialogState.initialValues._id }\r\n              : undefined),\r\n            name: values.name ?? \"\",\r\n            comment: values.comment ?? \"\",\r\n            series:\r\n              values.series.reduce<SeriesData[]>(\r\n                (previousValue, currentValue) =>\r\n                  previousValue.concat([\r\n                    {\r\n                      load:\r\n                        currentValue.load === \"-\" || !currentValue.load\r\n                          ? 0\r\n                          : currentValue.load,\r\n                      quantity: !currentValue.quantity\r\n                        ? 0\r\n                        : currentValue.quantity,\r\n                    },\r\n                  ]),\r\n                []\r\n              ) ?? [],\r\n          }\r\n        );\r\n\r\n        await mutation.mutateAsync(exercises_shallowCopyForMutation);\r\n      } finally {\r\n        requestInProgress.current = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setExerciseDialogState({ open: false });\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={exerciseDialogState.open}\r\n      onClose={closeDialog}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"add-edit-exercise-dialog-title\"\r\n      sx={{ margin: \"0rem\" }}\r\n    >\r\n      <DialogTitle id=\"add-edit-exercise-dialog-title\">\r\n        {exerciseDialogState.initialValues ? \"Update Exercise\" : \"Add Exercise\"}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={closeDialog}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        <DialogContent\r\n          dividers={true}\r\n          sx={{ opacity: mutation.isLoading ? 0.5 : 1 }}\r\n        >\r\n          <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n            <Controller\r\n              render={({ field, fieldState, formState }) => (\r\n                <TextField\r\n                  id=\"name\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  label=\"Exercise name\"\r\n                  variant=\"filled\"\r\n                  inputProps={{ maxLength: maxExerciseNameSigns }}\r\n                  autoFocus\r\n                  {...MuiTextFieldPropsError(field, fieldState)}\r\n                />\r\n              )}\r\n              name=\"name\"\r\n              control={control}\r\n              rules={{\r\n                required: \"Required\",\r\n                maxLength: {\r\n                  value: maxExerciseNameSigns,\r\n                  message: `Max length is ${maxExerciseNameSigns} characters`,\r\n                },\r\n              }}\r\n            />\r\n\r\n            <Controller\r\n              render={({ field, fieldState, formState }) => (\r\n                <TextField\r\n                  id=\"comment\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  label=\"Exercise comment\"\r\n                  multiline\r\n                  variant=\"filled\"\r\n                  inputProps={{ maxLength: maxCommentSigns }}\r\n                  {...MuiTextFieldPropsError(field, fieldState)}\r\n                />\r\n              )}\r\n              name=\"comment\"\r\n              control={control}\r\n              rules={{\r\n                maxLength: {\r\n                  value: maxCommentSigns,\r\n                  message: `Max length is ${maxCommentSigns} characters`,\r\n                },\r\n              }}\r\n            />\r\n\r\n            {fields && fields.length > 0 ? (\r\n              <Stack>\r\n                <TableContainer\r\n                  component=\"table\"\r\n                  sx={{\r\n                    \"& .MuiTableCell-root\": {\r\n                      padding: \"0 0.25rem\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                    \"& .MuiTableCell-body\": {\r\n                      padding: \"0.4rem 0.25rem\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>Nr</TableCell>\r\n                      <TableCell>Load&nbsp;(kg)</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {fields.map((field, index) => (\r\n                      <TableRow key={field.id}>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            type=\"button\"\r\n                            aria-label=\"delete series\"\r\n                            onClick={() => remove(index)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography variant=\"h5\"> {index + 1}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Controller\r\n                            render={({ field, fieldState, formState }) => (\r\n                              <TextField\r\n                                hiddenLabel\r\n                                size=\"small\"\r\n                                required\r\n                                variant=\"filled\"\r\n                                inputProps={{\r\n                                  maxLength: 3,\r\n                                }}\r\n                                sx={{\r\n                                  width: \"3.5rem\",\r\n                                  transform: \"translateY(0.7rem)\",\r\n                                  \"& .MuiFormHelperText-root\": {\r\n                                    ml: \"0.1rem\",\r\n                                    mt: \"0.1rem\",\r\n                                  },\r\n                                  \"& .MuiFilledInput-input\": {\r\n                                    textAlign: \"center\",\r\n                                  },\r\n                                }}\r\n                                {...MuiTextFieldPropsError(field, fieldState)}\r\n                                onChange={(e) => {\r\n                                  acceptOnlyDigits(\r\n                                    e,\r\n                                    setValue,\r\n                                    field.name,\r\n                                    true\r\n                                  );\r\n                                }}\r\n                              />\r\n                            )}\r\n                            name={`series.${index}.load` as const}\r\n                            control={control}\r\n                            rules={{\r\n                              validate: {\r\n                                inAllowRange: (value) => {\r\n                                  if (value !== \"-\") {\r\n                                    const quantity = Number(value);\r\n                                    if (\r\n                                      Number.isNaN(quantity) ||\r\n                                      quantity < 0 ||\r\n                                      quantity > 999\r\n                                    ) {\r\n                                      return \"<0,999>\";\r\n                                    }\r\n                                  }\r\n                                  return true;\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Controller\r\n                            render={({ field, fieldState, formState }) => (\r\n                              <TextField\r\n                                hiddenLabel\r\n                                size=\"small\"\r\n                                required\r\n                                variant=\"filled\"\r\n                                inputProps={{\r\n                                  maxLength: 3,\r\n                                }}\r\n                                sx={{\r\n                                  width: \"3.5rem\",\r\n                                  transform: \"translateY(0.7rem)\",\r\n                                  \"& .MuiFormHelperText-root\": {\r\n                                    ml: \"0.1rem\",\r\n                                    mt: \"0.1rem\",\r\n                                  },\r\n                                  \"& .MuiFilledInput-input\": {\r\n                                    textAlign: \"center\",\r\n                                  },\r\n                                }}\r\n                                {...MuiTextFieldPropsError(field, fieldState)}\r\n                                onChange={(e) => {\r\n                                  acceptOnlyDigits(\r\n                                    e,\r\n                                    setValue,\r\n                                    field.name,\r\n                                    false\r\n                                  );\r\n                                }}\r\n                              />\r\n                            )}\r\n                            name={`series.${index}.quantity` as const}\r\n                            control={control}\r\n                            rules={{\r\n                              required: \"Required\",\r\n                              validate: {\r\n                                inAllowRange: (value) => {\r\n                                  const quantity = Number(value);\r\n                                  if (\r\n                                    Number.isNaN(quantity) ||\r\n                                    quantity < 1 ||\r\n                                    quantity > 999\r\n                                  ) {\r\n                                    return \"<1,999>\";\r\n                                  }\r\n                                  return true;\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            type=\"button\"\r\n                            aria-label=\"add series\"\r\n                            onClick={() => {\r\n                              insert(index, {\r\n                                key: nanoid(),\r\n                                load: \"\",\r\n                                quantity: \"\",\r\n                              });\r\n\r\n                              setIndexForValidationTrigger(index);\r\n                              setTriggerNewSeriesValidation((value) => !value);\r\n                            }}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </TableContainer>\r\n              </Stack>\r\n            ) : undefined}\r\n\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => {\r\n                append({\r\n                  key: nanoid(),\r\n                  load: \"\",\r\n                  quantity: \"\",\r\n                });\r\n\r\n                setIndexForValidationTrigger(fields.length);\r\n                setTriggerNewSeriesValidation((value) => !value);\r\n              }}\r\n              sx={{\r\n                mt: fields.length > 0 ? \"1.6rem\" : \"0.4rem\",\r\n                mb: \"0.8rem\",\r\n              }}\r\n            >\r\n              Add series\r\n            </Button>\r\n          </Stack>\r\n          <TriggerManualFieldValidation\r\n            trigger={trigger}\r\n            triggerNewSeriesValidation={triggerNewSeriesValidation}\r\n            indexForValidationTrigger={indexForValidationTrigger}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"button\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            disabled={isSubmitting || !isValid || mutation.isLoading}\r\n          >\r\n            {mutation.isLoading && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            {exerciseDialogState.initialValues ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddOrEditTrainingExerciseDialog;\r\n","import * as React from \"react\";\r\nimport Exercise from \"./Exercise\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport DeleteIconButton from \"../../components/mui/icon-buttons/DeleteIconButton\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport {\r\n  TRAININGS_DEFAULT_URL_QUERY,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n} from \"./trainingsConsts\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Box } from \"@mui/system\";\r\nimport AddOrEditTrainingExerciseDialog from \"./AddOrEditTrainingExerciseDialog\";\r\n\r\nimport { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nimport { useQueryClient, useMutation, Query } from \"react-query\";\r\nimport api from \"../../api\";\r\n\r\nimport useQueryTrainings, {\r\n  TrainingsQueryKey,\r\n} from \"../../react-query-hooks/useQueryTrainings\";\r\nimport useQueryUser from \"../../react-query-hooks/useQueryUser\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport { IdFromApi } from \"../../interfaces/commonInterf\";\r\n\r\nexport interface ExerciseDialogStateType {\r\n  open: boolean;\r\n  index?: number;\r\n  initialValues?: ExerciseDataFromApi;\r\n}\r\n\r\nconst trainingSessionDateInLocal = (dateISOString: string) => {\r\n  const date = new Date(dateISOString);\r\n\r\n  const year = String(date.getFullYear());\r\n  let month = String(date.getMonth() + 1);\r\n  let day = String(date.getDate());\r\n  let hour = String(date.getHours());\r\n  let minute = String(date.getMinutes());\r\n\r\n  const addLeadingZero = (element: string) => {\r\n    if (element.length < 2) {\r\n      return \"0\" + element;\r\n    } else {\r\n      return element;\r\n    }\r\n  };\r\n\r\n  month = addLeadingZero(month);\r\n  day = addLeadingZero(day);\r\n  hour = addLeadingZero(hour);\r\n  minute = addLeadingZero(minute);\r\n\r\n  return `${day}-${month}-${year} ${hour}:${minute}`;\r\n};\r\n\r\nconst Training = ({ _id }: { _id: IdFromApi }) => {\r\n  const queryClient = useQueryClient();\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const location = useLocation();\r\n\r\n  const user = useQueryUser();\r\n\r\n  const { data: trainingSession } = useQueryTrainings(searchParams.toString(), {\r\n    select: (data) =>\r\n      data.body.trainingSessions.find((training) => training._id === _id),\r\n    enabled: false,\r\n    notifyOnChangeProps: [\"data\"],\r\n  });\r\n\r\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\r\n  const [exerciseDialogState, setExerciseDialogState] =\r\n    React.useState<ExerciseDialogStateType>({\r\n      open: false,\r\n    });\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const locationSearchForMutation = location.search\r\n    ? location.search\r\n    : TRAININGS_DEFAULT_URL_QUERY;\r\n\r\n  const mutation = useMutation(\r\n    () =>\r\n      api.trainings.deleteTrainingSession(_id, locationSearchForMutation).then(\r\n        (res) => res,\r\n        (error) => {\r\n          throw error;\r\n        }\r\n      ),\r\n    {\r\n      onSuccess: (data, variables, context) => {\r\n        if (user) {\r\n          queryClient.setQueryData(\r\n            [\"trainings\", { search: searchParams.toString() }],\r\n            data\r\n          );\r\n\r\n          const pageUrl = new RegExp(\r\n            `${TRAININGS_URL_QUERY_KEYS.page}=([^&]*)`\r\n          ).exec(locationSearchForMutation)?.[1];\r\n\r\n          if (pageUrl !== String(data.body.currentPage)) {\r\n            const searchUrl = updateUrlQuery(\r\n              locationSearchForMutation,\r\n              TRAININGS_URL_QUERY_KEYS.page,\r\n              String(data.body.currentPage)\r\n            );\r\n            setSearchParams(searchUrl);\r\n          }\r\n        }\r\n\r\n        queryClient.resetQueries({\r\n          predicate: (query) =>\r\n            query.queryKey[0] === \"trainings\" &&\r\n            (\r\n              query as any as Query<\r\n                unknown,\r\n                unknown,\r\n                unknown,\r\n                TrainingsQueryKey\r\n              >\r\n            ).queryKey[1].search !== searchParams.toString(),\r\n        });\r\n        setSnackbar(\"Training session deleted\", \"info\");\r\n      },\r\n      onError: (error, variables, context) => {\r\n        console.error(\"Failed to delete training session:\", error);\r\n        setSnackbar(\r\n          \"Failed to delete training session\",\r\n          \"error\",\r\n          undefined,\r\n          true\r\n        );\r\n      },\r\n      onSettled: (data, error, variables, context) => {\r\n        handleCloseDialog();\r\n      },\r\n    }\r\n  );\r\n\r\n  const accordionSummaryId = `session_${_id}`;\r\n\r\n  let accordionSummaryText = \"\";\r\n\r\n  if (trainingSession) {\r\n    accordionSummaryText = trainingSessionDateInLocal(trainingSession.date);\r\n  }\r\n\r\n  const deleteButtonOnClickHandle = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.stopPropagation();\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteTrainingSession = () => {\r\n    mutation.mutate();\r\n  };\r\n\r\n  return (\r\n    <Grid component=\"li\" item sx={{ maxWidth: \"100%\" }}>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={accordionSummaryText}\r\n        summaryIcons={<DeleteIconButton onClick={deleteButtonOnClickHandle} />}\r\n      >\r\n        {trainingSession?.exercises.map((exercise, index) => (\r\n          <Exercise\r\n            key={exercise._id}\r\n            exercise={exercise}\r\n            training_id={trainingSession._id}\r\n            exerciseIndex={index}\r\n            exercises={trainingSession.exercises}\r\n            setExerciseDialogState={setExerciseDialogState}\r\n          />\r\n        ))}\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            mt: \"1.5rem\",\r\n            mb: \"0.5rem\",\r\n            \"&:first-of-type\": { m: \"1rem 0\" },\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() =>\r\n              setExerciseDialogState({\r\n                open: true,\r\n              })\r\n            }\r\n          >\r\n            Add Exercise\r\n          </Button>\r\n        </Box>\r\n      </TrainingAccordion>\r\n\r\n      {exerciseDialogState.open && (\r\n        <AddOrEditTrainingExerciseDialog\r\n          exerciseDialogState={exerciseDialogState}\r\n          setExerciseDialogState={setExerciseDialogState}\r\n          trainingSession={trainingSession}\r\n        />\r\n      )}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-training-session-dialog-title\"\r\n        aria-describedby=\"delete-training-session-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-training-session-dialog-title\">\r\n          Delete training confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-training-session-dialog-description\">\r\n            Do you really want to delete training from{\" \"}\r\n            <strong>\r\n              {trainingSession\r\n                ? trainingSessionDateInLocal(trainingSession.date)\r\n                : \"\"}\r\n            </strong>\r\n            ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteTrainingSession}\r\n            autoFocus\r\n            disabled={mutation.isLoading}\r\n          >\r\n            {mutation.isLoading && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(Training);\r\n","import { useSearchParams } from \"react-router-dom\";\r\nimport Training from \"./Training\";\r\nimport { Alert, Box, Grid, Typography } from \"@mui/material\";\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nimport useQueryTrainings from \"../../react-query-hooks/useQueryTrainings\";\r\nimport useQueryUser from \"../../react-query-hooks/useQueryUser\";\r\n\r\nfunction TrainingList() {\r\n  const { data: user } = useQueryUser();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const { status, data, isFetching } = useQueryTrainings(\r\n    searchParams.toString(),\r\n    {\r\n      select: (data) =>\r\n        data.body.trainingSessions.map((training) => training._id),\r\n      enabled: !!user,\r\n    }\r\n  );\r\n\r\n  let renderedElements = null;\r\n\r\n  if (status === \"idle\") {\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Alert variant=\"filled\" severity=\"info\">\r\n          No data.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  } else if (status === \"loading\") {\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          // position: \"absolute\",\r\n          // top: 0,\r\n          // left: 0,\r\n          // right: 0,\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          flexDirection: \"column\",\r\n          minHeight: \"20rem\",\r\n          height: \"100%\",\r\n        }}\r\n      >\r\n        <CircularProgress size={120} sx={{ marginBottom: \"1rem\" }} />\r\n        <Typography>Loading...</Typography>\r\n      </Box>\r\n    );\r\n  } else if (status === \"error\") {\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Operation failed, no data.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  } else if (status === \"success\") {\r\n    let trainingList = null;\r\n\r\n    if (data?.length) {\r\n      trainingList = (\r\n        <Box\r\n          sx={{\r\n            opacity: isFetching ? 0.5 : 1,\r\n            // opacity: isPreviousData ? 0.5 : 1,\r\n          }}\r\n        >\r\n          <Grid\r\n            component=\"ul\"\r\n            container\r\n            direction=\"column\"\r\n            rowSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n            sx={{\r\n              listStyle: \"none\",\r\n              \"& >.MuiGrid-item\": { maxWidth: \"100%\" },\r\n            }}\r\n          >\r\n            {data?.map((_id) => (\r\n              <Training key={_id} _id={_id} />\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      );\r\n    } else {\r\n      trainingList = (\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            alignItems: \"center\",\r\n            width: \"100%\",\r\n          }}\r\n        >\r\n          <Alert variant=\"filled\" severity=\"info\">\r\n            No data.\r\n          </Alert>\r\n        </Box>\r\n      );\r\n    }\r\n\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {trainingList}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return <Box mt=\"1.5rem\">{renderedElements}</Box>;\r\n}\r\n\r\nexport default TrainingList;\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fab,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport { ActionStatus, OrNull } from \"../../interfaces/generalInterf\";\r\n\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport { commonDateValidation, DatePickerField } from \"./FilterByDate\";\r\nimport { MuiTextFieldPropsError } from \"../auth/AuthSide\";\r\n\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\n\r\nimport { Query, useMutation, useQueryClient } from \"react-query\";\r\nimport api from \"../../api\";\r\nimport useQueryUser from \"../../react-query-hooks/useQueryUser\";\r\nimport { TrainingsQueryKey } from \"../../react-query-hooks/useQueryTrainings\";\r\n\r\nconst maxCommentSigns = 255;\r\n\r\ninterface FormDataType {\r\n  date: OrNull<Date>;\r\n  comment: \"\";\r\n}\r\n\r\nconst AddTrainingSession = () => {\r\n  const [, setAddRequestStatus] = useState<ActionStatus>(\"IDLE\");\r\n\r\n  const location = useLocation();\r\n  const [addTrainingDialogOpen, setAddTrainingDialogOpen] = useState(false);\r\n  const requestInProgress = useRef(false);\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm<FormDataType>({\r\n    defaultValues: {\r\n      date: new Date(),\r\n      comment: \"\",\r\n    },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const queryClient = useQueryClient();\r\n  const user = useQueryUser();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const mutation = useMutation(\r\n    ({ date, comment }: { date: Date; comment: string }) =>\r\n      api.trainings\r\n        .addTrainingSession(\r\n          {\r\n            date: date.toISOString(),\r\n            comment,\r\n            exercises: [],\r\n          },\r\n          location.search\r\n        )\r\n        .then(\r\n          (res) => res,\r\n          (error) => {\r\n            throw error;\r\n          }\r\n        ),\r\n    {\r\n      onSuccess: (data, variables, context) => {\r\n        if (user) {\r\n          queryClient.setQueryData(\r\n            [\"trainings\", { search: searchParams.toString() }],\r\n            data\r\n          );\r\n\r\n          queryClient.resetQueries({\r\n            predicate: (query) =>\r\n              query.queryKey[0] === \"trainings\" &&\r\n              (\r\n                query as any as Query<\r\n                  unknown,\r\n                  unknown,\r\n                  unknown,\r\n                  TrainingsQueryKey\r\n                >\r\n              ).queryKey[1].search !== searchParams.toString(),\r\n          });\r\n        }\r\n        setSnackbar(\"Training session added\", \"success\");\r\n      },\r\n      onError: (error, variables, context) => {\r\n        console.error(\"Failed to add new training session:\", error);\r\n        setSnackbar(\r\n          \"Failed to add new training session\",\r\n          \"error\",\r\n          undefined,\r\n          true\r\n        );\r\n      },\r\n      onSettled: (data, error, variables, context) => {\r\n        setAddRequestStatus(\"IDLE\");\r\n        handleCloseAddTrainingDialog();\r\n      },\r\n    }\r\n  );\r\n\r\n  const handleOpenAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(false);\r\n  };\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    // protection against submitting form twice\r\n    if (!requestInProgress.current) {\r\n      requestInProgress.current = true;\r\n\r\n      try {\r\n        await mutation.mutateAsync({\r\n          date: values.date!,\r\n          comment: values.comment,\r\n        });\r\n      } finally {\r\n        requestInProgress.current = false;\r\n        handleCloseAddTrainingDialog();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        aria-label=\"add training session\"\r\n        sx={{ marginLeft: \"auto\" }}\r\n        onClick={handleOpenAddTrainingDialog}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        open={addTrainingDialogOpen}\r\n        onClose={handleCloseAddTrainingDialog}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"add-training-session-dialog-title\"\r\n        sx={{ margin: \"0rem\" }}\r\n      >\r\n        <DialogTitle id=\"add-training-session-dialog-title\">\r\n          Add Training Session\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleCloseAddTrainingDialog}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContent\r\n            dividers={true}\r\n            sx={{ opacity: mutation.isLoading ? 0.5 : 1 }}\r\n          >\r\n            <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n              <Controller\r\n                render={({ field, fieldState, formState }) => (\r\n                  <DatePickerField field={field} fieldState={fieldState} />\r\n                )}\r\n                name=\"date\"\r\n                control={control}\r\n                rules={{\r\n                  validate: {\r\n                    ...commonDateValidation,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Controller\r\n                render={({ field, fieldState, formState }) => (\r\n                  <TextField\r\n                    id=\"comment\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Comment\"\r\n                    multiline\r\n                    variant=\"filled\"\r\n                    autoFocus\r\n                    inputProps={{ maxLength: maxCommentSigns }}\r\n                    {...MuiTextFieldPropsError(field, fieldState)}\r\n                  />\r\n                )}\r\n                name=\"comment\"\r\n                control={control}\r\n                rules={{\r\n                  maxLength: {\r\n                    value: maxCommentSigns,\r\n                    message: `Max length is ${maxCommentSigns} characters`,\r\n                  },\r\n                }}\r\n              />\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button type=\"button\" onClick={handleCloseAddTrainingDialog}>\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              disabled={isSubmitting || !isValid || mutation.isLoading}\r\n            >\r\n              {mutation.isLoading && (\r\n                <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n              )}\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTrainingSession;\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\n/**\r\n * hook allows to use a useState, and updates its value when its different then a value in a url\r\n *\r\n * @param valueInUrl: value written from url\r\n * @returns the same as useState\r\n */\r\nconst useValueDependsOnUrl = <I,>(valueInUrl: I) => {\r\n  const [value, setValue] = useState(() => valueInUrl);\r\n\r\n  // updating values when url manually changed\r\n  useLayoutEffect(() => {\r\n    if (value !== valueInUrl) {\r\n      setValue(valueInUrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [valueInUrl]);\r\n\r\n  return [value, setValue] as const;\r\n};\r\n\r\nexport default useValueDependsOnUrl;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport {\r\n  DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n  isItemsPerPageType,\r\n  TrainingsUrlQuery_Key_ItemsPerPage_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  queryValueChecking,\r\n  SIX_ITEMS_PER_PAGE,\r\n  NINE_ITEMS_PER_PAGE,\r\n} from \"./trainingsConsts\";\r\n\r\nconst itemsPerPageChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n    isItemsPerPageType\r\n  );\r\n};\r\n\r\nexport const updateUrl = (\r\n  searchParams: URLSearchParams,\r\n  setSearchParamsFn: ReturnType<typeof useSearchParams>[1],\r\n  query: string,\r\n  value: string\r\n) => {\r\n  let searchUrl = updateUrlQuery(searchParams.toString(), query, value);\r\n  searchUrl = updateUrlQuery(searchUrl, TRAININGS_URL_QUERY_KEYS.page);\r\n  setSearchParamsFn(searchUrl);\r\n};\r\n\r\nconst ItemsOnPage = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** items per page form url ****\r\n  const itemsPerPageUrl = itemsPerPageChecking(\r\n    tryConvertToFiniteNumber(searchParams.get(TRAININGS_URL_QUERY_KEYS.items))\r\n  );\r\n\r\n  const [nrOfItemsOnPage, setNrOfItemsOnPage] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_ItemsPerPage_Type>(\r\n      itemsPerPageUrl\r\n    );\r\n\r\n  const onItemsPerPageChanged = (e: SelectChangeEvent<number>) => {\r\n    const nrOfItems = itemsPerPageChecking(Number(e.target.value));\r\n\r\n    setNrOfItemsOnPage(nrOfItems);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.items,\r\n      String(nrOfItems)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: \"5rem\" }}>\r\n      <InputLabel id=\"nr-of-items-on-page-label\">Show Items</InputLabel>\r\n      <Select\r\n        labelId=\"nr-of-items-on-page-label\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={nrOfItemsOnPage}\r\n        onChange={onItemsPerPageChanged}\r\n        label=\"Show Items\"\r\n      >\r\n        <MenuItem value={DEFAULT_TRAININGS_ITEMS_PER_PAGE}>\r\n          {DEFAULT_TRAININGS_ITEMS_PER_PAGE}\r\n        </MenuItem>\r\n        <MenuItem value={SIX_ITEMS_PER_PAGE}>{SIX_ITEMS_PER_PAGE}</MenuItem>\r\n        <MenuItem value={NINE_ITEMS_PER_PAGE}>{NINE_ITEMS_PER_PAGE}</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ItemsOnPage;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport { updateUrl } from \"./ItemsOnPage\";\r\nimport {\r\n  DEFAULT_SORT_DATE_ORDER,\r\n  TrainingsUrlQuery_Key_SortDateOrder_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  isSortDateOrderType,\r\n  queryValueChecking,\r\n} from \"./trainingsConsts\";\r\n\r\nconst sortDateOrderChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_SORT_DATE_ORDER,\r\n    isSortDateOrderType\r\n  );\r\n};\r\n\r\nconst SortingOrder = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** sort date order form url ****\r\n  const sortDateOrderUrl = sortDateOrderChecking(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.sortDateOrder)\r\n  );\r\n\r\n  const [sortDateOrder, setSortDateOrder] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_SortDateOrder_Type>(\r\n      sortDateOrderUrl\r\n    );\r\n\r\n  const onSortOrderChanged = (e: SelectChangeEvent<string>) => {\r\n    const sortOrderTemp = sortDateOrderChecking(e.target.value);\r\n\r\n    setSortDateOrder(sortOrderTemp);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.sortDateOrder,\r\n      sortOrderTemp\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 120 }}>\r\n      <InputLabel id=\"trainings-sort-order\">Sort</InputLabel>\r\n      <Select\r\n        labelId=\"trainings-sort-order\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={sortDateOrder}\r\n        onChange={onSortOrderChanged}\r\n        label=\"Sort\"\r\n      >\r\n        <MenuItem value=\"date-descending\">Date descending</MenuItem>\r\n        <MenuItem value=\"date-ascending\">Date ascending</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortingOrder;\r\n","import { Box, Stack, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nimport Paginate from \"./Paginate\";\r\nimport FilterByDate from \"./FilterByDate\";\r\nimport TrainingList from \"./TrainingList\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nimport AddTrainingSession from \"./AddTrainingSession\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport useUpdateTitle from \"../../components/title-provider/useUpdateTitle\";\r\nimport ItemsOnPage from \"./ItemsOnPage\";\r\nimport SortingOrder from \"./SortingOrder\";\r\n\r\nconst Trainings = () => {\r\n  const theme = useTheme();\r\n  const matchUpLg = useMediaQuery(theme.breakpoints.up(\"lg\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  useUpdateTitle(\"Trainings\");\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"section\">\r\n        <AppAccordion sx={{ mb: 3 }}>\r\n          <AppAccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"filter-content\"\r\n            id=\"filter-header\"\r\n          >\r\n            <Typography>Filters</Typography>\r\n          </AppAccordionSummary>\r\n          <AppAccordionDetails\r\n            sx={{ mb: { xs: \"1.3rem\", lg: \"0.5rem\" }, pt: \"1.5rem\" }}\r\n          >\r\n            <Stack\r\n              direction={matchUpLg ? \"row\" : \"column\"}\r\n              alignItems={matchUpLg ? \"start\" : \"center\"}\r\n              justifyContent={matchUpLg ? \"space-between\" : \"center\"}\r\n              spacing={5}\r\n              sx={{ flexWrap: \"wrap\" }}\r\n            >\r\n              <FilterByDate />\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{}}>\r\n                <ItemsOnPage />\r\n                <SortingOrder />\r\n              </Stack>\r\n            </Stack>\r\n          </AppAccordionDetails>\r\n        </AppAccordion>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            mt: \"1rem\",\r\n          }}\r\n        >\r\n          <Paginate />\r\n          <AddTrainingSession />\r\n        </Stack>\r\n      </Box>\r\n      <Box component=\"section\" sx={{ maxWidth: \"100%\", mt: \"1rem\" }}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          Trainings:\r\n        </Typography>\r\n        <TrainingList />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n"],"names":["title","setTitleContext","useSetTitleContext","useEffect","originalQuery","queryKey","newKeyValue","Error","searchUrl","queryRegExpGlobalFlag","RegExp","match","queryRegExpWithGroup","replace","queryRegExpToDelete","p1","p2","undefined","length","searchParams","overrideOptions","setSnackbar","useSetSnackbarContext","useQuery","search","signal","api","then","res","error","refetchOnWindowFocus","useErrorBoundary","onError","console","useSearchParams","numberOfPages","useQueryTrainings","toString","select","data","body","keepPreviousData","enabled","notifyOnChangeProps","currentPage","tryConvertToFiniteNumber","get","TRAININGS_URL_QUERY_KEYS","Pagination","size","page","count","color","siblingCount","renderItem","params","query","updateUrlQuery","String","PaginationItem","component","Link","to","dateToString","date","year","getFullYear","month","getMonth","day","getDate","yearString","monthString","dayString","isDateValid","Date","Number","isNaN","minAllowedDate","UTC","ClearFilterByDate","removeFilterByDateFromUrl","reset","IconButton","type","onClick","HighlightOff","sx","fontSize","useInitializeDatesFromUrl","dateFilter","setValue","updateDateInFormValues","urlDate","propName","dateString","dateFragments","stringToDate","shouldValidate","dates","commonDateValidation","validDate","notFutureDate","notBeforeMinAllowedDate","toLocaleString","timeZone","split","DatePickerField","field","fieldState","other","DatePicker","mask","disableFuture","allowSameDateSelection","openTo","views","minDate","value","onChange","inputRef","ref","renderInput","TextField","name","variant","invalid","helperText","message","onBlur","theme","useTheme","matchDownSm","useMediaQuery","breakpoints","down","noSsr","setSearchParams","useForm","defaultValues","mode","criteriaMode","shouldUnregister","handleSubmit","control","startDate","watch","onSubmit","values","endDate","Box","pt","flexGrow","noValidate","Stack","spacing","direction","alignItems","justifyContent","flexWrap","render","formState","label","rules","validate","afterStartDate","Button","element","index","TableRow","TableCell","load","quantity","AppAccordion","styled","props","Accordion","elevation","square","border","palette","divider","display","AppAccordionSummary","AccordionSummary","expandIcon","ArrowForwardIosSharp","backgroundColor","flexDirection","AppAccordionDetails","AccordionDetails","padding","borderTop","summaryId","summaryText","summaryIcons","children","useState","expanded","setExpanded","TransitionProps","unmountOnExit","maxWidth","id","ExpandMore","Typography","textOverflow","overflow","exercise","training_id","exerciseIndex","exercises","setExerciseDialogState","series","map","join","openDeleteDialog","setOpenDeleteDialog","location","useLocation","queryClient","useQueryClient","user","useQueryUser","mutation","useMutation","exercises_shallowCopyForMutation","splice","onSuccess","variables","context","setQueryData","onSettled","handleCloseDialog","accordionSummaryId","_id","position","width","e","stopPropagation","SpeedDial","ariaLabel","FabProps","top","right","transform","height","minHeight","icon","MoreVert","SpeedDialAction","Delete","tooltipTitle","Add","open","Edit","initialValues","TableContainer","pl","pr","textAlign","TableHead","TableBody","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","mutate","autoFocus","disabled","isLoading","CircularProgress","mr","TriggerManualFieldValidation","trigger","triggerNewSeriesValidation","indexForValidationTrigger","acceptOnlyDigits","filedName","allowDash","target","exerciseDialogState","trainingSession","requestInProgress","useRef","setIndexForValidationTrigger","setTriggerNewSeriesValidation","closeDialog","comment","reduce","previousValue","currentValue","concat","key","nanoid","isSubmitting","isValid","useFieldArray","fields","append","remove","insert","current","mutateAsync","scroll","margin","grey","Close","autoComplete","dividers","opacity","fullWidth","inputProps","maxLength","MuiTextFieldPropsError","required","multiline","hiddenLabel","ml","mt","inAllowRange","startIcon","mb","trainingSessionDateInLocal","dateISOString","hour","getHours","minute","getMinutes","addLeadingZero","Training","trainingSessions","find","training","React","locationSearchForMutation","TRAININGS_DEFAULT_URL_QUERY","exec","resetQueries","predicate","accordionSummaryText","Grid","item","m","status","isFetching","renderedElements","Alert","severity","marginBottom","trainingList","container","rowSpacing","xs","sm","md","listStyle","setAddRequestStatus","addTrainingDialogOpen","setAddTrainingDialogOpen","toISOString","handleCloseAddTrainingDialog","Fab","marginLeft","valueInUrl","useLayoutEffect","itemsPerPageChecking","queryValueChecking","DEFAULT_TRAININGS_ITEMS_PER_PAGE","isItemsPerPageType","updateUrl","setSearchParamsFn","itemsPerPageUrl","useValueDependsOnUrl","nrOfItemsOnPage","setNrOfItemsOnPage","FormControl","minWidth","InputLabel","Select","labelId","nrOfItems","MenuItem","SIX_ITEMS_PER_PAGE","NINE_ITEMS_PER_PAGE","sortDateOrderChecking","DEFAULT_SORT_DATE_ORDER","isSortDateOrderType","sortDateOrderUrl","sortDateOrder","setSortDateOrder","sortOrderTemp","matchUpLg","up","useUpdateTitle","lg"],"sourceRoot":""}