{"version":3,"file":"static/js/678.67ce0007.chunk.js","mappings":"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","sources":["components/title-provider/useUpdateTitle.tsx","routes/trainings/Paginate.tsx","auxiliary/date/dateToString.ts","auxiliary/date/isDateValid.ts","routes/trainings/FilterByDate.tsx","auxiliary/date/stringToDate.ts","routes/trainings/SeriesRow.tsx","components/mui/app-accordion/AppAccordion.tsx","routes/trainings/TrainingAccordion.tsx","routes/trainings/Exercise.tsx","components/mui/icon-buttons/DeleteIconButton.tsx","routes/trainings/AddOrEditTrainingExerciseDialog.tsx","routes/trainings/Training.tsx","routes/trainings/TrainingList.tsx","routes/trainings/AddTrainingSession.tsx","components/hooks/useValueDependsOnUrl.tsx","routes/trainings/ItemsOnPage.tsx","routes/trainings/SortingOrder.tsx","routes/trainings/Trainings.tsx"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useSetTitleContext } from \"./TitleProvider\";\r\n\r\nconst useUpdateTitle = (title: string) => {\r\n  const setTitleContext = useSetTitleContext();\r\n\r\n  useEffect(() => {\r\n    setTitleContext(title);\r\n  });\r\n\r\n  return null;\r\n};\r\n\r\nexport default useUpdateTitle;\r\n","import { Pagination, PaginationItem } from \"@mui/material\";\r\n\r\nimport { Link, useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\n\r\nimport { selectNumberOfPages } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useAppSelector } from \"../../store/hooks/hooks\";\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\n\r\nconst Paginate = () => {\r\n  const numberOfPages = useAppSelector(selectNumberOfPages);\r\n  const [searchParams] = useSearchParams();\r\n\r\n  let currentPage = tryConvertToFiniteNumber(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.page)\r\n  );\r\n\r\n  if (currentPage === null || currentPage <= 0) currentPage = 1;\r\n\r\n  return (\r\n    <Pagination\r\n      size=\"small\"\r\n      page={currentPage}\r\n      count={numberOfPages ? numberOfPages : 1}\r\n      color=\"primary\"\r\n      siblingCount={1}\r\n      renderItem={(params) => {\r\n        const query = updateUrlQuery(\r\n          searchParams.toString(),\r\n          TRAININGS_URL_QUERY_KEYS.page,\r\n          String(params.page)\r\n        );\r\n\r\n        return <PaginationItem {...params} component={Link} to={query} />;\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Paginate;\r\n","export const dateToString = (date: Date) => {\r\n  let year = date.getFullYear();\r\n  let month = date.getMonth() + 1;\r\n  let day = date.getDate();\r\n\r\n  const yearString = String(year);\r\n\r\n  let monthString = String(month);\r\n\r\n  if (monthString.length < 2) {\r\n    monthString = \"0\" + monthString;\r\n  }\r\n\r\n  let dayString = String(day);\r\n\r\n  if (dayString.length < 2) {\r\n    dayString = \"0\" + dayString;\r\n  }\r\n\r\n  return `${yearString}-${monthString}-${dayString}`;\r\n};\r\n","export const isDateValid = (date: Date) =>\r\n  date instanceof Date && !Number.isNaN(Number(date));\r\n","import { DatePicker, DatePickerProps } from \"@mui/lab\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n  useMediaQuery,\r\n  useTheme,\r\n} from \"@mui/material\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport { dateToString } from \"../../auxiliary/date/dateToString\";\r\nimport { TRAININGS_URL_QUERY_KEYS } from \"./trainingsConsts\";\r\nimport { stringToDate } from \"../../auxiliary/date/stringToDate\";\r\nimport { OrNull } from \"../../interfaces/generalInterf\";\r\nimport { isDateValid } from \"../../auxiliary/date/isDateValid\";\r\n\r\nimport HighlightOffIcon from \"@mui/icons-material/HighlightOff\";\r\nimport { useEffect } from \"react\";\r\n\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  ControllerRenderProps,\r\n  ControllerFieldState,\r\n  SubmitHandler,\r\n  UseFormSetValue,\r\n  UseFormReset,\r\n} from \"react-hook-form\";\r\n\r\ninterface FormDataType {\r\n  \"start-date\": OrNull<Date>;\r\n  \"end-date\": OrNull<Date>;\r\n}\r\n\r\nconst minAllowedDate = new Date(Date.UTC(2000, 1, 1, 0, 0, 0));\r\n\r\nconst ClearFilterByDate = ({\r\n  removeFilterByDateFromUrl,\r\n  reset,\r\n}: {\r\n  removeFilterByDateFromUrl: () => void;\r\n  reset: UseFormReset<FormDataType>;\r\n}) => {\r\n  return (\r\n    <IconButton\r\n      type=\"button\"\r\n      aria-label=\"clear filter\"\r\n      onClick={() => {\r\n        reset();\r\n        removeFilterByDateFromUrl();\r\n      }}\r\n    >\r\n      <HighlightOffIcon sx={{ fontSize: \"3rem\" }} />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nconst useInitializeDatesFromUrl = (\r\n  dateFilter: string | null,\r\n  setValue: UseFormSetValue<FormDataType>\r\n) => {\r\n  useEffect(() => {\r\n    const updateDateInFormikValues = (\r\n      urlDate: string,\r\n      propName: keyof FormDataType\r\n    ) => {\r\n      const date = stringToDate(urlDate);\r\n      if (isDateValid(date)) {\r\n        setValue(propName, date, { shouldValidate: true });\r\n      }\r\n    };\r\n\r\n    if (dateFilter) {\r\n      const dates = dateFilter.match(\r\n        /from-(\\d{4}-\\d{2}-\\d{2})-to-(\\d{4}-\\d{2}-\\d{2})/\r\n      );\r\n\r\n      if (dates?.[1]) {\r\n        updateDateInFormikValues(dates[1], \"start-date\");\r\n      }\r\n      if (dates?.[2]) {\r\n        updateDateInFormikValues(dates[2], \"end-date\");\r\n      }\r\n    } else {\r\n      setValue(\"start-date\", null);\r\n      setValue(\"end-date\", null);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [dateFilter]);\r\n\r\n  return null;\r\n};\r\n\r\nexport const commonDateValidation = {\r\n  validDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && isDateValid(date)) || \"Enter valid date\",\r\n  notFutureDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && date < new Date()) || \"Future date not allowed\",\r\n  notBeforeMinAllowedDate: (date: FormDataType[\"start-date\"]) =>\r\n    (!!date && date > minAllowedDate) ||\r\n    `Date before ${\r\n      minAllowedDate.toLocaleString(\"pl-PL\", { timeZone: \"UTC\" }).split(\",\")[0]\r\n    }`,\r\n};\r\ninterface DatePickerFieldProps<T> extends DatePickerProps {\r\n  field: ControllerRenderProps<T, any>;\r\n  fieldState: ControllerFieldState;\r\n  getShouldDisableDateError?: (date: Date) => string;\r\n}\r\n\r\nexport function DatePickerField<T>({\r\n  field,\r\n  fieldState,\r\n  ...other\r\n}: Omit<\r\n  DatePickerFieldProps<T>,\r\n  \"value\" | \"onChange\" | \"renderInput\" | \"inputRef\"\r\n>) {\r\n  return (\r\n    <DatePicker\r\n      mask={\"__.__.____\"}\r\n      disableFuture\r\n      allowSameDateSelection\r\n      openTo=\"month\"\r\n      views={[\"year\", \"month\", \"day\"]}\r\n      minDate={minAllowedDate}\r\n      value={field.value}\r\n      onChange={field.onChange}\r\n      inputRef={field.ref}\r\n      renderInput={(params) => (\r\n        <TextField\r\n          {...params}\r\n          name={field.name}\r\n          variant=\"standard\"\r\n          error={fieldState.invalid}\r\n          helperText={fieldState.invalid ? fieldState.error?.message : \" \"}\r\n          onBlur={field.onBlur}\r\n        />\r\n      )}\r\n      {...other}\r\n    />\r\n  );\r\n}\r\n\r\nconst FilterByDate = () => {\r\n  const theme = useTheme();\r\n  const matchDownSm = useMediaQuery(theme.breakpoints.down(\"sm\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  const {\r\n    handleSubmit,\r\n    reset,\r\n    setValue,\r\n    control,\r\n\r\n    watch,\r\n  } = useForm<FormDataType>({\r\n    defaultValues: {\r\n      \"start-date\": null,\r\n      \"end-date\": null,\r\n    },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const startDate = watch(\"start-date\");\r\n\r\n  const dateFilter = searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate);\r\n\r\n  useInitializeDatesFromUrl(dateFilter, setValue);\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    try {\r\n      const startDate = values[\"start-date\"] as any as Date;\r\n      const endDate = values[\"end-date\"] as any as Date;\r\n\r\n      const searchUrl = updateUrlQuery(\r\n        searchParams.toString(),\r\n        TRAININGS_URL_QUERY_KEYS.filterByDate,\r\n        \"from-\" + dateToString(startDate) + \"-to-\" + dateToString(endDate)\r\n      );\r\n      setSearchParams(searchUrl);\r\n    } finally {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ pt: \"0.0rem\", flexGrow: 0 }}>\r\n      <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n        <Stack\r\n          spacing={matchDownSm ? 1 : 3}\r\n          direction={matchDownSm ? \"column\" : \"row\"}\r\n          alignItems=\"center\"\r\n          justifyContent=\"center\"\r\n          sx={{ flexWrap: \"wrap\" }}\r\n        >\r\n          <Controller\r\n            render={({ field, fieldState, formState }) => (\r\n              <DatePickerField\r\n                field={field}\r\n                fieldState={fieldState}\r\n                label=\"Start date\"\r\n              />\r\n            )}\r\n            name=\"start-date\"\r\n            control={control}\r\n            rules={{\r\n              validate: {\r\n                ...commonDateValidation,\r\n              },\r\n            }}\r\n          />\r\n          <Controller\r\n            render={({ field, fieldState, formState }) => (\r\n              <DatePickerField\r\n                field={field}\r\n                fieldState={fieldState}\r\n                label=\"End date\"\r\n              />\r\n            )}\r\n            name=\"end-date\"\r\n            control={control}\r\n            rules={{\r\n              validate: {\r\n                ...commonDateValidation,\r\n                afterStartDate: (date) =>\r\n                  (date !== null && startDate !== null && date > startDate) ||\r\n                  \"End date after start date\",\r\n              },\r\n            }}\r\n          />\r\n          <Box>\r\n            <Button type=\"submit\" size=\"large\" variant=\"outlined\">\r\n              Filter\r\n            </Button>\r\n\r\n            {searchParams.get(TRAININGS_URL_QUERY_KEYS.filterByDate) ? (\r\n              <ClearFilterByDate\r\n                removeFilterByDateFromUrl={() => {\r\n                  setSearchParams(\r\n                    updateUrlQuery(\r\n                      searchParams.toString(),\r\n                      TRAININGS_URL_QUERY_KEYS.filterByDate\r\n                    )\r\n                  );\r\n                }}\r\n                reset={reset}\r\n              />\r\n            ) : null}\r\n          </Box>\r\n        </Stack>\r\n      </form>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default FilterByDate;\r\n","export const stringToDate = (dateString: string) => {\r\n  const dateFragments = dateString.match(/(\\d{4})-(\\d{2})-(\\d{2})/);\r\n\r\n  return new Date(\r\n    Number(dateFragments?.[1]),\r\n    Number(dateFragments?.[2]) - 1,\r\n    Number(dateFragments?.[3])\r\n  );\r\n};\r\n","import { TableCell, TableRow } from \"@mui/material\";\r\nimport { SeriesDataFromApi } from \"../../interfaces/trainingsInterf\";\r\n\r\nconst SeriesRow = ({\r\n  element,\r\n  index,\r\n}: {\r\n  element: SeriesDataFromApi;\r\n  index: number;\r\n}) => {\r\n  return (\r\n    <TableRow>\r\n      <TableCell>{index + 1}</TableCell>\r\n      <TableCell>\r\n        {element.load && element.load !== \"-\" ? element.load : \"-\"}\r\n      </TableCell>\r\n      <TableCell>{element.quantity}</TableCell>\r\n    </TableRow>\r\n  );\r\n};\r\n\r\nexport default SeriesRow;\r\n","import * as React from \"react\";\r\nimport { styled } from \"@mui/material/styles\";\r\nimport ArrowForwardIosSharpIcon from \"@mui/icons-material/ArrowForwardIosSharp\";\r\nimport {\r\n  Accordion,\r\n  AccordionDetails,\r\n  AccordionProps,\r\n  AccordionSummary,\r\n  AccordionSummaryProps,\r\n} from \"@mui/material\";\r\n\r\nconst AppAccordion = styled((props: AccordionProps) => (\r\n  <Accordion elevation={2} square {...props} />\r\n))(({ theme }) => ({\r\n  border: `1px solid ${theme.palette.divider}`,\r\n  \"&:not(:last-child)\": {},\r\n  \"&:before\": {\r\n    display: \"none\",\r\n  },\r\n}));\r\n\r\nconst AppAccordionSummary = styled((props: AccordionSummaryProps) => (\r\n  <AccordionSummary\r\n    expandIcon={<ArrowForwardIosSharpIcon sx={{ fontSize: \"0.9rem\" }} />}\r\n    {...props}\r\n  />\r\n))(({ theme }) => ({\r\n  backgroundColor:\r\n    theme.palette.mode === \"dark\"\r\n      ? \"rgba(255, 255, 255, .05)\"\r\n      : \"rgba(0, 0, 0, .03)\",\r\n  flexDirection: \"row-reverse\",\r\n}));\r\n\r\nconst AppAccordionDetails = styled(AccordionDetails)(({ theme }) => ({\r\n  padding: theme.spacing(2),\r\n  borderTop: \"1px solid rgba(0, 0, 0, .125)\",\r\n}));\r\n\r\nexport { AppAccordion, AppAccordionSummary, AppAccordionDetails };\r\n","import { Stack, Typography } from \"@mui/material\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\nimport { useState } from \"react\";\r\n\r\nconst TrainingAccordion = ({\r\n  summaryId,\r\n  summaryText,\r\n  summaryIcons,\r\n  children,\r\n}: {\r\n  summaryId: string;\r\n  summaryText: string;\r\n  summaryIcons: React.ReactNode;\r\n  children: React.ReactNode;\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n\r\n  return (\r\n    <AppAccordion\r\n      TransitionProps={{ unmountOnExit: true }}\r\n      expanded={expanded}\r\n      onChange={() => setExpanded((expanded) => !expanded)}\r\n      sx={{\r\n        maxWidth: \"100%\",\r\n        \"& .MuiAccordionSummary-content\": { maxWidth: \"calc(100% - 24px)\" },\r\n      }}\r\n    >\r\n      <AppAccordionSummary\r\n        aria-controls={summaryId}\r\n        id={summaryId}\r\n        expandIcon={<ExpandMoreIcon />}\r\n        sx={{}}\r\n      >\r\n        <Stack\r\n          direction=\"row\"\r\n          justifyContent=\"space-between\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            maxWidth: \"100%\",\r\n          }}\r\n          flexGrow={1}\r\n        >\r\n          <Typography\r\n            sx={{\r\n              textOverflow: \"ellipsis\",\r\n              overflow: \"hidden\",\r\n            }}\r\n          >\r\n            {summaryText}\r\n          </Typography>\r\n\r\n          {summaryIcons}\r\n        </Stack>\r\n      </AppAccordionSummary>\r\n      <AppAccordionDetails>{children}</AppAccordionDetails>\r\n    </AppAccordion>\r\n  );\r\n};\r\n\r\nexport default TrainingAccordion;\r\n","import { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport SeriesRow from \"./SeriesRow\";\r\nimport {} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport {\r\n  Box,\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  SpeedDial,\r\n  SpeedDialAction,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useState } from \"react\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport { updateExercises } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { IdFromApi } from \"../../interfaces/commonInterf\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport MoreVertIcon from \"@mui/icons-material/MoreVert\";\r\n\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport EditIcon from \"@mui/icons-material/Edit\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nconst Exercise = ({\r\n  exercise,\r\n  training_id,\r\n  exerciseIndex,\r\n  exercises,\r\n  setExerciseDialogState,\r\n}: {\r\n  exercise: ExerciseDataFromApi;\r\n  training_id: IdFromApi;\r\n  exerciseIndex: number;\r\n  exercises: ExerciseDataFromApi[];\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n}) => {\r\n  const series = exercise.series.map((element) => element.quantity).join(\", \");\r\n  const [openDeleteDialog, setOpenDeleteDialog] = useState(false);\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const accordionSummaryId = `exercise_${exercise._id}`;\r\n\r\n  const deleteButtonOnClickHandle = (e: React.MouseEvent<HTMLDivElement>) => {\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteExercise = async () => {\r\n    try {\r\n      const exercises_shallowCopyForMutation = [...exercises];\r\n      exercises_shallowCopyForMutation.splice(exerciseIndex, 1);\r\n\r\n      await dispatch(\r\n        updateExercises({\r\n          _id: training_id,\r\n          exercises: exercises_shallowCopyForMutation,\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\"Exercise deleted\", \"info\");\r\n    } catch (error) {\r\n      console.error(\"Failed to add exercise:\", error);\r\n    } finally {\r\n      handleCloseDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={`${exercise.name}: [${\r\n          series.length ? series : \"no series\"\r\n        }]`}\r\n        summaryIcons={\r\n          <Box\r\n            sx={{ position: \"relative\", width: \"5rem\" }}\r\n            onClick={(e) => e.stopPropagation()}\r\n          >\r\n            <SpeedDial\r\n              ariaLabel=\"Edit options\"\r\n              direction=\"left\"\r\n              FabProps={{\r\n                size: \"small\",\r\n                color: \"primary\",\r\n              }}\r\n              sx={{\r\n                position: \"absolute\",\r\n                top: \"0px\",\r\n                right: \"0px\",\r\n                transform: \"translateY(-50%)\",\r\n                \"& .MuiButtonBase-root\": {\r\n                  width: \"2rem\",\r\n                  height: \"2rem\",\r\n                  minHeight: \"unset\",\r\n                },\r\n              }}\r\n              icon={<MoreVertIcon />}\r\n            >\r\n              <SpeedDialAction\r\n                icon={<DeleteIcon />}\r\n                tooltipTitle=\"Delete exercise\"\r\n                onClick={deleteButtonOnClickHandle}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<AddIcon />}\r\n                tooltipTitle=\"Add exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({ open: true, index: exerciseIndex });\r\n                }}\r\n              />\r\n              <SpeedDialAction\r\n                icon={<EditIcon />}\r\n                tooltipTitle=\"Edit exercise\"\r\n                onClick={() => {\r\n                  setExerciseDialogState({\r\n                    open: true,\r\n                    index: exerciseIndex,\r\n                    initialValues: exercise,\r\n                  });\r\n                }}\r\n              />\r\n            </SpeedDial>\r\n          </Box>\r\n        }\r\n      >\r\n        <TableContainer\r\n          component=\"table\"\r\n          sx={{\r\n            \"& .MuiTableCell-root\": {\r\n              pl: \"0.25rem\",\r\n              pr: \"0.25rem\",\r\n              textAlign: \"center\",\r\n            },\r\n          }}\r\n        >\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>\r\n                <Typography>Nr</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Load&nbsp;(kg)</Typography>\r\n              </TableCell>\r\n              <TableCell>\r\n                <Typography>Quantity</Typography>\r\n              </TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {exercise.series.map((series, index) => (\r\n              <SeriesRow key={series._id} element={series} index={index} />\r\n            ))}\r\n          </TableBody>\r\n        </TableContainer>\r\n      </TrainingAccordion>\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-exercise-dialog-title\"\r\n        aria-describedby=\"delete-exercise-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-exercise-dialog-title\">\r\n          Delete exercise confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-exercise-dialog-description\">\r\n            Do you really want to delete exercise{\" \"}\r\n            <strong>{exercise.name}</strong>?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteExercise}\r\n            autoFocus\r\n            disabled={actionStatus !== \"IDLE\"}\r\n          >\r\n            {actionStatus === \"PROCESSING\" && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Exercise;\r\n","import { IconButton } from \"@mui/material\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\n\r\nconst DeleteIconButton = ({\r\n  onClick,\r\n}: {\r\n  onClick: (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => void;\r\n}) => {\r\n  return (\r\n    <IconButton aria-label=\"delete\" onClick={onClick}>\r\n      <DeleteIcon />\r\n    </IconButton>\r\n  );\r\n};\r\n\r\nexport default DeleteIconButton;\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  IconButton,\r\n  Stack,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TableRow,\r\n  TextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nimport {\r\n  ExerciseData,\r\n  SeriesData,\r\n  TrainingSessionDataFromApi,\r\n} from \"../../interfaces/trainingsInterf\";\r\nimport { updateExercises } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport { MuiTextFieldPropsError } from \"../auth/AuthSide\";\r\nimport { nanoid } from \"@reduxjs/toolkit\";\r\nimport DeleteIcon from \"@mui/icons-material/Delete\";\r\nimport { ExerciseDialogStateType } from \"./Training\";\r\n\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nimport {\r\n  useForm,\r\n  Controller,\r\n  SubmitHandler,\r\n  useFieldArray,\r\n  UseFormSetValue,\r\n  FieldPath,\r\n  UseFormTrigger,\r\n} from \"react-hook-form\";\r\n\r\nconst maxCommentSigns = 255;\r\nconst maxExerciseNameSigns = 100;\r\n\r\ntype Series = {\r\n  [Property in keyof SeriesData]: SeriesData[Property] | \"\";\r\n} & { key: string };\r\n\r\ninterface FormDataType {\r\n  name: string;\r\n  comment: string;\r\n  series: Series[];\r\n}\r\n\r\nconst TriggerManualFieldValidation = ({\r\n  trigger,\r\n  triggerNewSeriesValidation,\r\n  indexForValidationTrigger,\r\n}: {\r\n  trigger: UseFormTrigger<FormDataType>;\r\n  triggerNewSeriesValidation: boolean;\r\n  indexForValidationTrigger: number | null;\r\n}) => {\r\n  // trigger manual validation for new series\r\n  useEffect(() => {\r\n    if (indexForValidationTrigger !== null) {\r\n      trigger(`series.${indexForValidationTrigger}.quantity`, {\r\n        // shouldFocus: true,\r\n      });\r\n    }\r\n  }, [triggerNewSeriesValidation, indexForValidationTrigger, trigger]);\r\n\r\n  // trigger manual validation for all field when form is first time loaded\r\n  useEffect(() => {\r\n    trigger();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return null;\r\n};\r\n\r\nconst acceptOnlyDigits = (\r\n  e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>,\r\n  setValue: UseFormSetValue<FormDataType>,\r\n  filedName: FieldPath<FormDataType>,\r\n  allowDash = false\r\n) => {\r\n  if (e.target.value.match(/^\\d*$/) || (allowDash && e.target.value === \"-\")) {\r\n    setValue(filedName, e.target.value, { shouldValidate: true });\r\n  }\r\n};\r\n\r\nconst AddOrEditTrainingExerciseDialog = ({\r\n  exerciseDialogState,\r\n  setExerciseDialogState,\r\n  trainingSession,\r\n}: {\r\n  exerciseDialogState: ExerciseDialogStateType;\r\n  setExerciseDialogState: React.Dispatch<\r\n    React.SetStateAction<ExerciseDialogStateType>\r\n  >;\r\n  trainingSession: TrainingSessionDataFromApi | undefined;\r\n}) => {\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const requestInProgress = useRef(false);\r\n\r\n  const [indexForValidationTrigger, setIndexForValidationTrigger] = useState<\r\n    number | null\r\n  >(null);\r\n  const [triggerNewSeriesValidation, setTriggerNewSeriesValidation] =\r\n    useState<boolean>(false);\r\n\r\n  const {\r\n    handleSubmit,\r\n    setValue,\r\n    control,\r\n    trigger,\r\n    formState: { isSubmitting, isValid },\r\n    // formState: { isValid, isSubmitting },\r\n  } = useForm<FormDataType>({\r\n    defaultValues: exerciseDialogState.initialValues\r\n      ? {\r\n          name: exerciseDialogState.initialValues.name,\r\n          comment: exerciseDialogState.initialValues.comment,\r\n          series: exerciseDialogState.initialValues.series.reduce<Series[]>(\r\n            (previousValue, currentValue) =>\r\n              previousValue.concat([\r\n                {\r\n                  key: nanoid(),\r\n                  // key: currentValue._id,\r\n                  load: currentValue.load,\r\n                  quantity: currentValue.quantity,\r\n                },\r\n              ]),\r\n            []\r\n          ),\r\n        }\r\n      : {\r\n          name: \"\",\r\n          comment: \"\",\r\n          series: [] as Series[],\r\n        },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const { fields, append, remove, insert } = useFieldArray({\r\n    control,\r\n    name: \"series\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    // protection against submitting form twice\r\n    if (!requestInProgress.current) {\r\n      requestInProgress.current = true;\r\n\r\n      try {\r\n        const exercises_shallowCopyForMutation: ExerciseData[] = [\r\n          ...(trainingSession?.exercises ?? []),\r\n        ];\r\n        exercises_shallowCopyForMutation.splice(\r\n          (exerciseDialogState.index ?? trainingSession?.exercises.length) || 0,\r\n          exerciseDialogState.initialValues ? 1 : 0,\r\n          {\r\n            ...(exerciseDialogState?.initialValues?._id\r\n              ? { _id: exerciseDialogState.initialValues._id }\r\n              : undefined),\r\n            name: values.name ?? \"\",\r\n            comment: values.comment ?? \"\",\r\n            series:\r\n              values.series.reduce<SeriesData[]>(\r\n                (previousValue, currentValue) =>\r\n                  previousValue.concat([\r\n                    {\r\n                      load:\r\n                        currentValue.load === \"-\" || !currentValue.load\r\n                          ? 0\r\n                          : currentValue.load,\r\n                      quantity: !currentValue.quantity\r\n                        ? 0\r\n                        : currentValue.quantity,\r\n                    },\r\n                  ]),\r\n                []\r\n              ) ?? [],\r\n          }\r\n        );\r\n\r\n        await addUpdateExercise(exercises_shallowCopyForMutation);\r\n      } finally {\r\n        requestInProgress.current = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  const closeDialog = () => {\r\n    setExerciseDialogState({ open: false });\r\n  };\r\n\r\n  const addUpdateExercise = async (exercises: ExerciseData[]) => {\r\n    try {\r\n      await dispatch(\r\n        updateExercises({\r\n          _id: trainingSession?._id ? trainingSession._id : \"\",\r\n          exercises: exercises,\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\r\n        exerciseDialogState.initialValues\r\n          ? \"Exercise Updated\"\r\n          : \"Exercise Added\",\r\n        \"success\"\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Failed to add exercise: \", error);\r\n    } finally {\r\n      closeDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      open={exerciseDialogState.open}\r\n      onClose={closeDialog}\r\n      scroll=\"paper\"\r\n      aria-labelledby=\"add-edit-exercise-dialog-title\"\r\n      sx={{ margin: \"0rem\" }}\r\n    >\r\n      <DialogTitle id=\"add-edit-exercise-dialog-title\">\r\n        {exerciseDialogState.initialValues ? \"Update Exercise\" : \"Add Exercise\"}\r\n        <IconButton\r\n          aria-label=\"close\"\r\n          onClick={closeDialog}\r\n          sx={{\r\n            position: \"absolute\",\r\n            right: 8,\r\n            top: 8,\r\n            color: (theme) => theme.palette.grey[500],\r\n          }}\r\n        >\r\n          <CloseIcon />\r\n        </IconButton>\r\n      </DialogTitle>\r\n      <form noValidate autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        <DialogContent\r\n          dividers={true}\r\n          sx={{ opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1 }}\r\n        >\r\n          <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n            <Controller\r\n              render={({ field, fieldState, formState }) => (\r\n                <TextField\r\n                  id=\"name\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  label=\"Exercise name\"\r\n                  variant=\"filled\"\r\n                  inputProps={{ maxLength: maxExerciseNameSigns }}\r\n                  autoFocus\r\n                  {...MuiTextFieldPropsError(field, fieldState)}\r\n                />\r\n              )}\r\n              name=\"name\"\r\n              control={control}\r\n              rules={{\r\n                required: \"Required\",\r\n                maxLength: {\r\n                  value: maxExerciseNameSigns,\r\n                  message: `Max length is ${maxExerciseNameSigns} characters`,\r\n                },\r\n              }}\r\n            />\r\n\r\n            <Controller\r\n              render={({ field, fieldState, formState }) => (\r\n                <TextField\r\n                  id=\"comment\"\r\n                  margin=\"dense\"\r\n                  fullWidth\r\n                  label=\"Exercise comment\"\r\n                  multiline\r\n                  variant=\"filled\"\r\n                  inputProps={{ maxLength: maxCommentSigns }}\r\n                  {...MuiTextFieldPropsError(field, fieldState)}\r\n                />\r\n              )}\r\n              name=\"comment\"\r\n              control={control}\r\n              rules={{\r\n                maxLength: {\r\n                  value: maxCommentSigns,\r\n                  message: `Max length is ${maxCommentSigns} characters`,\r\n                },\r\n              }}\r\n            />\r\n\r\n            {fields && fields.length > 0 ? (\r\n              <Stack>\r\n                <TableContainer\r\n                  component=\"table\"\r\n                  sx={{\r\n                    \"& .MuiTableCell-root\": {\r\n                      padding: \"0 0.25rem\",\r\n                      textAlign: \"center\",\r\n                    },\r\n                    \"& .MuiTableCell-body\": {\r\n                      padding: \"0.4rem 0.25rem\",\r\n                    },\r\n                  }}\r\n                >\r\n                  <TableHead>\r\n                    <TableRow>\r\n                      <TableCell></TableCell>\r\n                      <TableCell>Nr</TableCell>\r\n                      <TableCell>Load&nbsp;(kg)</TableCell>\r\n                      <TableCell>Quantity</TableCell>\r\n                      <TableCell></TableCell>\r\n                    </TableRow>\r\n                  </TableHead>\r\n\r\n                  <TableBody>\r\n                    {fields.map((field, index) => (\r\n                      <TableRow key={field.id}>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            type=\"button\"\r\n                            aria-label=\"delete series\"\r\n                            onClick={() => remove(index)}\r\n                          >\r\n                            <DeleteIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Typography variant=\"h5\"> {index + 1}</Typography>\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Controller\r\n                            render={({ field, fieldState, formState }) => (\r\n                              <TextField\r\n                                hiddenLabel\r\n                                size=\"small\"\r\n                                required\r\n                                variant=\"filled\"\r\n                                inputProps={{\r\n                                  maxLength: 3,\r\n                                }}\r\n                                sx={{\r\n                                  width: \"3.5rem\",\r\n                                  transform: \"translateY(0.7rem)\",\r\n                                  \"& .MuiFormHelperText-root\": {\r\n                                    ml: \"0.1rem\",\r\n                                    mt: \"0.1rem\",\r\n                                  },\r\n                                  \"& .MuiFilledInput-input\": {\r\n                                    textAlign: \"center\",\r\n                                  },\r\n                                }}\r\n                                {...MuiTextFieldPropsError(field, fieldState)}\r\n                                onChange={(e) => {\r\n                                  acceptOnlyDigits(\r\n                                    e,\r\n                                    setValue,\r\n                                    field.name,\r\n                                    true\r\n                                  );\r\n                                }}\r\n                              />\r\n                            )}\r\n                            name={`series.${index}.load` as const}\r\n                            control={control}\r\n                            rules={{\r\n                              validate: {\r\n                                inAllowRange: (value) => {\r\n                                  if (value !== \"-\") {\r\n                                    const quantity = Number(value);\r\n                                    if (\r\n                                      Number.isNaN(quantity) ||\r\n                                      quantity < 0 ||\r\n                                      quantity > 999\r\n                                    ) {\r\n                                      return \"<0,999>\";\r\n                                    }\r\n                                  }\r\n                                  return true;\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <Controller\r\n                            render={({ field, fieldState, formState }) => (\r\n                              <TextField\r\n                                hiddenLabel\r\n                                size=\"small\"\r\n                                required\r\n                                variant=\"filled\"\r\n                                inputProps={{\r\n                                  maxLength: 3,\r\n                                }}\r\n                                sx={{\r\n                                  width: \"3.5rem\",\r\n                                  transform: \"translateY(0.7rem)\",\r\n                                  \"& .MuiFormHelperText-root\": {\r\n                                    ml: \"0.1rem\",\r\n                                    mt: \"0.1rem\",\r\n                                  },\r\n                                  \"& .MuiFilledInput-input\": {\r\n                                    textAlign: \"center\",\r\n                                  },\r\n                                }}\r\n                                {...MuiTextFieldPropsError(field, fieldState)}\r\n                                onChange={(e) => {\r\n                                  acceptOnlyDigits(\r\n                                    e,\r\n                                    setValue,\r\n                                    field.name,\r\n                                    false\r\n                                  );\r\n                                }}\r\n                              />\r\n                            )}\r\n                            name={`series.${index}.quantity` as const}\r\n                            control={control}\r\n                            rules={{\r\n                              required: \"Required\",\r\n                              validate: {\r\n                                inAllowRange: (value) => {\r\n                                  const quantity = Number(value);\r\n                                  if (\r\n                                    Number.isNaN(quantity) ||\r\n                                    quantity < 1 ||\r\n                                    quantity > 999\r\n                                  ) {\r\n                                    return \"<1,999>\";\r\n                                  }\r\n                                  return true;\r\n                                },\r\n                              },\r\n                            }}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>\r\n                          <IconButton\r\n                            type=\"button\"\r\n                            aria-label=\"add series\"\r\n                            onClick={() => {\r\n                              insert(index, {\r\n                                key: nanoid(),\r\n                                load: \"\",\r\n                                quantity: \"\",\r\n                              });\r\n\r\n                              setIndexForValidationTrigger(index);\r\n                              setTriggerNewSeriesValidation((value) => !value);\r\n                            }}\r\n                          >\r\n                            <AddIcon />\r\n                          </IconButton>\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ))}\r\n                  </TableBody>\r\n                </TableContainer>\r\n              </Stack>\r\n            ) : undefined}\r\n\r\n            <Button\r\n              type=\"button\"\r\n              variant=\"outlined\"\r\n              startIcon={<AddIcon />}\r\n              onClick={() => {\r\n                append({\r\n                  key: nanoid(),\r\n                  load: \"\",\r\n                  quantity: \"\",\r\n                });\r\n\r\n                setIndexForValidationTrigger(fields.length);\r\n                setTriggerNewSeriesValidation((value) => !value);\r\n              }}\r\n              sx={{\r\n                mt: fields.length > 0 ? \"1.6rem\" : \"0.4rem\",\r\n                mb: \"0.8rem\",\r\n              }}\r\n            >\r\n              Add series\r\n            </Button>\r\n          </Stack>\r\n          <TriggerManualFieldValidation\r\n            trigger={trigger}\r\n            triggerNewSeriesValidation={triggerNewSeriesValidation}\r\n            indexForValidationTrigger={indexForValidationTrigger}\r\n          />\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button type=\"button\" onClick={closeDialog}>\r\n            Cancel\r\n          </Button>\r\n\r\n          <Button\r\n            type=\"submit\"\r\n            size=\"large\"\r\n            disabled={isSubmitting || !isValid || actionStatus === \"PROCESSING\"}\r\n          >\r\n            {actionStatus === \"PROCESSING\" && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            {exerciseDialogState.initialValues ? \"Update\" : \"Add\"}\r\n          </Button>\r\n        </DialogActions>\r\n      </form>\r\n    </Dialog>\r\n  );\r\n};\r\n\r\nexport default AddOrEditTrainingExerciseDialog;\r\n","import * as React from \"react\";\r\nimport {\r\n  selectTrainingById,\r\n  useSelectActionStatusAndError,\r\n} from \"../../store/features/trainings/trainingsSlice\";\r\nimport Exercise from \"./Exercise\";\r\nimport {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogTitle,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport DeleteIconButton from \"../../components/mui/icon-buttons/DeleteIconButton\";\r\nimport TrainingAccordion from \"./TrainingAccordion\";\r\nimport { EntityId } from \"@reduxjs/toolkit\";\r\nimport { useAppDispatch, useAppSelector } from \"../../store/hooks/hooks\";\r\nimport { deleteTrainingSession } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { TRAININGS_DEFAULT_URL_QUERY } from \"./trainingsConsts\";\r\nimport { useLocation, useSearchParams } from \"react-router-dom\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport { Box } from \"@mui/system\";\r\nimport AddOrEditTrainingExerciseDialog from \"./AddOrEditTrainingExerciseDialog\";\r\n\r\nimport { ExerciseDataFromApi } from \"../../interfaces/trainingsInterf\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\n\r\nexport interface ExerciseDialogStateType {\r\n  open: boolean;\r\n  index?: number;\r\n  initialValues?: ExerciseDataFromApi;\r\n}\r\n\r\nconst trainingSessionDateInLocal = (dateISOString: string) => {\r\n  const date = new Date(dateISOString);\r\n\r\n  const year = String(date.getFullYear());\r\n  let month = String(date.getMonth() + 1);\r\n  let day = String(date.getDate());\r\n  let hour = String(date.getHours());\r\n  let minute = String(date.getMinutes());\r\n\r\n  const addLeadingZero = (element: string) => {\r\n    if (element.length < 2) {\r\n      return \"0\" + element;\r\n    } else {\r\n      return element;\r\n    }\r\n  };\r\n\r\n  month = addLeadingZero(month);\r\n  day = addLeadingZero(day);\r\n  hour = addLeadingZero(hour);\r\n  minute = addLeadingZero(minute);\r\n\r\n  return `${day}-${month}-${year} ${hour}:${minute}`;\r\n};\r\n\r\nconst Training = ({ _id }: { _id: EntityId }) => {\r\n  const trainingSession = useAppSelector((state) =>\r\n    selectTrainingById(state, _id)\r\n  );\r\n  const [openDeleteDialog, setOpenDeleteDialog] = React.useState(false);\r\n  const [exerciseDialogState, setExerciseDialogState] =\r\n    React.useState<ExerciseDialogStateType>({\r\n      open: false,\r\n    });\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [, setSearchParams] = useSearchParams();\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const accordionSummaryId = `session_${_id}`;\r\n\r\n  let accordionSummaryText = \"\";\r\n\r\n  if (trainingSession) {\r\n    accordionSummaryText = trainingSessionDateInLocal(trainingSession.date);\r\n  }\r\n\r\n  const deleteButtonOnClickHandle = (\r\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>\r\n  ) => {\r\n    e.stopPropagation();\r\n    setOpenDeleteDialog(true);\r\n  };\r\n\r\n  const handleCloseDialog = () => {\r\n    setOpenDeleteDialog(false);\r\n  };\r\n\r\n  const handleOnDeleteTrainingSession = async () => {\r\n    try {\r\n      await dispatch(\r\n        deleteTrainingSession({\r\n          _id,\r\n          query: location.search\r\n            ? location.search\r\n            : TRAININGS_DEFAULT_URL_QUERY,\r\n          setSearchParams,\r\n        })\r\n      );\r\n      setSnackbar(\"Training session deleted\", \"info\");\r\n    } catch (error) {\r\n      console.error(\"Failed to delete training session:\", error);\r\n    } finally {\r\n      handleCloseDialog();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Grid component=\"li\" item sx={{ maxWidth: \"100%\" }}>\r\n      <TrainingAccordion\r\n        summaryId={accordionSummaryId}\r\n        summaryText={accordionSummaryText}\r\n        summaryIcons={<DeleteIconButton onClick={deleteButtonOnClickHandle} />}\r\n      >\r\n        {trainingSession?.exercises.map((exercise, index) => (\r\n          <Exercise\r\n            key={exercise._id}\r\n            exercise={exercise}\r\n            training_id={trainingSession._id}\r\n            exerciseIndex={index}\r\n            exercises={trainingSession.exercises}\r\n            setExerciseDialogState={setExerciseDialogState}\r\n          />\r\n        ))}\r\n\r\n        <Box\r\n          sx={{\r\n            display: \"flex\",\r\n            justifyContent: \"center\",\r\n            mt: \"1.5rem\",\r\n            mb: \"0.5rem\",\r\n            \"&:first-of-type\": { m: \"1rem 0\" },\r\n          }}\r\n        >\r\n          <Button\r\n            variant=\"outlined\"\r\n            startIcon={<AddIcon />}\r\n            onClick={() =>\r\n              setExerciseDialogState({\r\n                open: true,\r\n              })\r\n            }\r\n          >\r\n            Add Exercise\r\n          </Button>\r\n        </Box>\r\n      </TrainingAccordion>\r\n\r\n      {exerciseDialogState.open && (\r\n        <AddOrEditTrainingExerciseDialog\r\n          exerciseDialogState={exerciseDialogState}\r\n          setExerciseDialogState={setExerciseDialogState}\r\n          trainingSession={trainingSession}\r\n        />\r\n      )}\r\n      <Dialog\r\n        open={openDeleteDialog}\r\n        onClose={handleCloseDialog}\r\n        aria-labelledby=\"delete-training-session-dialog-title\"\r\n        aria-describedby=\"delete-training-session-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"delete-training-session-dialog-title\">\r\n          Delete training confirmation\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"delete-training-session-dialog-description\">\r\n            Do you really want to delete training from{\" \"}\r\n            <strong>\r\n              {trainingSession\r\n                ? trainingSessionDateInLocal(trainingSession.date)\r\n                : \"\"}\r\n            </strong>\r\n            ?\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button onClick={handleCloseDialog}>No</Button>\r\n          <Button\r\n            onClick={handleOnDeleteTrainingSession}\r\n            autoFocus\r\n            disabled={actionStatus !== \"IDLE\"}\r\n          >\r\n            {actionStatus === \"PROCESSING\" && (\r\n              <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n            )}\r\n            Yes\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default React.memo(Training);\r\n","import { useEffect, useState } from \"react\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport {\r\n  useSelectActionStatusAndError,\r\n  useSelectTrainingIds,\r\n} from \"../../store/features/trainings/trainingsSlice\";\r\nimport Training from \"./Training\";\r\nimport { fetchTrainings } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { Alert, Box, Grid, Typography } from \"@mui/material\";\r\n\r\nimport CircularProgress from \"@mui/material/CircularProgress\";\r\n\r\nfunction TrainingList() {\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n  const trainingsIds = useSelectTrainingIds();\r\n\r\n  const dispatch = useAppDispatch();\r\n  const [searchParams] = useSearchParams();\r\n\r\n  const [firstFetchDone, setFirstFetchDone] = useState(false);\r\n\r\n  const searchParamsAsString = searchParams.toString();\r\n  useEffect(() => {\r\n    let promise: any = null;\r\n\r\n    const fetch = async () => {\r\n      try {\r\n        promise = dispatch(\r\n          fetchTrainings({ searchParams: searchParamsAsString })\r\n        );\r\n        await promise;\r\n      } finally {\r\n        if (!firstFetchDone) setFirstFetchDone(true);\r\n      }\r\n    };\r\n\r\n    fetch();\r\n\r\n    return () => {\r\n      if (typeof promise?.abort === \"function\") {\r\n        promise.abort();\r\n      }\r\n    };\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [searchParamsAsString, dispatch]);\r\n\r\n  let renderedElements = null;\r\n\r\n  if (actionStatus === \"FAILED\" && firstFetchDone) {\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\",\r\n          width: \"100%\",\r\n        }}\r\n      >\r\n        <Alert variant=\"filled\" severity=\"error\">\r\n          Operation failed, no data.\r\n        </Alert>\r\n      </Box>\r\n    );\r\n  } else {\r\n    let trainingList = null;\r\n\r\n    if (firstFetchDone) {\r\n      if (trainingsIds.length) {\r\n        trainingList = (\r\n          <Box\r\n            sx={{\r\n              opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1,\r\n            }}\r\n          >\r\n            <Grid\r\n              component=\"ul\"\r\n              container\r\n              direction=\"column\"\r\n              rowSpacing={{ xs: 1, sm: 2, md: 3 }}\r\n              sx={{\r\n                listStyle: \"none\",\r\n                \"& >.MuiGrid-item\": { maxWidth: \"100%\" },\r\n              }}\r\n            >\r\n              {trainingsIds?.map((_id) => (\r\n                <Training key={_id} _id={_id} />\r\n              ))}\r\n            </Grid>\r\n          </Box>\r\n        );\r\n      } else if (actionStatus === \"IDLE\") {\r\n        trainingList = (\r\n          <Box\r\n            sx={{\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              width: \"100%\",\r\n            }}\r\n          >\r\n            <Alert variant=\"filled\" severity=\"info\">\r\n              No data.\r\n            </Alert>\r\n          </Box>\r\n        );\r\n      }\r\n    }\r\n\r\n    renderedElements = (\r\n      <Box\r\n        sx={{\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        {trainingList}\r\n        {actionStatus === \"PROCESSING\" && !trainingsIds.length ? (\r\n          <Box\r\n            sx={{\r\n              position: \"absolute\",\r\n              top: 0,\r\n              left: 0,\r\n              right: 0,\r\n              display: \"flex\",\r\n              justifyContent: \"center\",\r\n              alignItems: \"center\",\r\n              flexDirection: \"column\",\r\n              minHeight: \"20rem\",\r\n              height: \"100%\",\r\n            }}\r\n          >\r\n            <CircularProgress size={120} sx={{ marginBottom: \"1rem\" }} />\r\n            <Typography>Loading...</Typography>\r\n          </Box>\r\n        ) : null}\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return <Box mt=\"1.5rem\">{renderedElements}</Box>;\r\n}\r\n\r\nexport default TrainingList;\r\n","import {\r\n  Button,\r\n  CircularProgress,\r\n  Dialog,\r\n  DialogActions,\r\n  DialogContent,\r\n  DialogTitle,\r\n  Fab,\r\n  IconButton,\r\n  Stack,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { ActionStatus, OrNull } from \"../../interfaces/generalInterf\";\r\nimport { addTrainingSession } from \"../../store/features/trainings/trainingsActionCreators\";\r\nimport { useAppDispatch } from \"../../store/hooks/hooks\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nimport { commonDateValidation, DatePickerField } from \"./FilterByDate\";\r\nimport { MuiTextFieldPropsError } from \"../auth/AuthSide\";\r\nimport { useSelectActionStatusAndError } from \"../../store/features/trainings/trainingsSlice\";\r\nimport { useSetSnackbarContext } from \"../../components/snackbar-provider/SnackbarProvider\";\r\nimport { useForm, Controller, SubmitHandler } from \"react-hook-form\";\r\n\r\nconst maxCommentSigns = 255;\r\n\r\ninterface FormDataType {\r\n  date: OrNull<Date>;\r\n  comment: \"\";\r\n}\r\n\r\nconst AddTrainingSession = () => {\r\n  const [actionStatus] = useSelectActionStatusAndError();\r\n\r\n  const [, setAddRequestStatus] = useState<ActionStatus>(\"IDLE\");\r\n\r\n  const dispatch = useAppDispatch();\r\n  const location = useLocation();\r\n  const [addTrainingDialogOpen, setAddTrainingDialogOpen] = useState(false);\r\n  const requestInProgress = useRef(false);\r\n\r\n  const {\r\n    handleSubmit,\r\n    control,\r\n    formState: { isValid, isSubmitting },\r\n  } = useForm<FormDataType>({\r\n    defaultValues: {\r\n      date: new Date(),\r\n      comment: \"\",\r\n    },\r\n    mode: \"all\",\r\n    criteriaMode: \"firstError\",\r\n    shouldUnregister: true,\r\n  });\r\n\r\n  const setSnackbar = useSetSnackbarContext();\r\n\r\n  const handleOpenAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(true);\r\n  };\r\n\r\n  const handleCloseAddTrainingDialog = () => {\r\n    setAddTrainingDialogOpen(false);\r\n  };\r\n\r\n  const createTrainingSession = async (date: Date, comment: string) => {\r\n    try {\r\n      setAddRequestStatus(\"PROCESSING\");\r\n\r\n      await dispatch(\r\n        addTrainingSession({\r\n          trainingSession: { date: date.toISOString(), comment, exercises: [] },\r\n          urlQuery: location.search,\r\n        })\r\n      ).unwrap();\r\n      setSnackbar(\"Training session added\", \"success\");\r\n    } catch (error) {\r\n      console.error(\"Failed to add new training session:\", error);\r\n    } finally {\r\n      setAddRequestStatus(\"IDLE\");\r\n      handleCloseAddTrainingDialog();\r\n    }\r\n  };\r\n\r\n  const onSubmit: SubmitHandler<FormDataType> = async (values) => {\r\n    // protection against submitting form twice\r\n    if (!requestInProgress.current) {\r\n      requestInProgress.current = true;\r\n\r\n      try {\r\n        await createTrainingSession(values.date!, values.comment);\r\n      } finally {\r\n        requestInProgress.current = false;\r\n        handleCloseAddTrainingDialog();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Fab\r\n        size=\"medium\"\r\n        color=\"secondary\"\r\n        aria-label=\"add training session\"\r\n        sx={{ marginLeft: \"auto\" }}\r\n        onClick={handleOpenAddTrainingDialog}\r\n      >\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog\r\n        open={addTrainingDialogOpen}\r\n        onClose={handleCloseAddTrainingDialog}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"add-training-session-dialog-title\"\r\n        sx={{ margin: \"0rem\" }}\r\n      >\r\n        <DialogTitle id=\"add-training-session-dialog-title\">\r\n          Add Training Session\r\n          <IconButton\r\n            aria-label=\"close\"\r\n            onClick={handleCloseAddTrainingDialog}\r\n            sx={{\r\n              position: \"absolute\",\r\n              right: 8,\r\n              top: 8,\r\n              color: (theme) => theme.palette.grey[500],\r\n            }}\r\n          >\r\n            <CloseIcon />\r\n          </IconButton>\r\n        </DialogTitle>\r\n\r\n        <form noValidate onSubmit={handleSubmit(onSubmit)}>\r\n          <DialogContent\r\n            dividers={true}\r\n            sx={{ opacity: actionStatus === \"PROCESSING\" ? 0.5 : 1 }}\r\n          >\r\n            <Stack spacing={0} direction=\"column\" alignItems=\"center\">\r\n              <Controller\r\n                render={({ field, fieldState, formState }) => (\r\n                  <DatePickerField field={field} fieldState={fieldState} />\r\n                )}\r\n                name=\"date\"\r\n                control={control}\r\n                rules={{\r\n                  validate: {\r\n                    ...commonDateValidation,\r\n                  },\r\n                }}\r\n              />\r\n\r\n              <Controller\r\n                render={({ field, fieldState, formState }) => (\r\n                  <TextField\r\n                    id=\"comment\"\r\n                    margin=\"normal\"\r\n                    fullWidth\r\n                    label=\"Comment\"\r\n                    multiline\r\n                    variant=\"filled\"\r\n                    autoFocus\r\n                    inputProps={{ maxLength: maxCommentSigns }}\r\n                    {...MuiTextFieldPropsError(field, fieldState)}\r\n                  />\r\n                )}\r\n                name=\"comment\"\r\n                control={control}\r\n                rules={{\r\n                  maxLength: {\r\n                    value: maxCommentSigns,\r\n                    message: `Max length is ${maxCommentSigns} characters`,\r\n                  },\r\n                }}\r\n              />\r\n            </Stack>\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button type=\"button\" onClick={handleCloseAddTrainingDialog}>\r\n              Cancel\r\n            </Button>\r\n\r\n            <Button\r\n              type=\"submit\"\r\n              size=\"large\"\r\n              disabled={\r\n                isSubmitting || !isValid || actionStatus === \"PROCESSING\"\r\n              }\r\n            >\r\n              {actionStatus === \"PROCESSING\" && (\r\n                <CircularProgress size={24} sx={{ mr: \"0.5rem\" }} />\r\n              )}\r\n              Add\r\n            </Button>\r\n          </DialogActions>\r\n        </form>\r\n      </Dialog>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddTrainingSession;\r\n","import { useLayoutEffect, useState } from \"react\";\r\n\r\n/**\r\n * hook allows to use a useState, and updates its value when its different then a value in a url\r\n *\r\n * @param valueInUrl: value written from url\r\n * @returns the same as useState\r\n */\r\nconst useValueDependsOnUrl = <I,>(valueInUrl: I) => {\r\n  const [value, setValue] = useState(() => valueInUrl);\r\n\r\n  // updating values when url manually changed\r\n  useLayoutEffect(() => {\r\n    if (value !== valueInUrl) {\r\n      setValue(valueInUrl);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [valueInUrl]);\r\n\r\n  return [value, setValue] as const;\r\n};\r\n\r\nexport default useValueDependsOnUrl;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport tryConvertToFiniteNumber from \"../../auxiliary/tryConvertToFiniteNumber\";\r\nimport updateUrlQuery from \"../../auxiliary/updateUrlQuery\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport {\r\n  DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n  isItemsPerPageType,\r\n  TrainingsUrlQuery_Key_ItemsPerPage_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  queryValueChecking,\r\n  SIX_ITEMS_PER_PAGE,\r\n  NINE_ITEMS_PER_PAGE,\r\n} from \"./trainingsConsts\";\r\n\r\nconst itemsPerPageChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_TRAININGS_ITEMS_PER_PAGE,\r\n    isItemsPerPageType\r\n  );\r\n};\r\n\r\nexport const updateUrl = (\r\n  searchParams: URLSearchParams,\r\n  setSearchParamsFn: ReturnType<typeof useSearchParams>[1],\r\n  query: string,\r\n  value: string\r\n) => {\r\n  let searchUrl = updateUrlQuery(searchParams.toString(), query, value);\r\n  searchUrl = updateUrlQuery(searchUrl, TRAININGS_URL_QUERY_KEYS.page);\r\n  setSearchParamsFn(searchUrl);\r\n};\r\n\r\nconst ItemsOnPage = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** items per page form url ****\r\n  const itemsPerPageUrl = itemsPerPageChecking(\r\n    tryConvertToFiniteNumber(searchParams.get(TRAININGS_URL_QUERY_KEYS.items))\r\n  );\r\n\r\n  const [nrOfItemsOnPage, setNrOfItemsOnPage] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_ItemsPerPage_Type>(\r\n      itemsPerPageUrl\r\n    );\r\n\r\n  const onItemsPerPageChanged = (e: SelectChangeEvent<number>) => {\r\n    const nrOfItems = itemsPerPageChecking(Number(e.target.value));\r\n\r\n    setNrOfItemsOnPage(nrOfItems);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.items,\r\n      String(nrOfItems)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 1, minWidth: \"5rem\" }}>\r\n      <InputLabel id=\"nr-of-items-on-page-label\">Show Items</InputLabel>\r\n      <Select\r\n        labelId=\"nr-of-items-on-page-label\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={nrOfItemsOnPage}\r\n        onChange={onItemsPerPageChanged}\r\n        label=\"Show Items\"\r\n      >\r\n        <MenuItem value={DEFAULT_TRAININGS_ITEMS_PER_PAGE}>\r\n          {DEFAULT_TRAININGS_ITEMS_PER_PAGE}\r\n        </MenuItem>\r\n        <MenuItem value={SIX_ITEMS_PER_PAGE}>{SIX_ITEMS_PER_PAGE}</MenuItem>\r\n        <MenuItem value={NINE_ITEMS_PER_PAGE}>{NINE_ITEMS_PER_PAGE}</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default ItemsOnPage;\r\n","import {\r\n  FormControl,\r\n  InputLabel,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from \"@mui/material\";\r\n\r\nimport { useSearchParams } from \"react-router-dom\";\r\nimport useValueDependsOnUrl from \"../../components/hooks/useValueDependsOnUrl\";\r\nimport { updateUrl } from \"./ItemsOnPage\";\r\nimport {\r\n  DEFAULT_SORT_DATE_ORDER,\r\n  TrainingsUrlQuery_Key_SortDateOrder_Type,\r\n  TRAININGS_URL_QUERY_KEYS,\r\n  isSortDateOrderType,\r\n  queryValueChecking,\r\n} from \"./trainingsConsts\";\r\n\r\nconst sortDateOrderChecking = (value: any) => {\r\n  return queryValueChecking(\r\n    value,\r\n    DEFAULT_SORT_DATE_ORDER,\r\n    isSortDateOrderType\r\n  );\r\n};\r\n\r\nconst SortingOrder = () => {\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  // **** sort date order form url ****\r\n  const sortDateOrderUrl = sortDateOrderChecking(\r\n    searchParams.get(TRAININGS_URL_QUERY_KEYS.sortDateOrder)\r\n  );\r\n\r\n  const [sortDateOrder, setSortDateOrder] =\r\n    useValueDependsOnUrl<TrainingsUrlQuery_Key_SortDateOrder_Type>(\r\n      sortDateOrderUrl\r\n    );\r\n\r\n  const onSortOrderChanged = (e: SelectChangeEvent<string>) => {\r\n    const sortOrderTemp = sortDateOrderChecking(e.target.value);\r\n\r\n    setSortDateOrder(sortOrderTemp);\r\n    updateUrl(\r\n      searchParams,\r\n      setSearchParams,\r\n      TRAININGS_URL_QUERY_KEYS.sortDateOrder,\r\n      sortOrderTemp\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"standard\" sx={{ m: 0, minWidth: 120 }}>\r\n      <InputLabel id=\"trainings-sort-order\">Sort</InputLabel>\r\n      <Select\r\n        labelId=\"trainings-sort-order\"\r\n        id=\"nr-of-items-on-page\"\r\n        value={sortDateOrder}\r\n        onChange={onSortOrderChanged}\r\n        label=\"Sort\"\r\n      >\r\n        <MenuItem value=\"date-descending\">Date descending</MenuItem>\r\n        <MenuItem value=\"date-ascending\">Date ascending</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default SortingOrder;\r\n","import { Box, Stack, Typography, useMediaQuery, useTheme } from \"@mui/material\";\r\n\r\nimport Paginate from \"./Paginate\";\r\nimport FilterByDate from \"./FilterByDate\";\r\nimport TrainingList from \"./TrainingList\";\r\nimport ExpandMoreIcon from \"@mui/icons-material/ExpandMore\";\r\n\r\nimport AddTrainingSession from \"./AddTrainingSession\";\r\nimport {\r\n  AppAccordion,\r\n  AppAccordionDetails,\r\n  AppAccordionSummary,\r\n} from \"../../components/mui/app-accordion/AppAccordion\";\r\nimport useUpdateTitle from \"../../components/title-provider/useUpdateTitle\";\r\nimport ItemsOnPage from \"./ItemsOnPage\";\r\nimport SortingOrder from \"./SortingOrder\";\r\n\r\nconst Trainings = () => {\r\n  const theme = useTheme();\r\n  const matchUpLg = useMediaQuery(theme.breakpoints.up(\"lg\"), {\r\n    noSsr: true,\r\n  });\r\n\r\n  useUpdateTitle(\"Trainings\");\r\n\r\n  return (\r\n    <>\r\n      <Box component=\"section\">\r\n        <AppAccordion sx={{ mb: 3 }}>\r\n          <AppAccordionSummary\r\n            expandIcon={<ExpandMoreIcon />}\r\n            aria-controls=\"filter-content\"\r\n            id=\"filter-header\"\r\n          >\r\n            <Typography>Filters</Typography>\r\n          </AppAccordionSummary>\r\n          <AppAccordionDetails\r\n            sx={{ mb: { xs: \"1.3rem\", lg: \"0.5rem\" }, pt: \"1.5rem\" }}\r\n          >\r\n            <Stack\r\n              direction={matchUpLg ? \"row\" : \"column\"}\r\n              alignItems={matchUpLg ? \"start\" : \"center\"}\r\n              justifyContent={matchUpLg ? \"space-between\" : \"center\"}\r\n              spacing={5}\r\n              sx={{ flexWrap: \"wrap\" }}\r\n            >\r\n              <FilterByDate />\r\n\r\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2} sx={{}}>\r\n                <ItemsOnPage />\r\n                <SortingOrder />\r\n              </Stack>\r\n            </Stack>\r\n          </AppAccordionDetails>\r\n        </AppAccordion>\r\n\r\n        <Stack\r\n          direction=\"row\"\r\n          alignItems=\"center\"\r\n          sx={{\r\n            mt: \"1rem\",\r\n          }}\r\n        >\r\n          <Paginate />\r\n          <AddTrainingSession />\r\n        </Stack>\r\n      </Box>\r\n      <Box component=\"section\" sx={{ maxWidth: \"100%\", mt: \"1rem\" }}>\r\n        <Typography variant=\"h5\" component=\"h1\">\r\n          Trainings:\r\n        </Typography>\r\n        <TrainingList />\r\n      </Box>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Trainings;\r\n"],"names":["title","setTitleContext","useSetTitleContext","useEffect","numberOfPages","useAppSelector","selectNumberOfPages","useSearchParams","searchParams","currentPage","tryConvertToFiniteNumber","get","TRAININGS_URL_QUERY_KEYS","Pagination","size","page","count","color","siblingCount","renderItem","params","query","updateUrlQuery","toString","String","PaginationItem","component","Link","to","dateToString","date","year","getFullYear","month","getMonth","day","getDate","yearString","monthString","length","dayString","isDateValid","Date","Number","isNaN","minAllowedDate","UTC","ClearFilterByDate","removeFilterByDateFromUrl","reset","IconButton","type","onClick","HighlightOff","sx","fontSize","useInitializeDatesFromUrl","dateFilter","setValue","updateDateInFormikValues","urlDate","propName","dateString","dateFragments","match","stringToDate","shouldValidate","dates","commonDateValidation","validDate","notFutureDate","notBeforeMinAllowedDate","toLocaleString","timeZone","split","DatePickerField","field","fieldState","other","DatePicker","mask","disableFuture","allowSameDateSelection","openTo","views","minDate","value","onChange","inputRef","ref","renderInput","TextField","name","variant","error","invalid","helperText","message","onBlur","theme","useTheme","matchDownSm","useMediaQuery","breakpoints","down","noSsr","setSearchParams","useForm","defaultValues","mode","criteriaMode","shouldUnregister","handleSubmit","control","startDate","watch","onSubmit","values","endDate","searchUrl","Box","pt","flexGrow","noValidate","Stack","spacing","direction","alignItems","justifyContent","flexWrap","render","formState","label","rules","validate","afterStartDate","Button","element","index","TableRow","TableCell","load","quantity","AppAccordion","styled","props","Accordion","elevation","square","border","palette","divider","display","AppAccordionSummary","AccordionSummary","expandIcon","ArrowForwardIosSharp","backgroundColor","flexDirection","AppAccordionDetails","AccordionDetails","padding","borderTop","summaryId","summaryText","summaryIcons","children","useState","expanded","setExpanded","TransitionProps","unmountOnExit","maxWidth","id","ExpandMore","Typography","textOverflow","overflow","exercise","training_id","exerciseIndex","exercises","setExerciseDialogState","series","map","join","openDeleteDialog","setOpenDeleteDialog","dispatch","useAppDispatch","location","useLocation","useSelectActionStatusAndError","actionStatus","setSnackbar","useSetSnackbarContext","accordionSummaryId","_id","handleCloseDialog","handleOnDeleteExercise","exercises_shallowCopyForMutation","splice","updateExercises","urlQuery","search","unwrap","console","position","width","e","stopPropagation","SpeedDial","ariaLabel","FabProps","top","right","transform","height","minHeight","icon","MoreVert","SpeedDialAction","Delete","tooltipTitle","Add","open","Edit","initialValues","TableContainer","pl","pr","textAlign","TableHead","TableBody","Dialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","disabled","CircularProgress","mr","TriggerManualFieldValidation","trigger","triggerNewSeriesValidation","indexForValidationTrigger","acceptOnlyDigits","filedName","allowDash","target","exerciseDialogState","trainingSession","requestInProgress","useRef","setIndexForValidationTrigger","setTriggerNewSeriesValidation","comment","reduce","previousValue","currentValue","concat","key","nanoid","isSubmitting","isValid","useFieldArray","fields","append","remove","insert","current","undefined","addUpdateExercise","closeDialog","scroll","margin","grey","Close","autoComplete","dividers","opacity","fullWidth","inputProps","maxLength","MuiTextFieldPropsError","required","multiline","hiddenLabel","ml","mt","inAllowRange","startIcon","mb","trainingSessionDateInLocal","dateISOString","hour","getHours","minute","getMinutes","addLeadingZero","Training","state","selectTrainingById","React","accordionSummaryText","handleOnDeleteTrainingSession","deleteTrainingSession","TRAININGS_DEFAULT_URL_QUERY","Grid","item","m","trainingsIds","useSelectTrainingIds","firstFetchDone","setFirstFetchDone","searchParamsAsString","promise","fetch","fetchTrainings","abort","renderedElements","Alert","severity","trainingList","container","rowSpacing","xs","sm","md","listStyle","left","marginBottom","setAddRequestStatus","addTrainingDialogOpen","setAddTrainingDialogOpen","handleCloseAddTrainingDialog","createTrainingSession","addTrainingSession","toISOString","Fab","marginLeft","valueInUrl","useLayoutEffect","itemsPerPageChecking","queryValueChecking","DEFAULT_TRAININGS_ITEMS_PER_PAGE","isItemsPerPageType","updateUrl","setSearchParamsFn","itemsPerPageUrl","useValueDependsOnUrl","nrOfItemsOnPage","setNrOfItemsOnPage","FormControl","minWidth","InputLabel","Select","labelId","nrOfItems","MenuItem","SIX_ITEMS_PER_PAGE","NINE_ITEMS_PER_PAGE","sortDateOrderChecking","DEFAULT_SORT_DATE_ORDER","isSortDateOrderType","sortDateOrderUrl","sortDateOrder","setSortDateOrder","sortOrderTemp","matchUpLg","up","useUpdateTitle","lg"],"sourceRoot":""}